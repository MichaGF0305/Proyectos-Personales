{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ojjz28fjNUHT"
      },
      "source": [
        "##Librerías a Utilizar"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 263,
      "metadata": {
        "id": "_3j2IDZwNWyH"
      },
      "outputs": [],
      "source": [
        "import os\n",
        "import pandas as pd\n",
        "import json\n",
        "import matplotlib.pyplot as plt\n",
        "plt.style.use('ggplot')\n",
        "import random\n",
        "import numpy as np\n",
        "import pprint\n",
        "import copy\n",
        "import seaborn as sns\n",
        "import logging\n",
        "import ast\n",
        "import time\n",
        "import psutil\n",
        "from collections import Counter\n",
        "from google.colab import drive"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Mq1gxAqvNZlg"
      },
      "source": [
        "## Accediendo a la carpeta en Drive"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 264,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 940
        },
        "id": "esiW3JQ7OA-K",
        "outputId": "bf9a17dd-110c-48c1-956e-e3e7e89b82b3"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "'/content/drive/MyDrive/Proyecto - Compra Genética'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "\n",
        "drive.mount('/content/drive')\n",
        "\n",
        "my_drive_content = os.listdir('/content/drive/MyDrive/')\n",
        "#display(my_drive_content)\n",
        "my_drive = \"/content/drive/MyDrive/\"\n",
        "compra_genetica = os.path.join(my_drive, \"Proyecto - Compra Genética\")\n",
        "display(compra_genetica)\n",
        "os.listdir(compra_genetica)\n",
        "problem_set_file = os.path.join(compra_genetica, \"problemset\")\n",
        "os.listdir(problem_set_file)\n",
        "\n",
        "problem_set_path = os.path.join(problem_set_file, \"problemset.xlsx\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 264,
      "metadata": {
        "id": "in6UyDJ7NkZJ"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "fNQT1Vk1Nk8F"
      },
      "source": [
        "## Leyendo el problemset"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 265,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 469
        },
        "id": "UPQ4vn_DNsxt",
        "outputId": "2cef3408-341c-4338-faa8-40762a8a96f3"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   problem_cluster  \\\n",
              "0    small-3s-4p-f1_10-q1_4-random   \n",
              "1    small-3s-4p-f1_10-q1_4-random   \n",
              "2    small-3s-4p-f1_10-q1_4-random   \n",
              "3    small-3s-4p-f1_10-q1_4-random   \n",
              "4  small-5s-10p-f0_10-q1_10-random   \n",
              "\n",
              "                                             catalog  fuel_price  \\\n",
              "0  problemset/in/small-3s-4p-f1_10-q1_4-random_ca...           1   \n",
              "1  problemset/in/small-3s-4p-f1_10-q1_4-random_ca...           1   \n",
              "2  problemset/in/small-3s-4p-f1_10-q1_4-random_ca...           6   \n",
              "3  problemset/in/small-3s-4p-f1_10-q1_4-random_ca...           6   \n",
              "4  problemset/in/small-5s-10p-f0_10-q1_10-random_...           0   \n",
              "\n",
              "                                               query  \\\n",
              "0                          ['Purificadores de aire']   \n",
              "1  ['Purificadores de aire', 'Aceite de girasol',...   \n",
              "2                          ['Purificadores de aire']   \n",
              "3  ['Purificadores de aire', 'Pasta de dientes', ...   \n",
              "4                                    ['Televisores']   \n",
              "\n",
              "                                   qbf best solution  qbf best value  \\\n",
              "0  [array(['Supermercado Nacional', 'Purificadore...         4401.99   \n",
              "1  [array(['Jumbo', 'Aceite de girasol'], dtype=o...        11270.96   \n",
              "2  [array(['Supermercado Nacional', 'Purificadore...         4501.99   \n",
              "3  [array(['Jumbo', 'Pasta de dientes'], dtype=ob...        11400.96   \n",
              "4  [array(['Super Pola', 'Televisores'], dtype=ob...          619.99   \n",
              "\n",
              "                                    ga best solution  ga best value  \\\n",
              "0  [array(['Supermercado Nacional', 'Purificadore...        4401.99   \n",
              "1  [array(['Supermercado Nacional', 'Purificadore...       11283.96   \n",
              "2  [array(['Supermercado Nacional', 'Purificadore...        4501.99   \n",
              "3  [array(['Supermercado Nacional', 'Purificadore...       11478.96   \n",
              "4  [array(['Super Pola', 'Televisores'], dtype=ob...         619.99   \n",
              "\n",
              "                                    gc best solution  gc best value  \\\n",
              "0  [array(['Supermercado Nacional', 'Purificadore...        4401.99   \n",
              "1  [array(['Jumbo', 'Aceite de girasol'], dtype=o...       11270.96   \n",
              "2  [array(['Supermercado Nacional', 'Purificadore...        4501.99   \n",
              "3  [array(['Jumbo', 'Pasta de dientes'], dtype=ob...       11400.96   \n",
              "4  [array(['Super Pola', 'Televisores'], dtype=ob...         619.99   \n",
              "\n",
              "                                    gn best solution  gn best value  \n",
              "0  [array(['Supermercado Nacional', 'Purificadore...        4401.99  \n",
              "1  [array(['Supermercado Nacional', 'Alfombras'],...       12817.96  \n",
              "2  [array(['Supermercado Nacional', 'Purificadore...        4501.99  \n",
              "3  [array(['Supermercado Nacional', 'Alfombras'],...       12917.96  \n",
              "4    [array(['Bravo', 'Televisores'], dtype=object)]        3638.99  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f48f3714-7a86-4e5e-97fc-5a7d66eb6a6c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>problem_cluster</th>\n",
              "      <th>catalog</th>\n",
              "      <th>fuel_price</th>\n",
              "      <th>query</th>\n",
              "      <th>qbf best solution</th>\n",
              "      <th>qbf best value</th>\n",
              "      <th>ga best solution</th>\n",
              "      <th>ga best value</th>\n",
              "      <th>gc best solution</th>\n",
              "      <th>gc best value</th>\n",
              "      <th>gn best solution</th>\n",
              "      <th>gn best value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>problemset/in/small-3s-4p-f1_10-q1_4-random_ca...</td>\n",
              "      <td>1</td>\n",
              "      <td>['Purificadores de aire']</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4401.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4401.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4401.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4401.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>problemset/in/small-3s-4p-f1_10-q1_4-random_ca...</td>\n",
              "      <td>1</td>\n",
              "      <td>['Purificadores de aire', 'Aceite de girasol',...</td>\n",
              "      <td>[array(['Jumbo', 'Aceite de girasol'], dtype=o...</td>\n",
              "      <td>11270.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>11283.96</td>\n",
              "      <td>[array(['Jumbo', 'Aceite de girasol'], dtype=o...</td>\n",
              "      <td>11270.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Alfombras'],...</td>\n",
              "      <td>12817.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>problemset/in/small-3s-4p-f1_10-q1_4-random_ca...</td>\n",
              "      <td>6</td>\n",
              "      <td>['Purificadores de aire']</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4501.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4501.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4501.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4501.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>problemset/in/small-3s-4p-f1_10-q1_4-random_ca...</td>\n",
              "      <td>6</td>\n",
              "      <td>['Purificadores de aire', 'Pasta de dientes', ...</td>\n",
              "      <td>[array(['Jumbo', 'Pasta de dientes'], dtype=ob...</td>\n",
              "      <td>11400.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>11478.96</td>\n",
              "      <td>[array(['Jumbo', 'Pasta de dientes'], dtype=ob...</td>\n",
              "      <td>11400.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Alfombras'],...</td>\n",
              "      <td>12917.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>small-5s-10p-f0_10-q1_10-random</td>\n",
              "      <td>problemset/in/small-5s-10p-f0_10-q1_10-random_...</td>\n",
              "      <td>0</td>\n",
              "      <td>['Televisores']</td>\n",
              "      <td>[array(['Super Pola', 'Televisores'], dtype=ob...</td>\n",
              "      <td>619.99</td>\n",
              "      <td>[array(['Super Pola', 'Televisores'], dtype=ob...</td>\n",
              "      <td>619.99</td>\n",
              "      <td>[array(['Super Pola', 'Televisores'], dtype=ob...</td>\n",
              "      <td>619.99</td>\n",
              "      <td>[array(['Bravo', 'Televisores'], dtype=object)]</td>\n",
              "      <td>3638.99</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f48f3714-7a86-4e5e-97fc-5a7d66eb6a6c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f48f3714-7a86-4e5e-97fc-5a7d66eb6a6c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f48f3714-7a86-4e5e-97fc-5a7d66eb6a6c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-eedab1d5-3ea9-41fa-ac85-c58302ae3c4f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eedab1d5-3ea9-41fa-ac85-c58302ae3c4f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-eedab1d5-3ea9-41fa-ac85-c58302ae3c4f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "problem_set",
              "summary": "{\n  \"name\": \"problem_set\",\n  \"rows\": 136,\n  \"fields\": [\n    {\n      \"column\": \"problem_cluster\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"medium-30s-80p-f0_10-q1_20-random\",\n          \"small-5s-10p-f0_10-q1_10-random\",\n          \"small-5s-10p-f0_10-q1_10-parque\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"catalog\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"problemset/in/medium-30s-80p-f0_10-q1_20-random_catalog.xlsx\",\n          \"problemset/in/small-5s-10p-f0_10-q1_10-random_catalog.xlsx\",\n          \"problemset/in/small-5s-10p-f0_10-q1_10-parque_catalog.xlsx\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fuel_price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 9,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          6,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"query\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 130,\n        \"samples\": [\n          \"['Pistachos', 'Aftershave', 'Huevos', 'Agua purificada']\",\n          \"['Mermelada de fresa', 'Joyas', 'Sombra de ojos', 'Berenjenas', 'Az\\u00facar blanca', 'Helado de chocolate', 'Aretes']\",\n          \"['Reproductores de DVD', 'Suavizante de telas', 'Pulseras', 'Salsa ranchera']\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"qbf best solution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 94,\n        \"samples\": [\n          \"[array(['Bravo', 'Mermelada de fresa'], dtype=object)\\n array(['Bravo', 'Sombra de ojos'], dtype=object)\\n array(['Supermercado Nacional', 'Joyas'], dtype=object)\\n array(['Jumbo', 'Az\\u00facar blanca'], dtype=object)\\n array(['Super Pola', 'Berenjenas'], dtype=object)\\n array(['La Sirena', 'Helado de chocolate'], dtype=object)\\n array(['La Sirena', 'Aretes'], dtype=object)]\",\n          \"[array(['Super Pola', 'Consolas de videojuegos'], dtype=object)]\",\n          \"[array(['La Sirena', 'Agua purificada'], dtype=object)\\n array(['Jumbo', 'Pistachos'], dtype=object)\\n array(['Jumbo', 'Aftershave'], dtype=object)\\n array(['Jumbo', 'Huevos'], dtype=object)]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"qbf best value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5396.864163111413,\n        \"min\": 100.99,\n        \"max\": 20463.9,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          5772.93,\n          958.99,\n          20463.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ga best solution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 131,\n        \"samples\": [\n          \"[array(['Jumbo', 'Pistachos'], dtype=object)\\n array(['Jumbo', 'Aftershave'], dtype=object)\\n array(['Jumbo', 'Huevos'], dtype=object)\\n array(['La Sirena', 'Agua purificada'], dtype=object)]\",\n          \"[array(['Bravo', 'Mermelada de fresa'], dtype=object)\\n array(['Supermercado Nacional', 'Joyas'], dtype=object)\\n array(['Bravo', 'Sombra de ojos'], dtype=object)\\n array(['Super Pola', 'Berenjenas'], dtype=object)\\n array(['Jumbo', 'Az\\u00facar blanca'], dtype=object)\\n array(['La Sirena', 'Helado de chocolate'], dtype=object)\\n array(['La Sirena', 'Aretes'], dtype=object)]\",\n          \"[array(['Super Pola', 'Reproductores de DVD'], dtype=object)\\n array(['Jumbo', 'Suavizante de telas'], dtype=object)\\n array(['Supermercado Nacional', 'Pulseras'], dtype=object)\\n array(['La Sirena', 'Salsa ranchera'], dtype=object)]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ga best value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5975.534295469298,\n        \"min\": 100.99,\n        \"max\": 25888.9,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          11033.9,\n          3850.96,\n          1147.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gc best solution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 129,\n        \"samples\": [\n          \"[array(['Supermercado Nacional', 'Anacardos'], dtype=object)\\n array(['Jumbo', 'Sal marina'], dtype=object)\\n array(['Jumbo', 'Huevos'], dtype=object)\\n array(['Jumbo', 'Ropa de hombre'], dtype=object)\\n array(['Jumbo', 'Pan \\u00e1rabe'], dtype=object)\\n array(['La Sirena', 'Limpiador multiusos'], dtype=object)\\n array(['La Sirena', 'Agua purificada'], dtype=object)]\",\n          \"[array(['Super Pola', 'Filete de res'], dtype=object)\\n array(['Super Pola', 'Berenjenas'], dtype=object)\\n array(['Bravo', 'Sombra de ojos'], dtype=object)\\n array(['Bravo', 'Mermelada de fresa'], dtype=object)\\n array(['Bravo', 'Colonia'], dtype=object)\\n array(['Supermercado Nacional', 'Vodka'], dtype=object)\\n array(['Supermercado Nacional', 'Joyas'], dtype=object)\\n array(['Jumbo', 'Az\\u00facar blanca'], dtype=object)\\n array(['La Sirena', 'Aretes'], dtype=object)\\n array(['La Sirena', 'Helado de chocolate'], dtype=object)]\",\n          \"[array(['Super Pola', 'Suavizante de telas'], dtype=object)\\n array(['Super Pola', 'Reproductores de DVD'], dtype=object)\\n array(['Super Pola', 'Salsa ranchera'], dtype=object)\\n array(['Super Pola', 'Consolas de videojuegos'], dtype=object)\\n array(['Super Pola', 'Pulseras'], dtype=object)\\n array(['Bravo', 'Aceitunas verdes'], dtype=object)\\n array(['Bravo', 'Whisky'], dtype=object)]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gc best value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4893.424422908019,\n        \"min\": 100.99,\n        \"max\": 20658.9,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          3306.96,\n          4527.96,\n          307.99\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gn best solution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 112,\n        \"samples\": [\n          \"[array(['La Sirena', 'Aftershave'], dtype=object)]\",\n          \"[array(['Supermercado Nacional', 'Arroz integral'], dtype=object)\\n array(['Supermercado Nacional', 'Juguetes para ni\\u00f1os'], dtype=object)\\n array(['Supermercado Nacional', 'Salsa de tomate'], dtype=object)\\n array(['Bravo', 'Pimientos verdes'], dtype=object)\\n array(['La Sirena', 'Pan integral'], dtype=object)\\n array(['Jumbo', 'Desinfectante de manos'], dtype=object)\\n array(['Super Pola', 'Albahaca'], dtype=object)]\",\n          \"[array(['Bravo', 'Albahaca'], dtype=object)\\n array(['Bravo', 'Televisores'], dtype=object)\\n array(['Bravo', 'Aftershave'], dtype=object)\\n array(['Bravo', 'Refresco de cola'], dtype=object)\\n array(['Bravo', 'Esmalte de u\\u00f1as'], dtype=object)\\n array(['Bravo', 'F\\u00f3sforos'], dtype=object)\\n array(['Supermercado Nacional', 'Rizadores de pelo'], dtype=object)]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gn best value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12962.67118940195,\n        \"min\": 100.99,\n        \"max\": 55794.83999999997,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          5552.96,\n          7445.959999999999,\n          761.99\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 265
        }
      ],
      "source": [
        "problem_set = pd.read_excel(problem_set_path)\n",
        "problem_set.head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 265,
      "metadata": {
        "id": "wFWdk1jfN5hP"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BamttTJmN6Er"
      },
      "source": [
        "## Leyendo un Catalogo, Grafo y precio de combustible al Azar"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 266,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 554
        },
        "id": "bwE2FRHhE5B-",
        "outputId": "d4f56fce-e8ec-428c-986a-fc3b390f65d2"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/drive/MyDrive/Proyecto - Compra Genética\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                   store                product    price\n",
              "0                  Jumbo              Alfombras  1998.99\n",
              "1  Supermercado Nacional  Purificadores de aire  4381.99\n",
              "2  Supermercado Nacional              Alfombras  1274.99\n",
              "3  Supermercado Nacional       Pasta de dientes  3023.99\n",
              "4  Supermercado Nacional      Aceite de girasol  4116.99"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a477e499-442b-42a0-8006-74c4bf0719dc\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>store</th>\n",
              "      <th>product</th>\n",
              "      <th>price</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Jumbo</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>1998.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Supermercado Nacional</td>\n",
              "      <td>Purificadores de aire</td>\n",
              "      <td>4381.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Supermercado Nacional</td>\n",
              "      <td>Alfombras</td>\n",
              "      <td>1274.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Supermercado Nacional</td>\n",
              "      <td>Pasta de dientes</td>\n",
              "      <td>3023.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Supermercado Nacional</td>\n",
              "      <td>Aceite de girasol</td>\n",
              "      <td>4116.99</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a477e499-442b-42a0-8006-74c4bf0719dc')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-a477e499-442b-42a0-8006-74c4bf0719dc button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-a477e499-442b-42a0-8006-74c4bf0719dc');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-996e208d-3335-4db8-9088-a93a54286116\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-996e208d-3335-4db8-9088-a93a54286116')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-996e208d-3335-4db8-9088-a93a54286116 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(catalogo\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"store\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Supermercado Nacional\",\n          \"Jumbo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Purificadores de aire\",\n          \"Aceite de girasol\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1334.8757620093338,\n        \"min\": 1274.99,\n        \"max\": 4381.99,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4381.99,\n          4116.99\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                  edge 1                 edge 2  distance\n",
              "0                  Jumbo                  Jumbo         4\n",
              "1                  Jumbo  Supermercado Nacional         4\n",
              "2              La Sirena  Supermercado Nacional        16\n",
              "3                  Jumbo              La Sirena        18\n",
              "4  Supermercado Nacional                  Jumbo        15"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-22283e8b-e054-4d0a-9da3-25fb393ba5e2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>edge 1</th>\n",
              "      <th>edge 2</th>\n",
              "      <th>distance</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Jumbo</td>\n",
              "      <td>Jumbo</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Jumbo</td>\n",
              "      <td>Supermercado Nacional</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>La Sirena</td>\n",
              "      <td>Supermercado Nacional</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Jumbo</td>\n",
              "      <td>La Sirena</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Supermercado Nacional</td>\n",
              "      <td>Jumbo</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-22283e8b-e054-4d0a-9da3-25fb393ba5e2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-22283e8b-e054-4d0a-9da3-25fb393ba5e2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-22283e8b-e054-4d0a-9da3-25fb393ba5e2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-691fc248-8e85-4310-9cbe-952f1fa82e64\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-691fc248-8e85-4310-9cbe-952f1fa82e64')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-691fc248-8e85-4310-9cbe-952f1fa82e64 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(catalogo\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"edge 1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Jumbo\",\n          \"La Sirena\",\n          \"Supermercado Nacional\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"edge 2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Jumbo\",\n          \"Supermercado Nacional\",\n          \"La Sirena\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"distance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 4,\n        \"max\": 18,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          16,\n          15,\n          4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ],
      "source": [
        "def read_catalogo_grafo_fuel(indice:int):\n",
        "  os.chdir(compra_genetica)\n",
        "  print(os.getcwd())\n",
        "  catalogo_grafo = problem_set.loc[indice, 'catalog']\n",
        "  catalogo = pd.read_excel(catalogo_grafo, 'catalogo')\n",
        "  grafo = pd.read_excel(catalogo_grafo, 'grafo')\n",
        "  fuel_price = problem_set.loc[indice, 'fuel_price']\n",
        "  return catalogo, grafo, fuel_price\n",
        "\n",
        "catalogo, grafo, fuel_price = read_catalogo_grafo_fuel(0)\n",
        "display(catalogo.head(), grafo.head())"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 267,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 216
        },
        "id": "ZQPfGCbDOHW2",
        "outputId": "f573d4c7-4292-4654-d614-13618bb4428f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                    store                product    price\n",
              "1   Supermercado Nacional  Purificadores de aire  4381.99\n",
              "5                   Jumbo  Purificadores de aire  4724.99\n",
              "11              La Sirena  Purificadores de aire  4783.99"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-41f0d3d6-f58d-4c43-825a-c5c7a71b6107\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>store</th>\n",
              "      <th>product</th>\n",
              "      <th>price</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Supermercado Nacional</td>\n",
              "      <td>Purificadores de aire</td>\n",
              "      <td>4381.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Jumbo</td>\n",
              "      <td>Purificadores de aire</td>\n",
              "      <td>4724.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>La Sirena</td>\n",
              "      <td>Purificadores de aire</td>\n",
              "      <td>4783.99</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-41f0d3d6-f58d-4c43-825a-c5c7a71b6107')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-41f0d3d6-f58d-4c43-825a-c5c7a71b6107 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-41f0d3d6-f58d-4c43-825a-c5c7a71b6107');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-be1b16d8-22fc-448e-a615-0082b83fedad\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be1b16d8-22fc-448e-a615-0082b83fedad')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-be1b16d8-22fc-448e-a615-0082b83fedad button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"catalogo\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"store\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Supermercado Nacional\",\n          \"Jumbo\",\n          \"La Sirena\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"product\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Purificadores de aire\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 217.07679132816878,\n        \"min\": 4381.99,\n        \"max\": 4783.99,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          4381.99\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 267
        }
      ],
      "source": [
        "catalogo.loc[(catalogo[\"product\"]  == \"Purificadores de aire\")]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 268,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wRQzWwaDQJV8",
        "outputId": "b459b528-d592-4fbf-8797-1e1bcf3edb0c"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "20.0"
            ]
          },
          "metadata": {},
          "execution_count": 268
        }
      ],
      "source": [
        "4401.99 - 4381.99"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 269,
      "metadata": {
        "id": "Jk6FWim1sULF"
      },
      "outputs": [],
      "source": [
        "dd = grafo.pivot_table(index='edge 1', columns='edge 2', values='distance')\n",
        "dd.columns.name = None\n",
        "dd.index.name = None\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "r7SE0nO1OJJ4"
      },
      "source": [
        "## Verificando si hay que grafos que no son completamente conexos"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 270,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 216
        },
        "id": "lRnLlJlyGKiW",
        "outputId": "87d9754b-9938-4d18-d5fd-aa7a9554a28a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "store      0\n",
              "product    0\n",
              "price      0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>store</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>product</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>price</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 270
        }
      ],
      "source": [
        "catalogo.isnull().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 271,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dgfuDXXaGq-z",
        "outputId": "fd148169-7ad9-48c0-c4b6-d8461a1b6597"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(12, 3)"
            ]
          },
          "metadata": {},
          "execution_count": 271
        }
      ],
      "source": [
        "catalogo.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 272,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 216
        },
        "id": "E5_n9yI3GNT0",
        "outputId": "e80762d2-f32a-4398-d394-21aa20a43853"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "edge 1      0\n",
              "edge 2      0\n",
              "distance    0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>edge 1</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>edge 2</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>distance</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 272
        }
      ],
      "source": [
        "grafo.isnull().sum()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 273,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JYfCIg1pZK58",
        "outputId": "4910c4f1-d1da-4424-aeb7-eb2e09f3e95b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(16, 3)"
            ]
          },
          "metadata": {},
          "execution_count": 273
        }
      ],
      "source": [
        "grafo.shape"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 274,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 89
        },
        "id": "QizXjcZkGUvl",
        "outputId": "8ef6fcb0-b057-4e3e-e6a2-c7adf4f5112b"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 274
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "grafo.distance.hist()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 275,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 229
        },
        "id": "yEz8o6giJNk5",
        "outputId": "ca053185-1af2-435d-c632-4ca190262de8"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       Casa  Jumbo  La Sirena  Supermercado Nacional\n",
              "Casa                    1.0    7.0       11.0                    5.0\n",
              "Jumbo                  18.0    4.0       18.0                    4.0\n",
              "La Sirena               6.0    1.0       14.0                   16.0\n",
              "Supermercado Nacional  15.0   15.0       16.0                    1.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1ac17d5c-74da-4f5b-8051-b2e5b81f7158\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Casa</th>\n",
              "      <th>Jumbo</th>\n",
              "      <th>La Sirena</th>\n",
              "      <th>Supermercado Nacional</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Casa</th>\n",
              "      <td>1.0</td>\n",
              "      <td>7.0</td>\n",
              "      <td>11.0</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Jumbo</th>\n",
              "      <td>18.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>18.0</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>La Sirena</th>\n",
              "      <td>6.0</td>\n",
              "      <td>1.0</td>\n",
              "      <td>14.0</td>\n",
              "      <td>16.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Supermercado Nacional</th>\n",
              "      <td>15.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>16.0</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1ac17d5c-74da-4f5b-8051-b2e5b81f7158')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1ac17d5c-74da-4f5b-8051-b2e5b81f7158 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1ac17d5c-74da-4f5b-8051-b2e5b81f7158');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-a7257a3c-1b40-412c-9a2c-9db8a49715fe\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a7257a3c-1b40-412c-9a2c-9db8a49715fe')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-a7257a3c-1b40-412c-9a2c-9db8a49715fe button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_9fc36aad-76e4-4300-8253-06319dfa9745\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('distance_prueba')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_9fc36aad-76e4-4300-8253-06319dfa9745 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('distance_prueba');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "distance_prueba",
              "summary": "{\n  \"name\": \"distance_prueba\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Casa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.874007874011811,\n        \"min\": 1.0,\n        \"max\": 18.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          18.0,\n          15.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Jumbo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.020797289396148,\n        \"min\": 1.0,\n        \"max\": 15.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4.0,\n          15.0,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"La Sirena\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.9860788111948193,\n        \"min\": 11.0,\n        \"max\": 18.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          18.0,\n          16.0,\n          11.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Supermercado Nacional\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.557438524302,\n        \"min\": 1.0,\n        \"max\": 16.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4.0,\n          1.0,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 275
        }
      ],
      "source": [
        "distance_prueba  =grafo.pivot_table(index='edge 1', columns='edge 2', values='distance')\n",
        "distance_prueba.columns.name = None\n",
        "distance_prueba.index.name = None\n",
        "distance_prueba"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "21o6B1Qh_PGq"
      },
      "source": [
        "## Clase GA optimization"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "O_ETnHEiBR8p"
      },
      "source": [
        "Con log_path"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 167,
      "metadata": {
        "id": "WKYJs5BmBM2e"
      },
      "outputs": [],
      "source": [
        "class GAOptimization:\n",
        "  def  __init__(self, project_path:str, indice:int, pop_size:int, penalty_factor:float, selection_params:dict, crossover_params:dict, mutation_params:dict, epoch:int, log_path:str) -> None:\n",
        "    default_crossover = {\n",
        "            \"method\": \"uniform\",\n",
        "            \"crossover_rate\": 0.7,\n",
        "            \"inheritance_rate\": 0.7,\n",
        "            \"uniform_rate\": 0.5\n",
        "    }\n",
        "\n",
        "    default_mutation = {\n",
        "            \"method\": \"swap\",\n",
        "            \"mutation_rate\": 0.05\n",
        "    }\n",
        "\n",
        "    default_selection = {\n",
        "            \"method\": \"hard\",\n",
        "            \"selection_rate\": 0.66\n",
        "    }\n",
        "\n",
        "    # Primarias\n",
        "    self.project_path = project_path\n",
        "    self.indice = indice\n",
        "    self.pop_size = pop_size\n",
        "    self.penalty_factor = penalty_factor\n",
        "\n",
        "    self.selection_params = {**default_selection, **(selection_params or {})}\n",
        "    self.crossover_params = {**default_crossover, **(crossover_params or {})}\n",
        "    self.mutation_params = {**default_mutation, **(mutation_params or {})}\n",
        "    self.epoch = epoch\n",
        "\n",
        "    # Configuración del logger utilizando el log_path pasado como parámetro\n",
        "    self.logger = logging.getLogger(f\"{self.__class__.__name__}_{indice}\")\n",
        "    if self.logger.hasHandlers():\n",
        "        self.logger.handlers.clear()\n",
        "\n",
        "    # Asegurarse de que log_path sea absoluto\n",
        "    abs_log_path = os.path.abspath(log_path)\n",
        "    final_log_path = os.path.join(abs_log_path, f\"{indice}.txt\")\n",
        "    # Imprime la ruta final para depuración\n",
        "    print(\"Final log path:\", final_log_path)\n",
        "\n",
        "    handler = logging.FileHandler(final_log_path)\n",
        "    handler.setFormatter(logging.Formatter(\"%(asctime)s — %(message)s\", \"%H:%M:%S\"))\n",
        "    self.logger.addHandler(handler)\n",
        "    self.logger.setLevel(logging.INFO)\n",
        "    self.logger.propagate = False\n",
        "\n",
        "\n",
        "\n",
        "    ## Data\n",
        "    self.catalogo, self.grafo, self.fuel_price = self.read_catalogo_grafo_fuel()\n",
        "    self.distance_matrix = self.get_distance_matrix()\n",
        "    self.tienda_dict = self.get_tienda_dict()\n",
        "\n",
        "    # Población Inicial\n",
        "    self.population = self.generar_poblacion_inicial(self.pop_size)\n",
        "\n",
        "  def read_catalogo_grafo_fuel(self):\n",
        "    os.chdir(self.project_path)\n",
        "    print(os.getcwd())\n",
        "    catalogo_grafo = problem_set.loc[self.indice, 'catalog']\n",
        "    catalogo = pd.read_excel(catalogo_grafo, 'catalogo')\n",
        "    grafo = pd.read_excel(catalogo_grafo, 'grafo')\n",
        "    fuel_price = problem_set.loc[self.indice, 'fuel_price']\n",
        "    return catalogo, grafo, fuel_price\n",
        "\n",
        "\n",
        "  def get_distance_matrix(self):\n",
        "    distance_matrix = self.grafo.pivot_table(index='edge 1', columns='edge 2', values='distance')\n",
        "    distance_matrix.columns.name = None\n",
        "    distance_matrix.index.name = None\n",
        "    distance_matrix = distance_matrix.fillna(np.inf)\n",
        "    return distance_matrix\n",
        "\n",
        "  #distance_matrix = get_distance_matrix(grafo)\n",
        "  #distance_matrix\n",
        "\n",
        "  #catalogo, grafo, fuel_price = read_catalogo_grafo_fuel(0)\n",
        "  #display(catalogo.head(), grafo.head()\n",
        "\n",
        "  def get_tienda_dict(self):\n",
        "    tienda_dict = {}\n",
        "    for index, row in self.catalogo.iterrows():\n",
        "      store = row['store']\n",
        "      product = row['product']\n",
        "      price = row['price']\n",
        "      if store not in tienda_dict:\n",
        "        tienda_dict[store] = {}\n",
        "      tienda_dict[store].update({product: price})\n",
        "    return tienda_dict\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "  def generar_gen(self, productos_seleccionados):\n",
        "    \"\"\"\n",
        "    Genera un gen aleatorio en forma de diccionario con una tienda y los productos comprados en ella.\n",
        "\n",
        "    Args:\n",
        "        productos_seleccionados (set): Conjunto de productos ya seleccionados en el cromosoma.\n",
        "\n",
        "    Returns:\n",
        "        dict: {Tienda: {Producto: Precio}} o None si no hay productos disponibles.\n",
        "    \"\"\"\n",
        "    # Filtrar productos ya seleccionados dentro de cada tienda\n",
        "    available_stores = {\n",
        "        store: {product: price for product, price in products.items() if product not in productos_seleccionados}\n",
        "        for store, products in self.tienda_dict.items()\n",
        "    }\n",
        "\n",
        "    # Remover tiendas que ya no tienen productos disponibles\n",
        "    available_stores = {store: products for store, products in available_stores.items() if products}\n",
        "\n",
        "    if not available_stores:\n",
        "        return None  # No quedan productos disponibles\n",
        "\n",
        "    # Seleccionar una tienda al azar de las disponibles\n",
        "    key, value = random.choice(list(available_stores.items())) # bravo: {banana: 404}\n",
        "\n",
        "    # Convertir `value.keys()` a lista para evitar error en `random.sample()`\n",
        "    product_list = list(value.keys())\n",
        "\n",
        "    # Seleccionar al menos un producto\n",
        "    n = random.randint(1, len(product_list))  # Asegura que `n` sea al menos 1\n",
        "    subset = random.sample(product_list, n)\n",
        "\n",
        "    # Crear un diccionario con productos seleccionados y sus precios\n",
        "    gen_dict = {key: {product: value[product] for product in subset}}\n",
        "\n",
        "    return gen_dict\n",
        "\n",
        "    # Ejemplo de uso\n",
        "    #productos_seleccionados = set()  # Al inicio no hay productos seleccionados\n",
        "    #gen = generar_gen(productos_seleccionados)\n",
        "    #print(gen)\n",
        "\n",
        "  def generar_cromosoma(self):\n",
        "    \"\"\"\n",
        "    Genera un cromosoma completo, representado como un diccionario en el que las claves son las tiendas\n",
        "    y los valores son diccionarios con los productos comprados (y sus precios). Se evita que un mismo producto\n",
        "    se compre en más de una tienda.\n",
        "\n",
        "    Returns:\n",
        "        dict: Cromosoma completo {Tienda: {Producto: Precio}}.\n",
        "    \"\"\"\n",
        "    productos_seleccionados = set()\n",
        "    cromosoma = {}\n",
        "\n",
        "    # Calcular el conjunto total de productos únicos en el catálogo\n",
        "    total_products = set()\n",
        "    for products in self.tienda_dict.values():\n",
        "        total_products.update(products.keys())\n",
        "\n",
        "    # Mientras no se hayan asignado todos los productos disponibles\n",
        "    while productos_seleccionados != total_products:\n",
        "        gen = self.generar_gen(productos_seleccionados)\n",
        "        if gen is None:\n",
        "            missing = total_products - productos_seleccionados\n",
        "            for prod in missing:\n",
        "                tienda = random.choice([t for t, prods in self.tienda_dict.items() if prod in prods])\n",
        "                cromosoma.setdefault(tienda, {})[prod] = self.tienda_dict[tienda][prod]\n",
        "            break  # No quedan productos disponibles\n",
        "        # Extraer la tienda y su diccionario de productos del gen\n",
        "        store = list(gen.keys())[0]\n",
        "        products_dict = gen[store]\n",
        "        # Si la tienda ya está en el cromosoma, unir los productos\n",
        "        if store in cromosoma:\n",
        "            cromosoma[store].update(products_dict)\n",
        "        else:\n",
        "            cromosoma[store] = products_dict\n",
        "        # Actualizar el conjunto de productos seleccionados\n",
        "        productos_seleccionados.update(products_dict.keys())\n",
        "\n",
        "    return self._validate_cromosoma(cromosoma)\n",
        "\n",
        "    # Ejemplo de uso:\n",
        "    #cromosoma = generar_cromosoma()\n",
        "\n",
        "  def generar_poblacion_inicial(self,  n):\n",
        "    \"\"\"\n",
        "    Genera una población inicial de cromosomas.\n",
        "\n",
        "    Args:\n",
        "        n (int): Número de cromosomas en la población.\n",
        "\n",
        "    Returns:\n",
        "        list: Lista de cromosomas.\n",
        "    \"\"\"\n",
        "    poblacion = []\n",
        "    cromosomas_vistos = set()  # Conjunto para rastrear cromosomas únicos\n",
        "\n",
        "    while len(poblacion) < n:\n",
        "      cromosoma = self.generar_cromosoma()\n",
        "      cromosoma_str = str(cromosoma)  # Convertir el cromosoma a una cadena\n",
        "\n",
        "      if cromosoma_str not in cromosomas_vistos:\n",
        "        poblacion.append(cromosoma)\n",
        "        cromosomas_vistos.add(cromosoma_str)\n",
        "\n",
        "    return poblacion\n",
        "\n",
        "    # Ejemplo de uso:\n",
        "    #poblacion_inicial = generar_poblacion_inicial(5)\n",
        "\n",
        "    #for poblacion in poblacion_inicial:\n",
        "      #print(poblacion)\n",
        "\n",
        "  # Siendo Modificado por Darwin\n",
        "  import numpy as np\n",
        "\n",
        "  def evaluar_fitness(self, cromosoma: dict) -> float:\n",
        "        \"\"\"\n",
        "        Calcula el fitness de un cromosoma sumando:\n",
        "          • El costo total de los productos comprados.\n",
        "          • El costo de viaje (distancia * precio de combustible) para el recorrido Casa→tiendas→Casa.\n",
        "\n",
        "        Se penaliza cualquier tramo desconectado (distancia == inf) aplicando una penalidad configurable:\n",
        "        penalty = (máxima distancia finita encontrada) * fuel_price * penalty_factor.\n",
        "\n",
        "        Args:\n",
        "            cromosoma (dict): Mapa {tienda: {producto: precio}}.\n",
        "\n",
        "        Returns:\n",
        "            float: Fitness (a minimizar). Valores muy altos indican rutas inválidas.\n",
        "        \"\"\"\n",
        "        # 1️⃣ Costo de todos los productos\n",
        "        costo_total = sum(price for products in cromosoma.values() for price in products.values())\n",
        "\n",
        "        # 2️⃣ Construcción de la ruta\n",
        "        stores = list(cromosoma.keys())\n",
        "        path = [\"Casa\"] + stores + [\"Casa\"]\n",
        "\n",
        "        # 3️⃣ Calcula la penalidad máxima (basada en la mayor distancia finita)\n",
        "        finite = self.distance_matrix.replace(np.inf, np.nan).values\n",
        "        max_dist = np.nanmax(finite)\n",
        "        penalty = max_dist * self.fuel_price * self.penalty_factor\n",
        "\n",
        "        # 4️⃣ Suma coste de viaje, aplicando penalidad en tramos desconectados\n",
        "        travel_cost = 0.0\n",
        "        for i in range(len(path) - 1):\n",
        "            dist = self.distance_matrix.at[path[i], path[i+1]]\n",
        "            if np.isinf(dist):\n",
        "                travel_cost += penalty\n",
        "            else:\n",
        "                travel_cost += dist * self.fuel_price\n",
        "\n",
        "        return costo_total + travel_cost\n",
        "\n",
        "\n",
        "        # Ejemplo de uso\n",
        "        #fitness = evaluar_fitness(cromosoma, distance_matrix, fuel_price)\n",
        "        #print(\"Cromosoma:\", cromosoma)\n",
        "        #print(\"Fitness (costo total):\", fitness)\n",
        "\n",
        "  def selection(self, fitness_scores):\n",
        "      \"\"\"\n",
        "      Selecciona cromosomas para la reproducción.\n",
        "\n",
        "      Args\n",
        "          fitness_scores (list): Lista de tuplas (fitness, cromosoma).\n",
        "          selection_rate (float): Tasa de selección.\n",
        "          selection_method (str): Método de selección ('soft' o 'hard').\n",
        "\n",
        "      Returns:\n",
        "          list: Lista de cromosomas seleccionados.\n",
        "      \"\"\"\n",
        "      p = self.selection_params #  Parametros de selección\n",
        "\n",
        "      num_selected = int(p['selection_rate'] * len(fitness_scores))\n",
        "      selected_cromosomas = []\n",
        "      epsilon = 1e-6\n",
        "      if p['method'] == 'soft':\n",
        "          inversos = [1 / (fitness + epsilon) for fitness, _ in fitness_scores]\n",
        "          probabilidades = [inverso / sum(inversos) for inverso in inversos]\n",
        "          selected_indices = random.choices(range(len(fitness_scores)), weights=probabilidades, k=num_selected)\n",
        "          return [fitness_scores[i][1] for i in selected_indices]\n",
        "      elif p['method'] == 'hard':\n",
        "        sorted_fitness = sorted(fitness_scores, key=lambda x: x[0])\n",
        "        selected_chromosomes = [chromosome for  _, chromosome in sorted_fitness[:num_selected]]\n",
        "        return selected_chromosomes\n",
        "      else:\n",
        "          raise ValueError(\"Método de selección no válido. Use 'soft' o 'hard'.\")\n",
        "\n",
        "  def cross_uniform(self, parent1: dict, parent2: dict) -> tuple[dict, dict]:\n",
        "      \"\"\"\n",
        "      Aplica el cruce uniforme entre dos cromosomas padre, generando dos hijos.\n",
        "      Cada producto puede heredarse de uno u otro padre según una probabilidad uniforme,\n",
        "      respetando tasas de crossover e inheritance para introducir diversidad.\n",
        "\n",
        "      Args:\n",
        "          parent1 (dict): Cromosoma padre 1 en formato {tienda: {producto: precio}}.\n",
        "          parent2 (dict): Cromosoma padre 2 en el mismo formato.\n",
        "\n",
        "      Returns:\n",
        "          tuple[dict, dict]: Dos cromosomas hijos válidos, garantizando que:\n",
        "              - Cada producto aparece exactamente una vez.\n",
        "              - Se eliminan tiendas vacías.\n",
        "              - Se reinsertan productos faltantes en tiendas válidas.\n",
        "      \"\"\"\n",
        "      p = self.crossover_params\n",
        "\n",
        "      # Si no se cumple la tasa de crossover, devolvemos copias idénticas\n",
        "      if random.random() > p[\"crossover_rate\"]:\n",
        "          return copy.deepcopy(parent1), copy.deepcopy(parent2)\n",
        "\n",
        "      child1, child2 = {}, {}\n",
        "      assigned1, assigned2 = set(), set()\n",
        "      all_stores = set(parent1) | set(parent2)\n",
        "\n",
        "      for store in all_stores:\n",
        "          child1[store], child2[store] = {}, {}\n",
        "          products = set(parent1.get(store, {})) | set(parent2.get(store, {}))\n",
        "\n",
        "          for prod in products:\n",
        "              in_p1 = prod in parent1.get(store, {})\n",
        "              in_p2 = prod in parent2.get(store, {})\n",
        "\n",
        "              # Construcción hijo1\n",
        "              if prod not in assigned1:\n",
        "                  if in_p1 and in_p2:\n",
        "                      source = parent1 if random.random() < p[\"uniform_rate\"] else parent2\n",
        "                      child1[store][prod] = source[store][prod]\n",
        "                  elif in_p1 and random.random() < p[\"inheritance_rate\"]:\n",
        "                      child1[store][prod] = parent1[store][prod]\n",
        "                  elif in_p2 and random.random() < p[\"inheritance_rate\"]:\n",
        "                      child1[store][prod] = parent2[store][prod]\n",
        "                  if prod in child1[store]:\n",
        "                      assigned1.add(prod)\n",
        "\n",
        "              # Construcción hijo2\n",
        "              if prod not in assigned2:\n",
        "                  if in_p1 and in_p2:\n",
        "                      source = parent2 if random.random() < p[\"uniform_rate\"] else parent1\n",
        "                      child2[store][prod] = source[store][prod]\n",
        "                  elif in_p2 and random.random() < p[\"inheritance_rate\"]:\n",
        "                      child2[store][prod] = parent2[store][prod]\n",
        "                  elif in_p1 and random.random() < p[\"inheritance_rate\"]:\n",
        "                      child2[store][prod] = parent1[store][prod]\n",
        "                  if prod in child2[store]:\n",
        "                      assigned2.add(prod)\n",
        "\n",
        "      def finalize(child):\n",
        "          \"\"\"Elimina tiendas vacías y completa productos faltantes.\"\"\"\n",
        "          child = {s: prods for s, prods in child.items() if prods}\n",
        "          all_products = {prod for tienda in self.tienda_dict.values() for prod in tienda}\n",
        "          present = {prod for prods in child.values() for prod in prods}\n",
        "          missing = all_products - present\n",
        "          for prod in missing:\n",
        "              tienda = random.choice([t for t, prods in self.tienda_dict.items() if prod in prods])\n",
        "              child.setdefault(tienda, {})[prod] = self.tienda_dict[tienda][prod]\n",
        "          return child\n",
        "\n",
        "      return self._validate_cromosoma(finalize(child1)), self._validate_cromosoma(finalize(child2))\n",
        "\n",
        "\n",
        "\n",
        "  def cross_sub_tree(self, parent1: dict, parent2: dict) -> tuple[dict, dict]:\n",
        "      \"\"\"\n",
        "      Cruce tipo sub-tree: intercambia toda la asignación de productos entre\n",
        "      una tienda aleatoria de cada padre, preservando unicidad de productos.\n",
        "      \"\"\"\n",
        "      child1, child2 = copy.deepcopy(parent1), copy.deepcopy(parent2)\n",
        "      if not child1 or not child2:\n",
        "          return child1, child2\n",
        "\n",
        "      store1 = random.choice(list(child1.keys()))\n",
        "      store2 = random.choice(list(child2.keys()))\n",
        "\n",
        "      # Extraer la tienda completa (clave y valor)\n",
        "      store1_data = child1.pop(store1, {})\n",
        "      store2_data = child2.pop(store2, {})\n",
        "\n",
        "      # Insertar la tienda extraída en el cromosoma opuesto, conservando el nombre de la tienda\n",
        "      child1[store2] = store2_data\n",
        "      child2[store1] = store1_data\n",
        "\n",
        "      def cleanup(child):\n",
        "          \"\"\"Eliminar duplicados y tiendas vacías, luego reintegrar faltantes.\"\"\"\n",
        "          seen = set()\n",
        "          for store in list(child):\n",
        "              unique = {}\n",
        "              for prod, price in child[store].items():\n",
        "                  if prod not in seen:\n",
        "                      unique[prod] = price\n",
        "                      seen.add(prod)\n",
        "              if unique:\n",
        "                  child[store] = unique\n",
        "              else:\n",
        "                  child.pop(store)\n",
        "          all_products = {p for data in self.tienda_dict.values() for p in data}\n",
        "          present = {prod for prods in child.values() for prod in prods}\n",
        "          missing = all_products - present\n",
        "          for prod in missing:\n",
        "              tienda = random.choice([t for t, prods in self.tienda_dict.items() if prod in prods])\n",
        "              child.setdefault(tienda, {})[prod] = self.tienda_dict[tienda][prod]\n",
        "          return child\n",
        "\n",
        "      return self._validate_cromosoma(cleanup(child1)), self._validate_cromosoma(cleanup(child2))\n",
        "\n",
        "\n",
        "\n",
        "  def crossover(self, parent1: dict, parent2: dict) -> tuple[dict, dict]:\n",
        "      \"\"\"\n",
        "      Dispatchea el método de crossover configurado en self.crossover_params['method'].\n",
        "\n",
        "      Args:\n",
        "          parent1 (dict): Primer cromosoma padre.\n",
        "          parent2 (dict): Segundo cromosoma padre.\n",
        "\n",
        "      Returns:\n",
        "          tuple[dict, dict]: Dos cromosomas hijos generados según el método seleccionado.\n",
        "\n",
        "      Raises:\n",
        "          ValueError: Si el método especificado no es 'uniform' ni 'sub_tree'.\n",
        "      \"\"\"\n",
        "      method = self.crossover_params.get(\"method\", \"uniform\")\n",
        "      if method == \"uniform\":\n",
        "          return self.cross_uniform(parent1, parent2)\n",
        "      elif method == \"sub_tree\":\n",
        "          return self.cross_sub_tree(parent1, parent2)\n",
        "      else:\n",
        "          raise ValueError(f\"Método de crossover desconocido: {method}\")\n",
        "\n",
        "  def _mutate_swap(self, crom: dict) -> dict:\n",
        "      \"\"\"\n",
        "      Realiza una mutación de tipo “swap” sobre un cromosoma, intercambiando la asignación\n",
        "      de productos entre tiendas o moviendo un producto a una tienda diferente si sólo existe una.\n",
        "\n",
        "      Args:\n",
        "          crom (dict): Cromosoma original en formato {tienda: {producto: precio}}.\n",
        "\n",
        "      Returns:\n",
        "          dict: Nuevo cromosoma mutado donde:\n",
        "              - Si sólo hay una tienda, mueve aleatoriamente un producto a otra tienda válida.\n",
        "              - Si hay múltiples tiendas, intercambia dos productos entre ellas solo si cada tienda\n",
        "                vende el producto del otro.\n",
        "              - El precio de cada producto se actualiza según la tienda destino.\n",
        "              - Se eliminan tiendas vacías tras mover o intercambiar productos.\n",
        "      \"\"\"\n",
        "      crom = copy.deepcopy(crom)\n",
        "\n",
        "      # Caso 1: solo hay una tienda en el cromosoma\n",
        "      if len(crom) == 1:\n",
        "          tienda_actual = next(iter(crom))\n",
        "          productos = list(crom[tienda_actual].keys())\n",
        "          prod = random.choice(productos)\n",
        "\n",
        "          posibles = [\n",
        "              t for t, prods in self.tienda_dict.items()\n",
        "              if t != tienda_actual and prod in prods\n",
        "          ]\n",
        "          if posibles:\n",
        "              nueva = random.choice(posibles)\n",
        "              precio = self.tienda_dict[nueva][prod]\n",
        "\n",
        "              crom[tienda_actual].pop(prod)\n",
        "              crom.setdefault(nueva, {})[prod] = precio\n",
        "\n",
        "              if not crom[tienda_actual]:\n",
        "                  crom.pop(tienda_actual)\n",
        "\n",
        "          return crom\n",
        "\n",
        "      # Caso 2: múltiples tiendas — swap tradicional\n",
        "      pares = [(s, p) for s, prods in crom.items() for p in prods]\n",
        "      (s1, p1), (s2, p2) = random.sample(pares, 2)\n",
        "\n",
        "      if p2 in self.tienda_dict[s1] and p1 in self.tienda_dict[s2]:\n",
        "          precio1 = self.tienda_dict[s1][p2]\n",
        "          precio2 = self.tienda_dict[s2][p1]\n",
        "\n",
        "          crom[s1].pop(p1)\n",
        "          crom[s1][p2] = precio1\n",
        "          crom[s2].pop(p2)\n",
        "          crom[s2][p1] = precio2\n",
        "\n",
        "          if not crom[s1]:\n",
        "              crom.pop(s1)\n",
        "          if not crom[s2]:\n",
        "              crom.pop(s2)\n",
        "\n",
        "      return crom\n",
        "\n",
        "\n",
        "  def _mutate_scramble(self, crom: dict) -> dict:\n",
        "      \"\"\"\n",
        "      Realiza una mutación de tipo “scramble” sobre un cromosoma moviendo aleatoriamente\n",
        "      un subconjunto de productos a otras tiendas válidas que los vendan.\n",
        "\n",
        "      Args:\n",
        "          crom (dict): Cromosoma original en formato {tienda: {producto: precio}}.\n",
        "\n",
        "      Returns:\n",
        "          dict: Nuevo cromosoma mutado donde:\n",
        "              - Cada producto se mantiene exactamente una vez.\n",
        "              - Los productos se reasignan solo a tiendas que los venden.\n",
        "              - El precio de cada producto se actualiza al de la tienda destino.\n",
        "              - Se eliminan tiendas vacías tras mover todos sus productos.\n",
        "      \"\"\"\n",
        "      crom = copy.deepcopy(crom)\n",
        "\n",
        "      # Mapear cada producto a su tienda actual\n",
        "      product_to_store = {prod: store for store, prods in crom.items() for prod in prods}\n",
        "      all_products = list(product_to_store.keys())\n",
        "\n",
        "      # Seleccionar aleatoriamente cuántos productos mutar (al menos 1)\n",
        "      k = random.randint(1, len(all_products))\n",
        "      subset = random.sample(all_products, k)\n",
        "\n",
        "      for prod in subset:\n",
        "          tienda_actual = product_to_store[prod]\n",
        "          # Buscar tiendas alternativas que vendan ese producto\n",
        "          posibles = [\n",
        "              t for t, prods in self.tienda_dict.items()\n",
        "              if t != tienda_actual and prod in prods\n",
        "          ]\n",
        "          if not posibles:\n",
        "              continue\n",
        "\n",
        "          nueva = random.choice(posibles)\n",
        "          precio_nuevo = self.tienda_dict[nueva][prod]\n",
        "\n",
        "          # Mover producto\n",
        "          crom[tienda_actual].pop(prod)\n",
        "          crom.setdefault(nueva, {})[prod] = precio_nuevo\n",
        "\n",
        "          # Eliminar tienda vacía\n",
        "          if not crom[tienda_actual]:\n",
        "              crom.pop(tienda_actual)\n",
        "\n",
        "      return crom\n",
        "\n",
        "\n",
        "  def mutation(self, crom):\n",
        "    \"\"\"\n",
        "    Aplica mutación con probabilidad definida en self.mutation_params['mutation_rate'].\n",
        "    Reinserta cualquier producto faltante tras swap o scramble.\n",
        "    \"\"\"\n",
        "    crom_copy = copy.deepcopy(crom)\n",
        "    if random.random() > self.mutation_params['mutation_rate']:\n",
        "        return crom_copy\n",
        "\n",
        "    if self.mutation_params['method'] == \"swap\":\n",
        "        mutated = self._mutate_swap(crom_copy)\n",
        "    elif self.mutation_params['method'] == \"scramble\":\n",
        "        mutated = self._mutate_scramble(crom_copy)\n",
        "    else:\n",
        "        raise ValueError(\"Método de mutación inválido: use 'swap' o 'scramble'\")\n",
        "\n",
        "    # Reinserción de productos faltantes\n",
        "    all_products = {p for prods in self.tienda_dict.values() for p in prods}\n",
        "    present = {prod for prods in mutated.values() for prod in prods}\n",
        "    missing = all_products - present\n",
        "    for prod in missing:\n",
        "        tienda = random.choice([t for t, prods in self.tienda_dict.items() if prod in prods])\n",
        "        mutated.setdefault(tienda, {})[prod] = self.tienda_dict[tienda][prod]\n",
        "\n",
        "    return mutated\n",
        "\n",
        "\n",
        "  def sumar(self, serie_cromosoma):\n",
        "      \"\"\"\n",
        "      Función Auxiliar para calcular el costo total de un cromosoma.\n",
        "\n",
        "      Args:\n",
        "        serie_cromosoma (list): Lista de cromosomas.\n",
        "        distance_matrix (pd.DataFrame): Matriz de distancias.\n",
        "        fuel_price (float): Precio del combustible.\n",
        "\n",
        "      Returns:\n",
        "        list: Lista de costos totales.\n",
        "      \"\"\"\n",
        "      totales = []\n",
        "      for cromosoma  in serie_cromosoma:\n",
        "        total = 0\n",
        "\n",
        "        for store, products in cromosoma.items():\n",
        "          for product, price in products.items():\n",
        "            total += price\n",
        "\n",
        "        stores = list(cromosoma.keys())\n",
        "        path = [\"Casa\"] + stores + [\"Casa\"]\n",
        "        tr = 0\n",
        "        for i in range(len(path) - 1):\n",
        "          tr += self.distance_matrix[path[i]][path[i+1]]\n",
        "        total = total + (tr * self.fuel_price)\n",
        "        totales.append(total)\n",
        "\n",
        "      return totales\n",
        "\n",
        "\n",
        "  def _validate_cromosoma(self, crom: dict) -> dict:\n",
        "      \"\"\"\n",
        "      Función auxiliar para validar los cromosomas.\n",
        "      \"\"\"\n",
        "      all_products = {p for prods in self.tienda_dict.values() for p in prods}\n",
        "      present = {prod for prods in crom.values() for prod in prods}\n",
        "      missing = all_products - present\n",
        "      for prod in missing:\n",
        "          tienda = random.choice([t for t, prods in self.tienda_dict.items() if prod in prods])\n",
        "          crom.setdefault(tienda, {})[prod] = self.tienda_dict[tienda][prod]\n",
        "      return crom\n",
        "\n",
        "\n",
        "  #sumar(seleccion, distance_matrix, fuel_price)\n",
        "\n",
        "  def run(self):\n",
        "      self.history_best = []\n",
        "      self.history_elite = []\n",
        "      population = self.population\n",
        "      for epoch in range(1, self.epoch + 1):\n",
        "          scored = [(self.evaluar_fitness(c), c) for c in population]\n",
        "          fitness_vals = [f for f, _ in scored]\n",
        "          best, avg, worst = min(fitness_vals), sum(fitness_vals)/len(fitness_vals), max(fitness_vals)\n",
        "\n",
        "\n",
        "          # Guardar el mejor\n",
        "          self.history_best.append(best)\n",
        "\n",
        "          self.logger.info(f\"Epoch {epoch}/{self.epoch} → Best: {best:.2f} | Avg: {avg:.2f} | Worst: {worst:.2f}\")\n",
        "\n",
        "          parents = self.selection(scored)\n",
        "          next_gen = []\n",
        "\n",
        "          while len(next_gen) < self.pop_size:\n",
        "              p1, p2 = random.sample(parents, 2)\n",
        "              c1, c2 = self.crossover(p1, p2)\n",
        "              next_gen.append(self.mutation(c1))\n",
        "              if len(next_gen) < self.pop_size:\n",
        "                  next_gen.append(self.mutation(c2))\n",
        "\n",
        "          # Elitismo: conservar el mejor cromosoma de la generación anterior\n",
        "          elite = min(scored, key=lambda x: x[0])[1]\n",
        "          self.history_elite.append(elite)\n",
        "\n",
        "          # Guardamos el mejor\n",
        "          next_gen[0] = elite\n",
        "\n",
        "          population = next_gen\n",
        "\n",
        "      final = [(self.evaluar_fitness(c), c) for c in population]\n",
        "      best_score, best_solution = min(final, key=lambda x: x[0])\n",
        "      self.logger.info(f\"Finished → Best fitness: {best_score:.2f}\")\n",
        "      return best_score, best_solution"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0wgZpqPbOlDb"
      },
      "source": [
        "## Prueba Aleatoria"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jAI3lcPEk7yM"
      },
      "source": [
        "#### Small Cluster"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 276,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "F0Emwydlk-1g",
        "outputId": "82e69d16-65d9-4d66-b2eb-f2f9aa5cf4f9"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Final log path: /content/drive/MyDrive/Proyecto - Compra Genética/pruebas/12.txt\n",
            "/content/drive/MyDrive/Proyecto - Compra Genética\n",
            "Mejor fitness: 12169.899999999998\n",
            "Mejor solución: {'Super Pola': {'Televisores': 619.99, 'Aftershave': 1074.99, 'Esmalte de uñas': 1108.99}, 'La Sirena': {'Fósforos': 212.99}, 'Jumbo': {'Albahaca': 572.99, 'Ropa de hombre': 2314.99}, 'Supermercado Nacional': {'Chicles de fresa': 575.99, 'Rizadores de pelo': 3197.99}, 'Bravo': {'Refresco de cola': 395.99, 'Jamón de pavo': 1710.99}} \n",
            "\n"
          ]
        }
      ],
      "source": [
        "small_prueba = GAOptimization(\n",
        "    project_path=compra_genetica,\n",
        "    indice=12,\n",
        "\n",
        "    # → Aumentamos tamaño de población para más diversidad\n",
        "    pop_size=6,\n",
        "    penalty_factor = 10.0,\n",
        "    # → Selección suave (“roulette wheel”), menor presión selectiva\n",
        "    selection_params={\n",
        "        \"method\": \"soft\",\n",
        "        \"selection_rate\": 0.40\n",
        "    },\n",
        "\n",
        "    # → Crossover uniforme (más mezcla), tasa alta\n",
        "    crossover_params={\n",
        "        \"method\": \"sub_tree\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "\n",
        "    # → Mutación scramble para permutaciones, tasa elevada\n",
        "    mutation_params={\n",
        "        \"method\": \"scramble\",\n",
        "        \"mutation_rate\": 0.25\n",
        "    },\n",
        "\n",
        "    # → Más épocas para permitir convergencia gradual\n",
        "    epoch=150,\n",
        "    log_path=os.path.join(compra_genetica, \"pruebas\")\n",
        ")\n",
        "\n",
        "best_score, best_solution = small_prueba.run()\n",
        "print(\"Mejor fitness:\", best_score)\n",
        "print(\"Mejor solución:\", best_solution, \"\\n\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 277,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "xRUMknlurAaA",
        "outputId": "a3cd15a9-6603-4fad-ca23-6f01a40d2e6a"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'Jumbo': {'Salsa de tomate': 1535.99,\n",
              "  'Velas': 1664.99,\n",
              "  'Desinfectante de manos': 3832.99},\n",
              " 'La Sirena': {'Pan integral': 4714.99,\n",
              "  'Juguetes para niños': 2572.99,\n",
              "  'Arroz integral': 563.99},\n",
              " 'Bravo': {'Pimientos verdes': 3089.99},\n",
              " 'Super Pola': {'Pescado tilapia': 574.99, 'Albahaca': 1456.99},\n",
              " 'Supermercado Nacional': {'Cremas hidratantes': 960.99}}"
            ]
          },
          "metadata": {},
          "execution_count": 277
        }
      ],
      "source": [
        "{'Jumbo': {'Salsa de tomate': 1535.99, 'Velas': 1664.99, 'Desinfectante de manos': 3832.99}, 'La Sirena': {'Pan integral': 4714.99, 'Juguetes para niños': 2572.99, 'Arroz integral': 563.99}, 'Bravo': {'Pimientos verdes': 3089.99}, 'Super Pola': {'Pescado tilapia': 574.99, 'Albahaca': 1456.99}, 'Supermercado Nacional': {'Cremas hidratantes': 960.99}}\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 277,
      "metadata": {
        "id": "U_Og9QNYrGxF"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "39pUpsN5k_MI"
      },
      "source": [
        "#### Medium Cluster"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 278,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DqbyzHRzlBzv",
        "outputId": "731d8d76-4226-4402-e93e-d3a85b93103e"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Final log path: /content/drive/MyDrive/Proyecto - Compra Genética/pruebas/106.txt\n",
            "/content/drive/MyDrive/Proyecto - Compra Genética\n",
            "Mejor fitness: 88974.50000000003\n",
            "Mejor solución: {'Supermercado La Cadena': {'Conos de helado': 500.99, 'Costillas de cerdo': 911.99, 'Semillas de calabaza': 539.99, 'Gomas de borrar': 4626.99, 'Anacardos': 1798.99, 'Palomitas de maíz': 2646.99, 'Lápiz labial': 1392.99}, 'Supermercado La Fuente': {'Melón': 4335.99, 'Salsa de pescado': 376.99, 'Salsa barbacoa': 2154.99, 'Esmalte de uñas': 714.99, 'Perfumes': 2667.99}, 'Supermercado Amigo': {'Refresco de limón': 1597.99, 'Pimientos verdes': 379.99, 'Calculadoras': 3538.99, 'Toallitas húmedas': 382.99, 'Pilas AAA': 1144.99, 'Alcaparras': 2641.99, 'Whisky': 146.99, 'Libros de cocina': 2904.99, 'Aceite de coco': 4888.99}, 'Supermercado Nacional': {'Analgésicos': 292.99}, 'Jumbo': {'Vino blanco': 1158.99, 'Bolsas de basura': 1291.99, 'Desinfectante de manos': 650.99, 'Gin': 368.99}, 'Supermercado Jacaranda': {'Cerveza': 1474.99, 'Gasas': 2827.99}, 'Super Fresh Market': {'Galletas de chocolate': 462.99, 'Adaptadores de corriente': 2155.99, 'Pasta fusilli': 2366.99}, 'Super Pola': {'Papas fritas': 2239.99}, 'Supermercado Carrefour': {'Removedor de esmalte': 580.99}, 'Olé': {'Anillos': 484.99, 'Pegamento': 171.99, 'Desodorante': 4567.99, 'Humidificadores': 387.99}, 'Supermercado Central': {'Uvas': 1545.99, 'Shampoo': 2436.99}, 'Supermercado Garrido': {'Encendedores': 2425.99}, 'Supermercado Bella Vista Mall': {'Muslos de pollo': 1556.99, 'Paraguas': 1353.99}, 'La Sirena': {'Jabón para bebés': 387.99, 'Toallas sanitarias': 1272.99}, 'Supermercado El Encanto': {'Suplementos': 508.99, 'Quesadillas': 1396.99}, 'Supermercado Aprecio': {'Muffins': 1873.99}, 'Bravo': {'Galletas de avena': 2111.99}, 'Supermercado Iberia': {'Queso mozzarella': 516.99, 'Cepillo de dientes': 854.99}} \n",
            "\n"
          ]
        }
      ],
      "source": [
        "medium_prueba = GAOptimization(\n",
        "    project_path=compra_genetica,\n",
        "    indice=106,\n",
        "\n",
        "    # → Aumentamos tamaño de población para más diversidad\n",
        "    pop_size=30,\n",
        "    penalty_factor = 10.0,\n",
        "    # → Selección suave (“roulette wheel”), menor presión selectiva\n",
        "    selection_params={\n",
        "        \"method\": \"soft\",\n",
        "        \"selection_rate\": 0.40\n",
        "    },\n",
        "\n",
        "    # → Crossover uniforme (más mezcla), tasa alta\n",
        "    crossover_params={\n",
        "        \"method\": \"uniform\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "\n",
        "    # → Mutación scramble para permutaciones, tasa elevada\n",
        "    mutation_params={\n",
        "        \"method\": \"scramble\",\n",
        "        \"mutation_rate\": 0.10\n",
        "    },\n",
        "\n",
        "    # → Más épocas para permitir convergencia gradual\n",
        "    epoch=250,\n",
        "    log_path=os.path.join(compra_genetica, \"pruebas\")\n",
        ")\n",
        "\n",
        "best_score, best_solution = medium_prueba.run()\n",
        "print(\"Mejor fitness:\", best_score)\n",
        "print(\"Mejor solución:\", best_solution, \"\\n\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E-cQ6ODalCLJ"
      },
      "source": [
        "#### Big Cluster"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 279,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3soOZKyPbK_S",
        "outputId": "dd4afd41-8bd0-40cd-93b6-43e463910fbc"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Final log path: /content/drive/MyDrive/Proyecto - Compra Genética/pruebas/130.txt\n",
            "/content/drive/MyDrive/Proyecto - Compra Genética\n",
            "Mejor fitness: 677231.9999999979\n",
            "Mejor solución: {'Supermercado Plaza Lama': {'Termómetros': 1749.99, 'Palitos de algodón': 2514.99, 'Calculadoras': 2006.99, 'Biberones': 2626.99, 'Zanahorias': 1427.99, 'Tampones': 564.99, 'Ventiladores': 2489.99, 'Salsa picante': 811.99, 'Pan de molde': 3577.99, 'Rizadores de pelo': 2173.99, 'Sardinas enlatadas': 601.99, 'Gomas de borrar': 1536.99, 'Sábanas': 217.99, 'Brochas de maquillaje': 965.99, 'Loción': 128.99, 'Vinagre balsámico': 997.99, 'Ropa de hombre': 4032.99}, 'Supermercado La Fuente del Norte': {'Pescado salmón': 3152.99, 'Manzanas': 728.99, 'Salsa teriyaki': 1922.99, 'Donas': 4022.99, 'Detergente para ropa': 380.99, 'Copas menstruales': 4358.99, 'Arroz integral': 353.99, 'Mango': 1515.99, 'Anacardos': 3617.99, 'Pepinos': 1439.99, 'Jabón de manos': 2045.99, 'Mermelada de durazno': 2608.99, 'Consolas de videojuegos': 3672.99, 'Azúcar morena': 413.99, 'Harina de maíz': 1863.99, 'Billeteras': 2504.99}, 'Supermercado El Paraiso': {'Pan pita': 3330.99, 'Margarina': 1888.99, 'Reproductores de DVD': 4177.99, 'Tartas': 1448.99, 'Cerveza': 3667.99, 'Aftershave': 1365.99, 'Zapatos de mujer': 2809.99, 'Zapatos de hombre': 3385.99, 'Jugo de naranja': 2913.99, 'Protector solar': 4842.99, 'Coliflor': 216.99, 'Pimienta negra': 4265.99, 'Harina de trigo': 766.99}, 'Supermercado Super La Rosa': {'Cereal de avena': 842.99, 'Antihistamínicos': 1715.99, 'Bizcochos': 3440.99, 'Aceitunas verdes': 992.99, 'Yogur de fresa': 2669.99, 'Pilas AA': 4231.99, 'Muffins': 3614.99, 'Loción para bebés': 4275.99, 'Whisky': 357.99}, 'Supermercado Super Norte': {'Melón': 2893.99, 'Rímel': 1434.99, 'Chupetes': 4910.99, 'Aceite de girasol': 4357.99, 'Conos de helado': 4434.99, 'Almendras': 3611.99}, 'Supermercado Plaza de la Salud': {'Vinagre de manzana': 3685.99, 'Pilas AAA': 4875.99, 'Pulseras': 303.99, 'Pasta espagueti': 4394.99, 'Uvas': 4236.99}, 'Supermercado Jacaranda': {'Cortaúñas': 3691.99, 'Sombreros': 1701.99, 'Yogur griego': 3539.99}, 'Super Pola': {'Helado de café': 4100.99, 'Adaptadores de corriente': 4309.99, 'Mostaza': 1558.99, 'Leche entera': 3487.99, 'Suavizante de telas': 2151.99, 'Edredones': 1528.99, 'Vino blanco': 1226.99, 'Helado de menta': 4760.99, 'Removedor de esmalte': 389.99, 'Alfombras': 1489.99}, 'Supermercado La Fé': {'Berenjenas': 137.99, 'Papel toalla': 1584.99, 'Fundas de almohada': 2356.99, 'Cremas para pañales': 3337.99, 'Jamón de pavo': 860.99}, 'Supermercado El Poderoso': {'Plátanos': 1785.99, 'Vinagre blanco': 2924.99, 'Semillas de girasol': 1815.99, 'Cacahuates': 3686.99, 'Miel': 2420.99, 'Cuadernos': 1370.99}, 'Supermercado Hiper Uno': {'Salami': 4061.99, 'Leche sin lactosa': 3226.99, 'Vitaminas': 575.99, 'Agua oxigenada': 4463.99, 'Sombra de ojos': 1651.99, 'Jabón de baño': 1369.99, 'Vodka': 737.99}, 'Supermercado Super Selectos': {'Esponjas de cocina': 2730.99, 'Papel higiénico': 3917.99, 'Peras': 4701.99, 'Mayonesa': 759.99, 'Relojes': 1373.99}, 'Supermercado Villa Francisca': {'Galletas de mantequilla': 4439.99, 'Avellanas': 3345.99, 'Sandía': 1418.99}, 'Supermercado El Bienvenido': {'Ropa de mujer': 4169.99, 'Tocino': 2700.99, 'Salsa de tomate': 443.99}, 'Supermercado La Espiga': {'Sal de mesa': 2122.99, 'Maletas': 1271.99, 'Shampoo': 1823.99, 'Pegamento': 656.99, 'Altavoces Bluetooth': 1216.99, 'Carpetas': 1354.99, 'Desodorante': 545.99}, 'Supermercado El Progreso': {'Colchas': 3763.99, 'Perfumes': 560.99}, 'Supermercado La Preferida': {'Camarones': 3987.99, 'Juegos de mesa': 2009.99, 'Queso parmesano': 1560.99}, 'Supermercado El Imperio': {'Sal marina': 1031.99, 'Linterna': 1645.99, 'Collares': 3610.99, 'Tijeras': 3520.99}, 'Supermercado El Escogido': {'Fresas': 1260.99, 'Calabacín': 223.99, 'Costillas de cerdo': 2943.99, 'Cortinas': 1118.99, 'Deshumidificadores': 4952.99}, 'Supermercado Plaza Bella': {'Aceite para bebés': 4554.99, 'Antisépticos': 2970.99, 'Limas de uñas': 3724.99, 'Bolígrafos': 3741.99, 'Jugo de manzana': 2501.99, 'Maquillaje': 181.99}, 'Supermercado Ever': {'Pan naan': 893.99, 'Croissants': 598.99, 'Pimientos verdes': 2088.99, 'Suplementos': 2496.99}, 'Supermercado Lupo': {'Cintas para el cabello': 129.99, 'Aceite de oliva': 1324.99, 'Alcaparras': 1583.99, 'Mantequilla': 4427.99, 'Carne molida de res': 1125.99, 'Pasteles': 766.99, 'Colonia': 988.99}, 'Supermercado Plaza Comercial': {'Café molido': 116.99, 'Aceitunas negras': 1904.99, 'Pasta fusilli': 373.99}, 'Supermercado El Almacen': {'Calefactores': 3859.99, 'Zapatos de bebé': 779.99, 'Fósforos': 2284.99}, 'Supermercado Super La Fuente': {'Secadores de cabello': 4139.99, 'Hilo dental': 2832.99, 'Pimientos rojos': 2835.99}, 'Supermercado La Cadena Oriental': {'Semillas de calabaza': 2755.99, 'Granola': 4259.99}, 'Super Fresh Market': {'Pasta de dientes': 1001.99}, 'Supermercado Plaza Caracol': {'Peines': 694.99, 'Mermelada de fresa': 1762.99, 'Arándanos': 1691.99, 'Tomates': 1263.99}, 'Supermercado Villa Juana': {'Helado de chocolate': 927.99, 'Huevos': 444.99}, 'Supermercado Plaza Oriental': {'Jarabe para la tos': 1987.99, 'Queso mozzarella': 3640.99, 'Humidificadores': 2787.99, 'Ajo': 2624.99}, 'Supermercado Carrefour': {'Bolsas de basura': 1422.99, 'Fundas para celular': 1961.99, 'Televisores': 2993.99}, 'Supermercado El Ahorrón': {'Lamparas de mesa': 1030.99, 'Cables USB': 1951.99, 'Pasta penne': 441.99, 'Galletas de avena': 1757.99, 'Toallitas húmedas': 342.99, 'Pan árabe': 4099.99}, 'Supermercado Bravo Oriental': {'Analgésicos': 3295.99, 'Tortillas de harina': 3357.99}, 'Supermercado El Buen Pastor': {'Espejos': 3695.99, 'Salsa barbacoa': 1194.99, 'Cilantro': 1114.99, 'Revistas de moda': 2558.99}, 'Supermercado Super Rey': {'Perejil': 1329.99, 'Pechugas de pollo': 2439.99, 'Arroz blanco': 3017.99, 'Muslos de pollo': 1418.99}, 'Supermercado El Milagro': {'Galletas saladas': 122.99, 'Cebollas': 2020.99, 'Tapetes': 3401.99}, 'Supermercado La Cadena': {'Lamparas de techo': 4713.99, 'Agua purificada': 3433.99}, 'Supermercado El Éxito': {'Cremas hidratantes': 4571.99, 'Paraguas': 1135.99}, 'Supermercado El Buen Precio': {'Espinacas': 1485.99, 'Pan baguette': 1750.99, 'Persianas': 467.99, 'Base de maquillaje': 154.99}, 'Supermercado Bravo Norte': {'Pan integral': 4140.99}, 'Supermercado Nacional': {'Brócoli': 4179.99, 'Vendas': 3366.99, 'Queso cheddar': 160.99, 'Ketchup': 2017.99, 'Cadenas': 3876.99}, 'Supermercado El Rancho': {'Encendedores': 4043.99, 'Atún enlatado': 1115.99, 'Salsa ranchera': 3336.99}, 'Supermercado Megacentro': {'Gasas': 970.99, 'Jabón para bebés': 4708.99, 'Agua mineral': 2636.99}, 'Jumbo': {'Velas': 2182.99}, 'Supermercado Los Hidalgos': {'Nachos': 3876.99, 'Pollo entero': 3325.99}, 'Supermercado Supermercado Nuñez': {'Anillos': 519.99, 'Libretas': 283.99, 'Almohadas': 3832.99}, 'Supermercado Super Fresh': {'Refresco de cola': 778.99, 'Pepinillos': 177.99, 'Chocolate negro': 3063.99}, 'Supermercado Gran Maravilla': {'Té verde': 1222.99, 'Servilletas': 3613.99, 'Nueces': 4768.99, 'Algodón': 2508.99, 'Juguetes para niños': 4625.99}, 'Supermercado Sabana Grande': {'Salsa de ostras': 2941.99, 'Té negro': 1644.99, 'Aire acondicionado': 3202.99, 'Chicles de fresa': 891.99, 'Filete de res': 2229.99}, 'Supermercado La Perla': {'Vino tinto': 4038.99, 'Orégano': 138.99, 'Papas fritas': 2070.99, 'Filtros de agua': 528.99, 'Pescado tilapia': 4349.99}, 'Supermercado Hipermercado Plaza': {'Esmalte de uñas': 1334.99, 'Jamón de cerdo': 1966.99}, 'Supermercado Central': {'Joyas': 3334.99, 'Piña': 1018.99}, 'Supermercado Super Max': {'Lápices': 626.99, 'Pañales': 2627.99}, 'Supermercado La Economía': {'Purificadores de aire': 340.99, 'Enchiladas': 3710.99, 'Toallas': 1645.99}, 'Supermercado Market Center': {'Galletas de chocolate': 1179.99, 'Cinturones': 115.99}, 'Supermercado Precio Justo': {'Antiinflamatorios': 1144.99, 'Nachos con queso': 289.99, 'Bolsos': 4072.99, 'Mascarillas faciales': 2322.99}, 'Olé': {'Cepillo de dientes': 1205.99}, 'Supermercado Garrido': {'Helado de fresa': 2005.99, 'Desinfectante de manos': 295.99, 'Palomitas de maíz': 252.99, 'Lechuga': 4109.99}, 'Supermercado Bella Vista Mall': {'Semillas de chía': 3046.99, 'Cinta adhesiva': 2410.99}, 'Supermercado Tropical': {'Audífonos': 3143.99, 'Refresco de limón': 3883.99}, 'Supermercado El Encanto': {'Ron': 2476.99}, 'Bravo': {'Café instantáneo': 2954.99, 'Salsa de pescado': 2544.99}, 'Supermercado Los Prados': {'Ropa de bebé': 1261.99, 'Cepillos para el cabello': 1414.99}, 'Supermercado La Cumbre': {'Tortillas de maíz': 2095.99}, 'Supermercado El Faro': {'Aceite de coco': 730.99}, 'Supermercado Mr. Food': {'Salsa de guacamole': 172.99}, 'Supermercado La Esperanza': {'Naranjas': 3034.99, 'Libros de cocina': 2019.99}, 'Supermercado Santa Fe': {'Chocolate con leche': 2645.99, 'Planchas de pelo': 4097.99}, 'Supermercado Super La Amistad': {'Pimienta blanca': 2803.99, 'Cobijas': 3412.99, 'Curitas': 1259.99}, 'Supermercado Plaza Real': {'Aretes': 1810.99}, 'Supermercado Caribe': {'Quesadillas': 204.99}, 'Supermercado Super Selecto': {'Gafas de sol': 4645.99}, 'Supermercado Los Jardines': {'Cereal de maíz': 778.99, 'Limpiador multiusos': 1130.99, 'Pistachos': 104.99}, 'Supermercado Central Dominicano': {'Mochilas': 3171.99, 'Arepas': 1169.99, 'Champú para bebés': 2998.99}, 'Supermercado Aprecio': {'Champaña': 1872.99}, 'Supermercado La Nueva': {'Helado de vainilla': 1178.99, 'Gin': 877.99, 'Chicles de menta': 3268.99, 'Leche descremada': 271.99, 'Lápiz labial': 4243.99, 'Reglas': 1502.99}, 'Supermercado El Farolito': {'Alcohol': 2490.99}, 'Supermercado La Nueva Esperanza': {'Chuletas de cerdo': 1214.99}, 'Supermercado Super Martínez': {'Yogur natural': 858.99}, 'La Sirena': {'Albahaca': 2412.99}, 'Supermercado Las Américas': {'Brownies': 279.99}, 'Supermercado Super Lopez': {'Protectores diarios': 1942.99}, 'Supermercado Las Colinas': {'Cargadores de teléfono': 4331.99}, 'Supermercado La Preferencia': {'Limones': 788.99}, 'Supermercado La Plaza': {'Acondicionador': 1244.99}, 'Supermercado Iberia': {'Jabón líquido': 980.99}, 'Supermercado El Sol': {'Galletas de vainilla': 3403.99}} \n",
            "\n"
          ]
        }
      ],
      "source": [
        "big_prueba = GAOptimization(\n",
        "    project_path=compra_genetica,\n",
        "    indice=130,\n",
        "\n",
        "    # → Aumentamos tamaño de población para más diversidad\n",
        "    pop_size=70,\n",
        "    penalty_factor = 10.0,\n",
        "    # → Selección suave (“roulette wheel”), menor presión selectiva\n",
        "    selection_params={\n",
        "        \"method\": \"soft\",\n",
        "        \"selection_rate\": 0.40\n",
        "    },\n",
        "\n",
        "    # → Crossover uniforme (más mezcla), tasa alta\n",
        "    crossover_params={\n",
        "        \"method\": \"uniform\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "\n",
        "    # → Mutación scramble para permutaciones, tasa elevada\n",
        "    mutation_params={\n",
        "        \"method\": \"scramble\",\n",
        "        \"mutation_rate\": 0.08\n",
        "    },\n",
        "\n",
        "    # → Más épocas para permitir convergencia gradual\n",
        "    epoch=150,\n",
        "    log_path=os.path.join(compra_genetica, \"pruebas\")\n",
        ")\n",
        "\n",
        "best_score, best_solution = big_prueba.run()\n",
        "print(\"Mejor fitness:\", best_score)\n",
        "print(\"Mejor solución:\", best_solution, \"\\n\")"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YaY6v3T5OgN4"
      },
      "source": [
        "### Observando la convergencia"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 280,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 54
        },
        "id": "S21OyUArMDiq",
        "outputId": "4e614f54-7e7f-48b2-f4a4-83fb5e7ab452"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1700x500 with 3 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "fig, axes = plt.subplots(1, 3, figsize=(17, 5))\n",
        "axes[0].plot(small_prueba.history_best)\n",
        "axes[0].set(\n",
        "    title=\"Small\",\n",
        "    xlabel=\"Epoch\",\n",
        "    ylabel=\"Fitness\"\n",
        ")\n",
        "\n",
        "axes[1].plot(medium_prueba.history_best)\n",
        "axes[1].set(\n",
        "    title=\"Medium\",\n",
        "    xlabel=\"Epoch\",\n",
        "    ylabel=\"Fitness\"\n",
        ")\n",
        "\n",
        "axes[2].plot(big_prueba.history_best)\n",
        "axes[2].set(\n",
        "    title=\"Big\",\n",
        "    xlabel=\"Epoch\",\n",
        "    ylabel=\"Fitness\"\n",
        ")\n",
        "\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 281,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1l9qVgW6XHm_",
        "outputId": "df85e274-9122-4904-c7d7-cb4ee6f80912"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Costo total: 664282.00\n"
          ]
        }
      ],
      "source": [
        "prueba_xd = best_solution\n",
        "\n",
        "# Calcula el costo total sumando todos los precios anidados\n",
        "total_cost = sum(\n",
        "    price\n",
        "    for products in prueba_xd.values()\n",
        "    for price in products.values()\n",
        ")\n",
        "\n",
        "print(f\"Costo total: {total_cost:.2f}\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 282,
      "metadata": {
        "id": "lHMeUy6JdULk"
      },
      "outputs": [],
      "source": [
        "#best_solution"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 283,
      "metadata": {
        "id": "7mdQYjMzbjmx"
      },
      "outputs": [],
      "source": [
        "#ga.history_elite"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 284,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "vbM9wYQlBirw",
        "outputId": "e0c2863b-245c-4d59-d627-2e2cb814c1d6"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'# Pegar la lista de dicts como string\\nraw = f\"\"\"{small_prueba.history_elite}\"\"\"\\nsolutions = ast.literal_eval(raw)\\n\\n# Convertimos cada cromosoma a cadena canonical para contar unicidad\\nfreq = Counter(map(str, solutions))\\n\\n# Mostramos un resumen ordenado\\nfor sol, count in freq.most_common():\\n    print(f\"{count} veces → {sol}\")'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 284
        }
      ],
      "source": [
        "'''# Pegar la lista de dicts como string\n",
        "raw = f\"\"\"{small_prueba.history_elite}\"\"\"\n",
        "solutions = ast.literal_eval(raw)\n",
        "\n",
        "# Convertimos cada cromosoma a cadena canonical para contar unicidad\n",
        "freq = Counter(map(str, solutions))\n",
        "\n",
        "# Mostramos un resumen ordenado\n",
        "for sol, count in freq.most_common():\n",
        "    print(f\"{count} veces → {sol}\")'''"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "8CTYaGtkTZtC"
      },
      "source": [
        "## Detalles a desglozar\n",
        "###  Selección\n",
        "Parametro: selection_params\n",
        "* Heuristica\n",
        "  1. selection_rate\n",
        "\n",
        "* Métodos\n",
        "  1. hard\n",
        "  2. soft\n",
        "\n",
        "https://www.tutorialspoint.com/genetic_algorithms/genetic_algorithms_mutation.htm\n",
        "\n",
        "### Crossover\n",
        "Parametro: crossover_params\n",
        "* Heurisitica\n",
        "  1. crossover_rate\n",
        "  2. inheritance Rate\n",
        "\n",
        "* Metodos\n",
        "  1. uniform\n",
        "  2. sub_tree\n",
        "\n",
        "https://www.nature.com/articles/s41598-023-39696-0\n",
        "\n",
        "\n",
        "### Mutation\n",
        "Parametro: mutation_paramss\n",
        "* Heuristica\n",
        "  1. mutation_rate\n",
        "\n",
        "* Metodos\n",
        "  1. swap\n",
        "  2. scramble\n",
        "\n",
        "https://www.tutorialspoint.com/genetic_algorithms/genetic_algorithms_mutation.htm\n",
        "\n",
        "\n",
        "\n",
        "### Combinaciones de Parámetros\n",
        "\n",
        "#### 1) soft + uniform + scramble\n",
        "```python\n",
        "# 1) soft + uniform + scramble\n",
        "selection_params={\n",
        "    \"method\": \"soft\",\n",
        "    \"selection_rate\": 0.40\n",
        "}\n",
        "\n",
        "crossover_params={\n",
        "    \"method\": \"uniform\",\n",
        "    \"crossover_rate\": 0.88,\n",
        "    \"inheritance_rate\": 0.50\n",
        "}\n",
        "\n",
        "mutation_params={\n",
        "    \"method\": \"scramble\",\n",
        "    \"mutation_rate\": 0.0001\n",
        "}\n",
        "```\n",
        "\n",
        "#### 2) soft + uniform + swap\n",
        "```python\n",
        "# 2) soft + uniform + swap\n",
        "selection_params={\n",
        "    \"method\": \"soft\",\n",
        "    \"selection_rate\": 0.40\n",
        "}\n",
        "\n",
        "crossover_params={\n",
        "    \"method\": \"uniform\",\n",
        "    \"crossover_rate\": 0.88,\n",
        "    \"inheritance_rate\": 0.50\n",
        "}\n",
        "\n",
        "mutation_params={\n",
        "    \"method\": \"swap\",\n",
        "    \"mutation_rate\": 0.0001\n",
        "}\n",
        "```\n",
        "\n",
        "\n",
        "#### 3) soft + sub_tree + scramble\n",
        "```python\n",
        "# 3) soft + sub_tree + scramble\n",
        "selection_params={\n",
        "    \"method\": \"soft\",\n",
        "    \"selection_rate\": 0.40\n",
        "}\n",
        "\n",
        "crossover_params={\n",
        "    \"method\": \"sub_tree\",\n",
        "    \"crossover_rate\": 0.88,\n",
        "    \"inheritance_rate\": 0.50\n",
        "}\n",
        "\n",
        "mutation_params={\n",
        "    \"method\": \"scramble\",\n",
        "    \"mutation_rate\": 0.0001\n",
        "}\n",
        "```\n",
        "\n",
        "#### 4) soft + sub_tree + swap\n",
        "```python\n",
        "# 4) soft + sub_tree + swap\n",
        "selection_params={\n",
        "    \"method\": \"soft\",\n",
        "    \"selection_rate\": 0.40\n",
        "}\n",
        "\n",
        "crossover_params={\n",
        "    \"method\": \"sub_tree\",\n",
        "    \"crossover_rate\": 0.88,\n",
        "    \"inheritance_rate\": 0.50\n",
        "}\n",
        "\n",
        "mutation_params={\n",
        "    \"method\": \"swap\",\n",
        "    \"mutation_rate\": 0.0001\n",
        "}\n",
        "```\n",
        "\n",
        "#### 5) hard + uniform + scramble\n",
        "```python\n",
        "# 5) hard + uniform + scramble\n",
        "selection_params={\n",
        "    \"method\": \"hard\",\n",
        "    \"selection_rate\": 0.40\n",
        "}\n",
        "\n",
        "crossover_params={\n",
        "    \"method\": \"uniform\",\n",
        "    \"crossover_rate\": 0.88,\n",
        "    \"inheritance_rate\": 0.50\n",
        "}\n",
        "\n",
        "mutation_params={\n",
        "    \"method\": \"scramble\",\n",
        "    \"mutation_rate\": 0.0001\n",
        "}\n",
        "```\n",
        "\n",
        "\n",
        "#### 6) hard + uniform + swap\n",
        "```python\n",
        "# 6) hard + uniform + swap\n",
        "selection_params={\n",
        "    \"method\": \"hard\",\n",
        "    \"selection_rate\": 0.40\n",
        "}\n",
        "\n",
        "crossover_params={\n",
        "    \"method\": \"uniform\",\n",
        "    \"crossover_rate\": 0.88,\n",
        "    \"inheritance_rate\": 0.50\n",
        "}\n",
        "\n",
        "mutation_params={\n",
        "    \"method\": \"swap\",\n",
        "    \"mutation_rate\": 0.0001\n",
        "}\n",
        "```\n",
        "\n",
        "#### 7) hard + sub_tree + scramble\n",
        "```python\n",
        "# 7) hard + sub_tree + scramble\n",
        "selection_params={\n",
        "    \"method\": \"hard\",\n",
        "    \"selection_rate\": 0.40\n",
        "}\n",
        "\n",
        "crossover_params={\n",
        "    \"method\": \"sub_tree\",\n",
        "    \"crossover_rate\": 0.88,\n",
        "    \"inheritance_rate\": 0.50\n",
        "}\n",
        "\n",
        "mutation_params={\n",
        "    \"method\": \"scramble\",\n",
        "    \"mutation_rate\": 0.0001\n",
        "}\n",
        "```\n",
        "\n",
        "#### 8) hard + sub_tree + swap\n",
        "\n",
        "```python\n",
        "selection_params={\n",
        "    \"method\": \"hard\",\n",
        "    \"selection_rate\": 0.40\n",
        "}\n",
        "\n",
        "crossover_params={\n",
        "    \"method\": \"sub_tree\",\n",
        "    \"crossover_rate\": 0.88,\n",
        "    \"inheritance_rate\": 0.50\n",
        "}\n",
        "\n",
        "mutation_params={\n",
        "    \"method\": \"swap\",\n",
        "    \"mutation_rate\": 0.0001\n",
        "}\n",
        "\n",
        "```\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "byanKJReRc2z"
      },
      "source": [
        "## Clase Flujo General"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 285,
      "metadata": {
        "id": "AV56tHr2Ssrb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 310
        },
        "outputId": "5d9119dd-c9c7-401c-e0e7-3333c1994174"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   problem_cluster  \\\n",
              "0    small-3s-4p-f1_10-q1_4-random   \n",
              "1    small-3s-4p-f1_10-q1_4-random   \n",
              "2    small-3s-4p-f1_10-q1_4-random   \n",
              "3    small-3s-4p-f1_10-q1_4-random   \n",
              "4  small-5s-10p-f0_10-q1_10-random   \n",
              "\n",
              "                                             catalog  fuel_price  \\\n",
              "0  problemset/in/small-3s-4p-f1_10-q1_4-random_ca...           1   \n",
              "1  problemset/in/small-3s-4p-f1_10-q1_4-random_ca...           1   \n",
              "2  problemset/in/small-3s-4p-f1_10-q1_4-random_ca...           6   \n",
              "3  problemset/in/small-3s-4p-f1_10-q1_4-random_ca...           6   \n",
              "4  problemset/in/small-5s-10p-f0_10-q1_10-random_...           0   \n",
              "\n",
              "                                               query  \\\n",
              "0                          ['Purificadores de aire']   \n",
              "1  ['Purificadores de aire', 'Aceite de girasol',...   \n",
              "2                          ['Purificadores de aire']   \n",
              "3  ['Purificadores de aire', 'Pasta de dientes', ...   \n",
              "4                                    ['Televisores']   \n",
              "\n",
              "                                   qbf best solution  qbf best value  \\\n",
              "0  [array(['Supermercado Nacional', 'Purificadore...         4401.99   \n",
              "1  [array(['Jumbo', 'Aceite de girasol'], dtype=o...        11270.96   \n",
              "2  [array(['Supermercado Nacional', 'Purificadore...         4501.99   \n",
              "3  [array(['Jumbo', 'Pasta de dientes'], dtype=ob...        11400.96   \n",
              "4  [array(['Super Pola', 'Televisores'], dtype=ob...          619.99   \n",
              "\n",
              "                                    ga best solution  ga best value  \\\n",
              "0  [array(['Supermercado Nacional', 'Purificadore...        4401.99   \n",
              "1  [array(['Supermercado Nacional', 'Purificadore...       11283.96   \n",
              "2  [array(['Supermercado Nacional', 'Purificadore...        4501.99   \n",
              "3  [array(['Supermercado Nacional', 'Purificadore...       11478.96   \n",
              "4  [array(['Super Pola', 'Televisores'], dtype=ob...         619.99   \n",
              "\n",
              "                                    gc best solution  gc best value  \\\n",
              "0  [array(['Supermercado Nacional', 'Purificadore...        4401.99   \n",
              "1  [array(['Jumbo', 'Aceite de girasol'], dtype=o...       11270.96   \n",
              "2  [array(['Supermercado Nacional', 'Purificadore...        4501.99   \n",
              "3  [array(['Jumbo', 'Pasta de dientes'], dtype=ob...       11400.96   \n",
              "4  [array(['Super Pola', 'Televisores'], dtype=ob...         619.99   \n",
              "\n",
              "                                    gn best solution  gn best value  \n",
              "0  [array(['Supermercado Nacional', 'Purificadore...        4401.99  \n",
              "1  [array(['Supermercado Nacional', 'Alfombras'],...       12817.96  \n",
              "2  [array(['Supermercado Nacional', 'Purificadore...        4501.99  \n",
              "3  [array(['Supermercado Nacional', 'Alfombras'],...       12917.96  \n",
              "4    [array(['Bravo', 'Televisores'], dtype=object)]        3638.99  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1a037cc9-bc7c-4af5-81cb-54f28ca40055\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>problem_cluster</th>\n",
              "      <th>catalog</th>\n",
              "      <th>fuel_price</th>\n",
              "      <th>query</th>\n",
              "      <th>qbf best solution</th>\n",
              "      <th>qbf best value</th>\n",
              "      <th>ga best solution</th>\n",
              "      <th>ga best value</th>\n",
              "      <th>gc best solution</th>\n",
              "      <th>gc best value</th>\n",
              "      <th>gn best solution</th>\n",
              "      <th>gn best value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>problemset/in/small-3s-4p-f1_10-q1_4-random_ca...</td>\n",
              "      <td>1</td>\n",
              "      <td>['Purificadores de aire']</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4401.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4401.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4401.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4401.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>problemset/in/small-3s-4p-f1_10-q1_4-random_ca...</td>\n",
              "      <td>1</td>\n",
              "      <td>['Purificadores de aire', 'Aceite de girasol',...</td>\n",
              "      <td>[array(['Jumbo', 'Aceite de girasol'], dtype=o...</td>\n",
              "      <td>11270.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>11283.96</td>\n",
              "      <td>[array(['Jumbo', 'Aceite de girasol'], dtype=o...</td>\n",
              "      <td>11270.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Alfombras'],...</td>\n",
              "      <td>12817.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>problemset/in/small-3s-4p-f1_10-q1_4-random_ca...</td>\n",
              "      <td>6</td>\n",
              "      <td>['Purificadores de aire']</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4501.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4501.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4501.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4501.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>problemset/in/small-3s-4p-f1_10-q1_4-random_ca...</td>\n",
              "      <td>6</td>\n",
              "      <td>['Purificadores de aire', 'Pasta de dientes', ...</td>\n",
              "      <td>[array(['Jumbo', 'Pasta de dientes'], dtype=ob...</td>\n",
              "      <td>11400.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>11478.96</td>\n",
              "      <td>[array(['Jumbo', 'Pasta de dientes'], dtype=ob...</td>\n",
              "      <td>11400.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Alfombras'],...</td>\n",
              "      <td>12917.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>small-5s-10p-f0_10-q1_10-random</td>\n",
              "      <td>problemset/in/small-5s-10p-f0_10-q1_10-random_...</td>\n",
              "      <td>0</td>\n",
              "      <td>['Televisores']</td>\n",
              "      <td>[array(['Super Pola', 'Televisores'], dtype=ob...</td>\n",
              "      <td>619.99</td>\n",
              "      <td>[array(['Super Pola', 'Televisores'], dtype=ob...</td>\n",
              "      <td>619.99</td>\n",
              "      <td>[array(['Super Pola', 'Televisores'], dtype=ob...</td>\n",
              "      <td>619.99</td>\n",
              "      <td>[array(['Bravo', 'Televisores'], dtype=object)]</td>\n",
              "      <td>3638.99</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a037cc9-bc7c-4af5-81cb-54f28ca40055')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1a037cc9-bc7c-4af5-81cb-54f28ca40055 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1a037cc9-bc7c-4af5-81cb-54f28ca40055');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-28ba50a1-49de-4023-9f3e-5b54cea082d9\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-28ba50a1-49de-4023-9f3e-5b54cea082d9')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-28ba50a1-49de-4023-9f3e-5b54cea082d9 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "problem_set",
              "summary": "{\n  \"name\": \"problem_set\",\n  \"rows\": 136,\n  \"fields\": [\n    {\n      \"column\": \"problem_cluster\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"medium-30s-80p-f0_10-q1_20-random\",\n          \"small-5s-10p-f0_10-q1_10-random\",\n          \"small-5s-10p-f0_10-q1_10-parque\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"catalog\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"problemset/in/medium-30s-80p-f0_10-q1_20-random_catalog.xlsx\",\n          \"problemset/in/small-5s-10p-f0_10-q1_10-random_catalog.xlsx\",\n          \"problemset/in/small-5s-10p-f0_10-q1_10-parque_catalog.xlsx\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fuel_price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 9,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          6,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"query\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 130,\n        \"samples\": [\n          \"['Pistachos', 'Aftershave', 'Huevos', 'Agua purificada']\",\n          \"['Mermelada de fresa', 'Joyas', 'Sombra de ojos', 'Berenjenas', 'Az\\u00facar blanca', 'Helado de chocolate', 'Aretes']\",\n          \"['Reproductores de DVD', 'Suavizante de telas', 'Pulseras', 'Salsa ranchera']\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"qbf best solution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 94,\n        \"samples\": [\n          \"[array(['Bravo', 'Mermelada de fresa'], dtype=object)\\n array(['Bravo', 'Sombra de ojos'], dtype=object)\\n array(['Supermercado Nacional', 'Joyas'], dtype=object)\\n array(['Jumbo', 'Az\\u00facar blanca'], dtype=object)\\n array(['Super Pola', 'Berenjenas'], dtype=object)\\n array(['La Sirena', 'Helado de chocolate'], dtype=object)\\n array(['La Sirena', 'Aretes'], dtype=object)]\",\n          \"[array(['Super Pola', 'Consolas de videojuegos'], dtype=object)]\",\n          \"[array(['La Sirena', 'Agua purificada'], dtype=object)\\n array(['Jumbo', 'Pistachos'], dtype=object)\\n array(['Jumbo', 'Aftershave'], dtype=object)\\n array(['Jumbo', 'Huevos'], dtype=object)]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"qbf best value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5396.864163111413,\n        \"min\": 100.99,\n        \"max\": 20463.9,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          5772.93,\n          958.99,\n          20463.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ga best solution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 131,\n        \"samples\": [\n          \"[array(['Jumbo', 'Pistachos'], dtype=object)\\n array(['Jumbo', 'Aftershave'], dtype=object)\\n array(['Jumbo', 'Huevos'], dtype=object)\\n array(['La Sirena', 'Agua purificada'], dtype=object)]\",\n          \"[array(['Bravo', 'Mermelada de fresa'], dtype=object)\\n array(['Supermercado Nacional', 'Joyas'], dtype=object)\\n array(['Bravo', 'Sombra de ojos'], dtype=object)\\n array(['Super Pola', 'Berenjenas'], dtype=object)\\n array(['Jumbo', 'Az\\u00facar blanca'], dtype=object)\\n array(['La Sirena', 'Helado de chocolate'], dtype=object)\\n array(['La Sirena', 'Aretes'], dtype=object)]\",\n          \"[array(['Super Pola', 'Reproductores de DVD'], dtype=object)\\n array(['Jumbo', 'Suavizante de telas'], dtype=object)\\n array(['Supermercado Nacional', 'Pulseras'], dtype=object)\\n array(['La Sirena', 'Salsa ranchera'], dtype=object)]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ga best value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5975.534295469298,\n        \"min\": 100.99,\n        \"max\": 25888.9,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          11033.9,\n          3850.96,\n          1147.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gc best solution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 129,\n        \"samples\": [\n          \"[array(['Supermercado Nacional', 'Anacardos'], dtype=object)\\n array(['Jumbo', 'Sal marina'], dtype=object)\\n array(['Jumbo', 'Huevos'], dtype=object)\\n array(['Jumbo', 'Ropa de hombre'], dtype=object)\\n array(['Jumbo', 'Pan \\u00e1rabe'], dtype=object)\\n array(['La Sirena', 'Limpiador multiusos'], dtype=object)\\n array(['La Sirena', 'Agua purificada'], dtype=object)]\",\n          \"[array(['Super Pola', 'Filete de res'], dtype=object)\\n array(['Super Pola', 'Berenjenas'], dtype=object)\\n array(['Bravo', 'Sombra de ojos'], dtype=object)\\n array(['Bravo', 'Mermelada de fresa'], dtype=object)\\n array(['Bravo', 'Colonia'], dtype=object)\\n array(['Supermercado Nacional', 'Vodka'], dtype=object)\\n array(['Supermercado Nacional', 'Joyas'], dtype=object)\\n array(['Jumbo', 'Az\\u00facar blanca'], dtype=object)\\n array(['La Sirena', 'Aretes'], dtype=object)\\n array(['La Sirena', 'Helado de chocolate'], dtype=object)]\",\n          \"[array(['Super Pola', 'Suavizante de telas'], dtype=object)\\n array(['Super Pola', 'Reproductores de DVD'], dtype=object)\\n array(['Super Pola', 'Salsa ranchera'], dtype=object)\\n array(['Super Pola', 'Consolas de videojuegos'], dtype=object)\\n array(['Super Pola', 'Pulseras'], dtype=object)\\n array(['Bravo', 'Aceitunas verdes'], dtype=object)\\n array(['Bravo', 'Whisky'], dtype=object)]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gc best value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4893.424422908019,\n        \"min\": 100.99,\n        \"max\": 20658.9,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          3306.96,\n          4527.96,\n          307.99\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gn best solution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 112,\n        \"samples\": [\n          \"[array(['La Sirena', 'Aftershave'], dtype=object)]\",\n          \"[array(['Supermercado Nacional', 'Arroz integral'], dtype=object)\\n array(['Supermercado Nacional', 'Juguetes para ni\\u00f1os'], dtype=object)\\n array(['Supermercado Nacional', 'Salsa de tomate'], dtype=object)\\n array(['Bravo', 'Pimientos verdes'], dtype=object)\\n array(['La Sirena', 'Pan integral'], dtype=object)\\n array(['Jumbo', 'Desinfectante de manos'], dtype=object)\\n array(['Super Pola', 'Albahaca'], dtype=object)]\",\n          \"[array(['Bravo', 'Albahaca'], dtype=object)\\n array(['Bravo', 'Televisores'], dtype=object)\\n array(['Bravo', 'Aftershave'], dtype=object)\\n array(['Bravo', 'Refresco de cola'], dtype=object)\\n array(['Bravo', 'Esmalte de u\\u00f1as'], dtype=object)\\n array(['Bravo', 'F\\u00f3sforos'], dtype=object)\\n array(['Supermercado Nacional', 'Rizadores de pelo'], dtype=object)]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gn best value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12962.67118940195,\n        \"min\": 100.99,\n        \"max\": 55794.83999999997,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          5552.96,\n          7445.959999999999,\n          761.99\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 285
        }
      ],
      "source": [
        "problem_set.head()\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 286,
      "metadata": {
        "id": "nckHgutYR_AK"
      },
      "outputs": [],
      "source": [
        "class FlujoGeneral:\n",
        "  def __init__(self, compra_genetica:str, ga:GAOptimization, problem_set:pd.DataFrame, general_folder:str, small_params:dict, medium_params:dict, big_params:dict):\n",
        "    self.compra_genetica = compra_genetica\n",
        "    self.ga = ga\n",
        "    self.problem_set = problem_set\n",
        "    self.general_folder = general_folder\n",
        "    self.small_params = small_params\n",
        "    self.medium_params = medium_params\n",
        "    self.big_params = big_params\n",
        "\n",
        "    self.insights = {\n",
        "    \"cluster_name\": [],\n",
        "    \"fuel_price\": [],\n",
        "    \"query\": [],\n",
        "    \"ga_cluster_solution\": [],\n",
        "    \"cluster_best_value\": [],\n",
        "    \"our_ga_best_solution\": [],\n",
        "    \"our_ga_best_value\": [],\n",
        "    \"pop_size\": [],\n",
        "    \"penalty_factor\": [],\n",
        "    \"cluster_time\": [],\n",
        "    \"memory used (mb)\": [],\n",
        "    \"iters\": [],\n",
        "    \"mutation_method\": [],\n",
        "    \"mutation_prob\": [],\n",
        "    \"selection_method\": [],      # Agregado\n",
        "    \"selection_prob\": []         # Agregado\n",
        "    }\n",
        "\n",
        "\n",
        "  def conectar_proyecto(self):\n",
        "    directorio_actual = os.getcwd()\n",
        "    try:\n",
        "      if self.compra_genetica not in directorio_actual:\n",
        "        print(\"No estamos en \", compra_genetica)\n",
        "        os.chdir(self.compra_genetica)\n",
        "        print(\"Trasladado hacia\", os.getcwd())\n",
        "\n",
        "      else:\n",
        "        print(\"Ya estamos en \", self.compra_genetica)\n",
        "        pass\n",
        "    except FileNotFoundError as flne:\n",
        "      print(\"Hubo un error: \", flne)\n",
        "\n",
        "    finally:\n",
        "        general = os.path.join(self.compra_genetica, f\"{self.general_folder}\")\n",
        "        os.makedirs(general, mode=0o777, exist_ok=True)\n",
        "\n",
        "        os.chdir(general)\n",
        "        print(general)\n",
        "        small_path = os.path.join(general, \"small\")\n",
        "        small_log_path = os.path.join(small_path, \"logs\")\n",
        "\n",
        "        medium_path = os.path.join(general, \"medium\")\n",
        "        medium_log_path = os.path.join(medium_path, \"logs\")\n",
        "\n",
        "        big_path = os.path.join(general, \"big\")\n",
        "        big_log_path = os.path.join(big_path, \"logs\")\n",
        "\n",
        "\n",
        "        os.makedirs(small_path,  mode=0o777, exist_ok=True)\n",
        "        os.makedirs(small_log_path,  mode=0o777, exist_ok=True)\n",
        "\n",
        "        os.makedirs(medium_path, mode=0o777, exist_ok=True)\n",
        "        os.makedirs(medium_log_path, mode=0o777, exist_ok=True)\n",
        "\n",
        "        os.makedirs(big_path, mode=0o777, exist_ok=True)\n",
        "        os.makedirs(big_log_path, mode=0o777, exist_ok=True)\n",
        "\n",
        "        return general, small_path, small_log_path, medium_path, medium_log_path, big_path, big_log_path\n",
        "\n",
        "\n",
        "  def make_query(self, mejor_cromosoma: dict, query, ga_instance) -> tuple[list[list[str]], float]:\n",
        "\n",
        "    sequence = []\n",
        "    product_cost = 0\n",
        "    stores_used = set()\n",
        "\n",
        "    # Construir secuencia de [tienda, producto]\n",
        "    for tienda, productos in mejor_cromosoma.items():\n",
        "        for producto, precio in productos.items():\n",
        "            if producto in query:\n",
        "                sequence.append([tienda, producto])\n",
        "                product_cost += precio\n",
        "                stores_used.add(tienda)\n",
        "\n",
        "    # Calcular costo de transporte\n",
        "    route = [\"Casa\"] + list(stores_used) + [\"Casa\"]\n",
        "    finite = ga_instance.distance_matrix.replace(np.inf, np.nan).values\n",
        "    max_dist = np.nanmax(finite)\n",
        "    penalty = max_dist * ga_instance.fuel_price * ga_instance.penalty_factor\n",
        "\n",
        "    transport_cost = 0.0\n",
        "    for i in range(len(route) - 1):\n",
        "        dist = ga_instance.distance_matrix.at[route[i], route[i+1]]\n",
        "        transport_cost += penalty if np.isinf(dist) else dist * ga_instance.fuel_price\n",
        "\n",
        "    total_cost = product_cost + transport_cost\n",
        "    return sequence, total_cost\n",
        "\n",
        "\n",
        "\n",
        "  def flujo_small(self, idx, small_log_path):\n",
        "    ga = self.ga(\n",
        "          project_path=self.compra_genetica,\n",
        "          indice=idx,\n",
        "          pop_size=self.small_params[\"pop_size\"],\n",
        "          penalty_factor = self.small_params['penalty_factor'],\n",
        "\n",
        "          selection_params= self.small_params[\"selection_params\"]\n",
        "          ,\n",
        "\n",
        "          crossover_params= self.small_params['crossover_params'],\n",
        "\n",
        "          mutation_params=self.small_params[\"mutation_params\"],\n",
        "\n",
        "          epoch=self.small_params['epoch'],\n",
        "          log_path=small_log_path\n",
        "      )\n",
        "    best_score, best_solution = ga.run()\n",
        "    self.insights['iters'].append(ga.epoch)\n",
        "    return ga, best_score, best_solution\n",
        "\n",
        "  def flujo_medium(self, idx, medium_log_path):\n",
        "    ga = self.ga(\n",
        "          project_path=self.compra_genetica,\n",
        "          indice=idx,\n",
        "          pop_size=self.medium_params[\"pop_size\"],\n",
        "          penalty_factor = self.medium_params[\"penalty_factor\"],\n",
        "\n",
        "          selection_params=self.medium_params['selection_params'],\n",
        "\n",
        "          crossover_params=self.medium_params['crossover_params'],\n",
        "\n",
        "          mutation_params=self.medium_params['mutation_params'],\n",
        "\n",
        "          epoch=self.medium_params['epoch'],\n",
        "          log_path=medium_log_path\n",
        "      )\n",
        "    best_score, best_solution = ga.run()\n",
        "    self.insights['iters'].append(ga.epoch)\n",
        "    return ga, best_score, best_solution\n",
        "\n",
        "  def flujo_big(self, idx, big_log_path):\n",
        "    ga = self.ga(\n",
        "          project_path=self.compra_genetica,\n",
        "          indice=idx,\n",
        "          pop_size=self.big_params['pop_size'],\n",
        "          penalty_factor = self.big_params[\"penalty_factor\"],\n",
        "\n",
        "          selection_params=self.big_params[\"selection_params\"],\n",
        "\n",
        "          crossover_params=self.big_params['crossover_params'],\n",
        "\n",
        "          mutation_params=self.big_params['mutation_params'],\n",
        "\n",
        "          epoch=self.big_params['epoch'],\n",
        "          log_path=big_log_path\n",
        "    )\n",
        "\n",
        "    best_score, best_solution = ga.run()\n",
        "    self.insights['iters'].append(ga.epoch)\n",
        "    return ga, best_score, best_solution\n",
        "\n",
        "  def flujo_general(self):\n",
        "    general, small_path, small_log_path, medium_path, medium_log_path, big_path, big_log_path = self.conectar_proyecto()\n",
        "\n",
        "    for idx, row in self.problem_set.iterrows():\n",
        "      if \"small\" in row[\"problem_cluster\"]:\n",
        "        self.insights[\"cluster_name\"].append(row[\"problem_cluster\"])\n",
        "        self.insights[\"fuel_price\"].append(row[\"fuel_price\"])\n",
        "        self.insights['query'].append(row['query'])\n",
        "\n",
        "        self.insights['pop_size'].append(self.small_params['pop_size'])\n",
        "        self.insights['penalty_factor'].append(self.small_params['penalty_factor'])\n",
        "\n",
        "        initial_time = time.time()\n",
        "        initial_memory =  psutil.Process(os.getpid()).memory_info().rss\n",
        "        ga, best_score, best_solution = self.flujo_small(idx, small_log_path)\n",
        "        self.insights['cluster_time'].append(time.time() - initial_time)\n",
        "\n",
        "        final_memory = psutil.Process(os.getpid()).memory_info().rss\n",
        "\n",
        "        self.insights['memory used (mb)'].append((final_memory - initial_memory) / (1024 * 1024))\n",
        "\n",
        "        self.insights['mutation_method'].append(self.small_params['mutation_params']['method'])\n",
        "        self.insights['mutation_prob'].append(self.small_params['mutation_params']['mutation_rate'])\n",
        "        self.insights['selection_method'].append(self.small_params['selection_params']['method'])\n",
        "        self.insights['selection_prob'].append(self.small_params['selection_params']['selection_rate'])\n",
        "        self.insights['ga_cluster_solution'].append(best_solution)\n",
        "        self.insights['cluster_best_value'].append(best_score)\n",
        "\n",
        "        ga_best_solution, ga_best_value = self.make_query(best_solution, row['query'], ga)\n",
        "        self.insights['our_ga_best_solution'].append(ga_best_solution)\n",
        "        self.insights['our_ga_best_value'].append(ga_best_value)\n",
        "\n",
        "\n",
        "        print(\"Mejor fitness:\", best_score)\n",
        "        print(\"Mejor solución:\", best_solution, \"\\n\")\n",
        "        if os.getcwd() != small_path:\n",
        "          os.chdir(small_path)\n",
        "          with open(f\"{idx}.json\", \"w\") as f:\n",
        "            json.dump(best_solution, f, sort_keys=False, indent=4)\n",
        "\n",
        "\n",
        "      elif \"medium\" in row[\"problem_cluster\"]:\n",
        "        self.insights[\"cluster_name\"].append(row[\"problem_cluster\"])\n",
        "        self.insights[\"fuel_price\"].append(row[\"fuel_price\"])\n",
        "        self.insights['query'].append(row['query'])\n",
        "        self.insights['pop_size'].append(self.medium_params['pop_size'])\n",
        "        self.insights['penalty_factor'].append(self.medium_params['penalty_factor'])\n",
        "\n",
        "        initial_time = time.time()\n",
        "        initial_memory =  psutil.Process(os.getpid()).memory_info().rss\n",
        "        ga, best_score, best_solution = self.flujo_medium(idx, medium_log_path)\n",
        "        self.insights['cluster_time'].append(time.time() - initial_time)\n",
        "\n",
        "        final_memory = psutil.Process(os.getpid()).memory_info().rss\n",
        "        self.insights['memory used (mb)'].append((final_memory - initial_memory) / (1024 * 1024))\n",
        "\n",
        "        self.insights['mutation_method'].append(self.medium_params['mutation_params']['method'])\n",
        "        self.insights['mutation_prob'].append(self.medium_params['mutation_params']['mutation_rate'])\n",
        "        self.insights['selection_method'].append(self.medium_params['selection_params']['method'])\n",
        "        self.insights['selection_prob'].append(self.medium_params['selection_params']['selection_rate'])\n",
        "        self.insights['ga_cluster_solution'].append(best_solution)\n",
        "        self.insights['cluster_best_value'].append(best_score)\n",
        "\n",
        "        ga_best_solution, ga_best_value = self.make_query(best_solution, row['query'], ga)\n",
        "        self.insights['our_ga_best_solution'].append(ga_best_solution)\n",
        "        self.insights['our_ga_best_value'].append(ga_best_value)\n",
        "\n",
        "        print(\"Mejor fitness:\", best_score)\n",
        "        print(\"Mejor solución:\", best_solution, \"\\n\")\n",
        "        if os.getcwd() != medium_path:\n",
        "          os.chdir(medium_path)\n",
        "          with open(f\"{idx}.json\", \"w\") as f:\n",
        "            json.dump(best_solution, f, sort_keys=False, indent=4)\n",
        "\n",
        "\n",
        "      elif \"big\" in row[\"problem_cluster\"]:\n",
        "        self.insights[\"cluster_name\"].append(row[\"problem_cluster\"])\n",
        "        self.insights[\"fuel_price\"].append(row[\"fuel_price\"])\n",
        "        self.insights['query'].append(row['query'])\n",
        "        self.insights['pop_size'].append(self.big_params['pop_size'])\n",
        "        self.insights['penalty_factor'].append(self.big_params[\"penalty_factor\"])\n",
        "\n",
        "        initial_time = time.time()\n",
        "        initial_memory =  psutil.Process(os.getpid()).memory_info().rss\n",
        "        ga, best_score, best_solution = self.flujo_big(idx, big_log_path)\n",
        "        self.insights['cluster_time'].append(time.time() - initial_time)\n",
        "\n",
        "        final_memory = psutil.Process(os.getpid()).memory_info().rss\n",
        "        self.insights['memory used (mb)'].append((final_memory - initial_memory) / (1024 * 1024))\n",
        "\n",
        "\n",
        "        self.insights['mutation_method'].append(self.big_params['mutation_params']['method'])\n",
        "        self.insights['mutation_prob'].append(self.big_params['mutation_params']['mutation_rate'])\n",
        "        self.insights['selection_method'].append(self.big_params['selection_params']['method'])\n",
        "        self.insights['selection_prob'].append(self.big_params['selection_params']['selection_rate'])\n",
        "        self.insights['ga_cluster_solution'].append(best_solution)\n",
        "        self.insights['cluster_best_value'].append(best_score)\n",
        "\n",
        "        ga_best_solution, ga_best_value = self.make_query(best_solution, row['query'], ga)\n",
        "        self.insights['our_ga_best_solution'].append(ga_best_solution)\n",
        "        self.insights['our_ga_best_value'].append(ga_best_value)\n",
        "\n",
        "        print(\"Mejor fitness:\", best_score)\n",
        "        print(\"Mejor solución:\", best_solution, \"\\n\")\n",
        "        if os.getcwd() != big_path:\n",
        "          os.chdir(big_path)\n",
        "          with open(f\"{idx}.json\", \"w\") as f:\n",
        "            json.dump(best_solution, f, sort_keys=False, indent=4)\n",
        "\n",
        "    print(\"Llegamos a un final.\")\n",
        "    return pd.DataFrame(self.insights), general"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 286,
      "metadata": {
        "id": "V1noOIG042TC"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": 287,
      "metadata": {
        "id": "1oVTdctLFq1u",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8a556a06-a58a-466e-f17f-5d44fb174d1a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cantidad de smalls: 100\n",
            "Cantidad de mediums: 24\n",
            "Cantidad de bigs 12\n"
          ]
        }
      ],
      "source": [
        "smalls =  problem_set.loc[problem_set[\"problem_cluster\"].str.contains('small', case=False, na=False)]\n",
        "mediums =  problem_set.loc[problem_set[\"problem_cluster\"].str.contains('medium', case=False, na=False)]\n",
        "bigs =  problem_set.loc[problem_set[\"problem_cluster\"].str.contains('big', case=False, na=False)]\n",
        "\n",
        "print(\"Cantidad de smalls:\", len(smalls))\n",
        "print(\"Cantidad de mediums:\", len(mediums))\n",
        "print(\"Cantidad de bigs\", len(bigs))"
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "iKP5FIWs_5Hq"
      },
      "execution_count": 287,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##  Ejecución del Flujo General (Ejecutar solo si no se tiene la carpeta \"Validación\")"
      ],
      "metadata": {
        "id": "NaQ-Q-eg_5yB"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "as4hwGR6FtjL"
      },
      "source": [
        "#### 1. Soft + Uniform + Scramble"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 180,
      "metadata": {
        "id": "8uekmrZX51Nx"
      },
      "outputs": [],
      "source": [
        "small_params = {\n",
        "    \"epoch\": 100,\n",
        "    \"pop_size\": 10,\n",
        "    \"penalty_factor\": 9.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"soft\",\n",
        "        \"selection_rate\": 0.66\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"uniform\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"scramble\",\n",
        "        \"mutation_rate\": 0.10\n",
        "    }\n",
        "}\n",
        "\n",
        "medium_params = {\n",
        "    \"epoch\": 150,\n",
        "    \"pop_size\": 40,\n",
        "    \"penalty_factor\": 18.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"soft\",\n",
        "\n",
        "        \"selection_rate\": 0.50\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"uniform\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"scramble\",\n",
        "        \"mutation_rate\": 0.15\n",
        "    }\n",
        "}\n",
        "\n",
        "\n",
        "big_params = {\n",
        "    \"epoch\": 200,\n",
        "    \"pop_size\": 80,\n",
        "    \"penalty_factor\": 27.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"soft\",\n",
        "        \"selection_rate\": 0.40\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"uniform\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"scramble\",\n",
        "        \"mutation_rate\": 0.20\n",
        "    }\n",
        "}"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 181,
      "metadata": {
        "id": "KvdJTRkK76rq",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 390
        },
        "outputId": "b878b537-c20f-4a4d-c3b0-8351271ee82f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "No estamos en  /content/drive/MyDrive/Proyecto - Compra Genética\n",
            "Trasladado hacia /content/drive/MyDrive/Proyecto - Compra Genética\n",
            "/content/drive/MyDrive/Proyecto - Compra Genética/Soft + Uniform + Scramble\n",
            "Final log path: /content/drive/MyDrive/Proyecto - Compra Genética/Soft + Uniform + Scramble/small/logs/0.txt\n",
            "/content/drive/MyDrive/Proyecto - Compra Genética\n"
          ]
        },
        {
          "output_type": "error",
          "ename": "KeyboardInterrupt",
          "evalue": "",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m                         Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-181-8d6fe5461ed1>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mfg1\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mFlujoGeneral\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcompra_genetica\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mGAOptimization\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mproblem_set\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"Soft + Uniform + Scramble\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msmall_params\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmedium_params\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbig_params\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0msoft_uniform_scramble_df\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msoft_uniform_scramble_path\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfg1\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflujo_general\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
            "\u001b[0;32m<ipython-input-178-01733eee013d>\u001b[0m in \u001b[0;36mflujo_general\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    177\u001b[0m         \u001b[0minitial_time\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    178\u001b[0m         \u001b[0minitial_memory\u001b[0m \u001b[0;34m=\u001b[0m  \u001b[0mpsutil\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mProcess\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgetpid\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmemory_info\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrss\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 179\u001b[0;31m         \u001b[0mga\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbest_score\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbest_solution\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflujo_small\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0midx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0msmall_log_path\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    180\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minsights\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'cluster_time'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m-\u001b[0m \u001b[0minitial_time\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    181\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-178-01733eee013d>\u001b[0m in \u001b[0;36mflujo_small\u001b[0;34m(self, idx, small_log_path)\u001b[0m\n\u001b[1;32m    118\u001b[0m           \u001b[0mlog_path\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0msmall_log_path\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    119\u001b[0m       )\n\u001b[0;32m--> 120\u001b[0;31m     \u001b[0mbest_score\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbest_solution\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mga\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrun\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    121\u001b[0m     \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minsights\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'iters'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mga\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mepoch\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    122\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mga\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbest_score\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbest_solution\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m<ipython-input-167-3877e1021df8>\u001b[0m in \u001b[0;36mrun\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    618\u001b[0m           \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistory_best\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mbest\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    619\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 620\u001b[0;31m           \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlogger\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minfo\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Epoch {epoch}/{self.epoch} → Best: {best:.2f} | Avg: {avg:.2f} | Worst: {worst:.2f}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    621\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    622\u001b[0m           \u001b[0mparents\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mselection\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mscored\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.11/logging/__init__.py\u001b[0m in \u001b[0;36minfo\u001b[0;34m(self, msg, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1487\u001b[0m         \"\"\"\n\u001b[1;32m   1488\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0misEnabledFor\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mINFO\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1489\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_log\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mINFO\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmsg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1490\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1491\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mwarning\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmsg\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.11/logging/__init__.py\u001b[0m in \u001b[0;36m_log\u001b[0;34m(self, level, msg, args, exc_info, extra, stack_info, stacklevel)\u001b[0m\n\u001b[1;32m   1632\u001b[0m         record = self.makeRecord(self.name, level, fn, lno, msg, args,\n\u001b[1;32m   1633\u001b[0m                                  exc_info, func, extra, sinfo)\n\u001b[0;32m-> 1634\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrecord\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1635\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1636\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mhandle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrecord\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.11/logging/__init__.py\u001b[0m in \u001b[0;36mhandle\u001b[0;34m(self, record)\u001b[0m\n\u001b[1;32m   1642\u001b[0m         \"\"\"\n\u001b[1;32m   1643\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;32mnot\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdisabled\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfilter\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrecord\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1644\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcallHandlers\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrecord\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1645\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1646\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0maddHandler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mhdlr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.11/logging/__init__.py\u001b[0m in \u001b[0;36mcallHandlers\u001b[0;34m(self, record)\u001b[0m\n\u001b[1;32m   1704\u001b[0m                 \u001b[0mfound\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mfound\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1705\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mrecord\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlevelno\u001b[0m \u001b[0;34m>=\u001b[0m \u001b[0mhdlr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1706\u001b[0;31m                     \u001b[0mhdlr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhandle\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrecord\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1707\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mc\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpropagate\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1708\u001b[0m                 \u001b[0mc\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mNone\u001b[0m    \u001b[0;31m#break out\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.11/logging/__init__.py\u001b[0m in \u001b[0;36mhandle\u001b[0;34m(self, record)\u001b[0m\n\u001b[1;32m    976\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0macquire\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    977\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 978\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0memit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrecord\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    979\u001b[0m             \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    980\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrelease\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.11/logging/__init__.py\u001b[0m in \u001b[0;36memit\u001b[0;34m(self, record)\u001b[0m\n\u001b[1;32m   1228\u001b[0m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstream\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_open\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1229\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstream\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1230\u001b[0;31m             \u001b[0mStreamHandler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0memit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrecord\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1231\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1232\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m__repr__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.11/logging/__init__.py\u001b[0m in \u001b[0;36memit\u001b[0;34m(self, record)\u001b[0m\n\u001b[1;32m   1112\u001b[0m             \u001b[0;31m# issue 35046: merged two stream.writes into one.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1113\u001b[0m             \u001b[0mstream\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmsg\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mterminator\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1114\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflush\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1115\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mRecursionError\u001b[0m\u001b[0;34m:\u001b[0m  \u001b[0;31m# See issue 36272\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1116\u001b[0m             \u001b[0;32mraise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/lib/python3.11/logging/__init__.py\u001b[0m in \u001b[0;36mflush\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m   1092\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1093\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstream\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mhasattr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstream\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"flush\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1094\u001b[0;31m                 \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstream\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflush\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1095\u001b[0m         \u001b[0;32mfinally\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1096\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrelease\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyboardInterrupt\u001b[0m: "
          ]
        }
      ],
      "source": [
        "fg1  = FlujoGeneral(compra_genetica, GAOptimization, problem_set, \"Soft + Uniform + Scramble\", small_params, medium_params, big_params)\n",
        "soft_uniform_scramble_df, soft_uniform_scramble_path = fg1.flujo_general()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "KCGkHtSRe034"
      },
      "outputs": [],
      "source": [
        "soft_uniform_scramble_df"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "hsrRuFQcN6Nb"
      },
      "outputs": [],
      "source": [
        "mejor_cromosoma = soft_uniform_scramble_df.loc[12, \"ga_cluster_solution\"]\n",
        "\n",
        "mejor_cromosoma"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "0dwZMqu6d3BF"
      },
      "outputs": [],
      "source": [
        "query_prueba = soft_uniform_scramble_df.loc[12, \"query\"]\n",
        "query_prueba"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FzhwaSsHw42G"
      },
      "source": [
        "##### Manipulación de los logs en consola"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "1QtRtxi7jHSF"
      },
      "outputs": [],
      "source": [
        "# Lista los logs realizados hasta el momento\n",
        "\n",
        "!ls -la \"/content/drive/MyDrive/Proyecto - Compra Genética/Soft + Uniform + Scramble/small/logs\""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "lb5jMQILj4sH"
      },
      "outputs": [],
      "source": [
        "#!head -n 100 \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs/0.txt\"\n",
        "\n",
        "\n",
        "# Borrra de forma forzada los logs (No descomentar)\n",
        "#!rm -rf \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs\"/*"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ymWRuz-gw3dD"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_8e7Dhc2PvnT"
      },
      "source": [
        "#### 2. Soft + Uniform + Swap"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "2IsW4wQmPvnm"
      },
      "outputs": [],
      "source": [
        "small_params = {\n",
        "    \"epoch\": 100,\n",
        "    \"pop_size\": 10,\n",
        "    \"penalty_factor\": 9.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"soft\",\n",
        "        \"selection_rate\": 0.66\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"uniform\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"swap\",\n",
        "        \"mutation_rate\": 0.10\n",
        "    }\n",
        "}\n",
        "\n",
        "medium_params = {\n",
        "    \"epoch\": 150,\n",
        "    \"pop_size\": 40,\n",
        "    \"penalty_factor\": 18.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"soft\",\n",
        "\n",
        "        \"selection_rate\": 0.50\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"uniform\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"swap\",\n",
        "        \"mutation_rate\": 0.15\n",
        "    }\n",
        "}\n",
        "\n",
        "\n",
        "big_params = {\n",
        "    \"epoch\": 200,\n",
        "    \"pop_size\": 80,\n",
        "    \"penalty_factor\": 27.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"soft\",\n",
        "        \"selection_rate\": 0.40\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"uniform\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"swap\",\n",
        "        \"mutation_rate\": 0.20\n",
        "    }\n",
        "}"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "TQcot7dSPvnr"
      },
      "outputs": [],
      "source": [
        "fg2 =  FlujoGeneral(compra_genetica, GAOptimization, problem_set, \"Soft + Uniform + Swap\", small_params, medium_params, big_params)\n",
        "soft_uniform_swap_df, soft_uniform_swap_path  = fg2.flujo_general()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "XfTCkIunPvnu"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "E0Rt8Yl6Pvnu"
      },
      "source": [
        "##### Manipulación de los logs en consola"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "PKrwLCq6Pvnv"
      },
      "outputs": [],
      "source": [
        "# Lista los logs realizados hasta el momento\n",
        "\n",
        "!ls -la \"/content/drive/MyDrive/Proyecto - Compra Genética/Soft + Uniform + Swap/small/logs\""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Oxbd3a63Pvnw"
      },
      "outputs": [],
      "source": [
        "#!head -n 100 \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs/0.txt\"\n",
        "\n",
        "\n",
        "# Borrra de forma forzada los logs (No descomentar)\n",
        "#!rm -rf \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs\"/*"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "HxLR-vuCPvnx"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "hfrhNQV_QS3z"
      },
      "source": [
        "#### 3. Soft + Sub_tree + Scramble"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "6IA15xCiQS32"
      },
      "outputs": [],
      "source": [
        "small_params = {\n",
        "    \"epoch\": 100,\n",
        "    \"pop_size\": 10,\n",
        "    \"penalty_factor\": 9.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"soft\",\n",
        "        \"selection_rate\": 0.66\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"sub_tree\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"scramble\",\n",
        "        \"mutation_rate\": 0.10\n",
        "    }\n",
        "}\n",
        "\n",
        "medium_params = {\n",
        "    \"epoch\": 150,\n",
        "    \"pop_size\": 40,\n",
        "    \"penalty_factor\": 18.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"soft\",\n",
        "\n",
        "        \"selection_rate\": 0.50\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"sub_tree\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"scramble\",\n",
        "        \"mutation_rate\": 0.15\n",
        "    }\n",
        "}\n",
        "\n",
        "\n",
        "big_params = {\n",
        "    \"epoch\": 200,\n",
        "    \"pop_size\": 80,\n",
        "    \"penalty_factor\": 27.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"soft\",\n",
        "        \"selection_rate\": 0.40\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"sub_tree\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"scramble\",\n",
        "        \"mutation_rate\": 0.20\n",
        "    }\n",
        "}"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "tRStQd_2QS34"
      },
      "outputs": [],
      "source": [
        "fg3 = FlujoGeneral(compra_genetica, GAOptimization, problem_set, \"Soft + Sub_tree + Scramble\", small_params, medium_params, big_params)\n",
        "soft_sub_tree_scramble_df, soft_sub_tree_scramble_path = fg3.flujo_general()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "_adsfnoZQS34"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "WkqUvjIxQS35"
      },
      "source": [
        "##### Manipulación de los logs en consola"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "8z2yUaE8QS35"
      },
      "outputs": [],
      "source": [
        "# Lista los logs realizados hasta el momento\n",
        "\n",
        "!ls -la \"/content/drive/MyDrive/Proyecto - Compra Genética/Soft + Sub_tree + Scramble/small/logs\""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "qCFTFpbbQS36"
      },
      "outputs": [],
      "source": [
        "#!head -n 100 \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs/0.txt\"\n",
        "\n",
        "\n",
        "# Borrra de forma forzada los logs (No descomentar)\n",
        "#!rm -rf \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs\"/*"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "s3ag65YoQS36"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ZKoZGZB3QhmP"
      },
      "source": [
        "#### 4. Soft + Sub_tree + Swap"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "r9OuJKzfQhmQ"
      },
      "outputs": [],
      "source": [
        "small_params = {\n",
        "    \"epoch\": 100,\n",
        "    \"pop_size\": 10,\n",
        "    \"penalty_factor\": 9.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"soft\",\n",
        "        \"selection_rate\": 0.66\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"sub_tree\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"swap\",\n",
        "        \"mutation_rate\": 0.10\n",
        "    }\n",
        "}\n",
        "\n",
        "medium_params = {\n",
        "    \"epoch\": 150,\n",
        "    \"pop_size\": 40,\n",
        "    \"penalty_factor\": 18.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"soft\",\n",
        "\n",
        "        \"selection_rate\": 0.50\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"sub_tree\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"swap\",\n",
        "        \"mutation_rate\": 0.15\n",
        "    }\n",
        "}\n",
        "\n",
        "\n",
        "big_params = {\n",
        "    \"epoch\": 200,\n",
        "    \"pop_size\": 80,\n",
        "    \"penalty_factor\": 27.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"soft\",\n",
        "        \"selection_rate\": 0.40\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"sub_tree\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"swap\",\n",
        "        \"mutation_rate\": 0.20\n",
        "    }\n",
        "}"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "5wjyDLQlQhmS"
      },
      "outputs": [],
      "source": [
        "fg4 = FlujoGeneral(compra_genetica, GAOptimization, problem_set, \"Soft + Sub_tree + Swap\", small_params, medium_params, big_params)\n",
        "soft_sub_tree_swap_df, soft_sub_tree_swap_path = fg4.flujo_general()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "xaxd6G7BQhmT"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "R8KMlKRHQhmT"
      },
      "source": [
        "##### Manipulación de los logs en consola"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "WkgHacbKQhmU"
      },
      "outputs": [],
      "source": [
        "# Lista los logs realizados hasta el momento\n",
        "\n",
        "!ls -la \"/content/drive/MyDrive/Proyecto - Compra Genética/Soft + Sub_tree + Swap/small/logs\""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "LwI4-3X7QhmU"
      },
      "outputs": [],
      "source": [
        "#!head -n 100 \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs/0.txt\"\n",
        "\n",
        "\n",
        "# Borrra de forma forzada los logs (No descomentar)\n",
        "#!rm -rf \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs\"/*"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "6dEqccFKQhmU"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-lgxyDMbQ76A"
      },
      "source": [
        "#### 5. Hard + Uniform + Scramble"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-POwGZiWQ76C"
      },
      "outputs": [],
      "source": [
        "small_params = {\n",
        "    \"epoch\": 100,\n",
        "    \"pop_size\": 10,\n",
        "    \"penalty_factor\": 9.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"hard\",\n",
        "        \"selection_rate\": 0.66\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"uniform\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"scramble\",\n",
        "        \"mutation_rate\": 0.10\n",
        "    }\n",
        "}\n",
        "\n",
        "medium_params = {\n",
        "    \"epoch\": 150,\n",
        "    \"pop_size\": 40,\n",
        "    \"penalty_factor\": 18.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"hard\",\n",
        "\n",
        "        \"selection_rate\": 0.50\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"uniform\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"scramble\",\n",
        "        \"mutation_rate\": 0.15\n",
        "    }\n",
        "}\n",
        "\n",
        "\n",
        "big_params = {\n",
        "    \"epoch\": 200,\n",
        "    \"pop_size\": 80,\n",
        "    \"penalty_factor\": 27.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"hard\",\n",
        "        \"selection_rate\": 0.40\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"uniform\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"scramble\",\n",
        "        \"mutation_rate\": 0.20\n",
        "    }\n",
        "}"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4mpti3dYQ76E"
      },
      "outputs": [],
      "source": [
        "fg5 = FlujoGeneral(compra_genetica, GAOptimization, problem_set, \"Hard + Uniform + Scramble\", small_params, medium_params, big_params)\n",
        "hard_uniform_scramble_df, hard_uniform_scramble_path = fg5.flujo_general()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "tS5XzczzQ76F"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_h0kGediQ76F"
      },
      "source": [
        "##### Manipulación de los logs en consola"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "DMsLDNZJQ76G"
      },
      "outputs": [],
      "source": [
        "# Lista los logs realizados hasta el momento\n",
        "\n",
        "!ls -la \"/content/drive/MyDrive/Proyecto - Compra Genética/Hard + Uniform + Scramble/small/logs\""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "p29PJ2kcQ76G"
      },
      "outputs": [],
      "source": [
        "#!head -n 100 \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs/0.txt\"\n",
        "\n",
        "\n",
        "# Borrra de forma forzada los logs (No descomentar)\n",
        "#!rm -rf \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs\"/*"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "azMN4HJAQ76H"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "02BwGuhyRUTT"
      },
      "source": [
        "#### 6. Hard + Uniform + Swap"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "VQ5T4C0JRUTV"
      },
      "outputs": [],
      "source": [
        "small_params = {\n",
        "    \"epoch\": 100,\n",
        "    \"pop_size\": 10,\n",
        "    \"penalty_factor\": 9.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"hard\",\n",
        "        \"selection_rate\": 0.66\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"uniform\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"swap\",\n",
        "        \"mutation_rate\": 0.10\n",
        "    }\n",
        "}\n",
        "\n",
        "medium_params = {\n",
        "    \"epoch\": 150,\n",
        "    \"pop_size\": 40,\n",
        "    \"penalty_factor\": 18.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"hard\",\n",
        "\n",
        "        \"selection_rate\": 0.50\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"uniform\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"swap\",\n",
        "        \"mutation_rate\": 0.15\n",
        "    }\n",
        "}\n",
        "\n",
        "\n",
        "big_params = {\n",
        "    \"epoch\": 200,\n",
        "    \"pop_size\": 80,\n",
        "    \"penalty_factor\": 27.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"hard\",\n",
        "        \"selection_rate\": 0.40\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"uniform\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"swap\",\n",
        "        \"mutation_rate\": 0.20\n",
        "    }\n",
        "}"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "TTJWE4ujRUTX"
      },
      "outputs": [],
      "source": [
        "fg6 = FlujoGeneral(compra_genetica, GAOptimization, problem_set, \"Hard + Uniform + Swap\", small_params, medium_params, big_params)\n",
        "hard_uniform_swap_df, hard_uniform_swap_path = fg6.flujo_general()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "PJTLnupGRUTX"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qRxbA_r9RUTY"
      },
      "source": [
        "##### Manipulación de los logs en consola"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "tX_5lKYfRUTY"
      },
      "outputs": [],
      "source": [
        "# Lista los logs realizados hasta el momento\n",
        "\n",
        "!ls -la \"/content/drive/MyDrive/Proyecto - Compra Genética/Hard + Uniform + Swap/small/logs\""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "uhWVY1-wRUTZ"
      },
      "outputs": [],
      "source": [
        "#!head -n 100 \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs/0.txt\"\n",
        "\n",
        "\n",
        "# Borrra de forma forzada los logs (No descomentar)\n",
        "#!rm -rf \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs\"/*"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Z0zaCIqyRUTZ"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5biFy1C3RtbK"
      },
      "source": [
        "#### 7. Hard + Sub_tree + Scramble"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "SbxCS_fkRtbN"
      },
      "outputs": [],
      "source": [
        "small_params = {\n",
        "    \"epoch\": 100,\n",
        "    \"pop_size\": 10,\n",
        "    \"penalty_factor\": 9.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"hard\",\n",
        "        \"selection_rate\": 0.66\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"sub_tree\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"scramble\",\n",
        "        \"mutation_rate\": 0.10\n",
        "    }\n",
        "}\n",
        "\n",
        "medium_params = {\n",
        "    \"epoch\": 150,\n",
        "    \"pop_size\": 40,\n",
        "    \"penalty_factor\": 18.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"hard\",\n",
        "\n",
        "        \"selection_rate\": 0.50\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"sub_tree\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"scramble\",\n",
        "        \"mutation_rate\": 0.15\n",
        "    }\n",
        "}\n",
        "\n",
        "\n",
        "big_params = {\n",
        "    \"epoch\": 200,\n",
        "    \"pop_size\": 80,\n",
        "    \"penalty_factor\": 27.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"hard\",\n",
        "        \"selection_rate\": 0.40\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"sub_tree\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"scramble\",\n",
        "        \"mutation_rate\": 0.20\n",
        "    }\n",
        "}"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Vo74q5gLRtbP"
      },
      "outputs": [],
      "source": [
        "fg7  = FlujoGeneral(compra_genetica, GAOptimization, problem_set, \"Hard + Sub_tree + Scramble\", small_params, medium_params, big_params)\n",
        "hard_sub_tree_scramble_df, hard_sub_tree_scramble_path = fg7.flujo_general()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "xLOCgZAdRtbQ"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bvxxWFVZRtbR"
      },
      "source": [
        "##### Manipulación de los logs en consola"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "yNlegon_RtbR"
      },
      "outputs": [],
      "source": [
        "# Lista los logs realizados hasta el momento\n",
        "\n",
        "!ls -la \"/content/drive/MyDrive/Proyecto - Compra Genética/Hard + Sub_tree + Scramble/small/logs\""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ff9k3EyvRtbR"
      },
      "outputs": [],
      "source": [
        "#!head -n 100 \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs/0.txt\"\n",
        "\n",
        "\n",
        "# Borrra de forma forzada los logs (No descomentar)\n",
        "#!rm -rf \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs\"/*"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "xJRaJNx8RtbS"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2VwbPhrvR9wO"
      },
      "source": [
        "#### 8. Hard + Sub_tree + Swap"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "AxCNEAeSR9wQ"
      },
      "outputs": [],
      "source": [
        "small_params = {\n",
        "    \"epoch\": 100,\n",
        "    \"pop_size\": 10,\n",
        "    \"penalty_factor\": 9.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"hard\",\n",
        "        \"selection_rate\": 0.66\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"sub_tree\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"swap\",\n",
        "        \"mutation_rate\": 0.10\n",
        "    }\n",
        "}\n",
        "\n",
        "medium_params = {\n",
        "    \"epoch\": 150,\n",
        "    \"pop_size\": 40,\n",
        "    \"penalty_factor\": 18.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"hard\",\n",
        "\n",
        "        \"selection_rate\": 0.50\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"sub_tree\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"swap\",\n",
        "        \"mutation_rate\": 0.15\n",
        "    }\n",
        "}\n",
        "\n",
        "\n",
        "big_params = {\n",
        "    \"epoch\": 200,\n",
        "    \"pop_size\": 80,\n",
        "    \"penalty_factor\": 27.0,\n",
        "    \"selection_params\": {\n",
        "        \"method\": \"hard\",\n",
        "        \"selection_rate\": 0.40\n",
        "    },\n",
        "    \"crossover_params\": {\n",
        "        \"method\": \"sub_tree\",\n",
        "        \"crossover_rate\": 0.88,\n",
        "        \"inheritance_rate\": 0.50\n",
        "    },\n",
        "    \"mutation_params\": {\n",
        "        \"method\": \"swap\",\n",
        "        \"mutation_rate\": 0.20\n",
        "    }\n",
        "}"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "3BWO7nZLR9wT"
      },
      "outputs": [],
      "source": [
        "fg8 = FlujoGeneral(compra_genetica, GAOptimization, problem_set, \"Hard + Sub_tree + Swap\", small_params, medium_params, big_params)\n",
        "hard_sub_tree_swap_df, hard_sub_tree_swap_path = fg8.flujo_general()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "skJiaQPeR9wW"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QC0cwh2nR9wX"
      },
      "source": [
        "##### Manipulación de los logs en consola"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Z_gt0GUXR9wX"
      },
      "outputs": [],
      "source": [
        "# Lista los logs realizados hasta el momento\n",
        "\n",
        "!ls -la \"/content/drive/MyDrive/Proyecto - Compra Genética/Hard + Sub_tree + Swap/small/logs\""
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ZnECvW_KR9wY"
      },
      "outputs": [],
      "source": [
        "#!head -n 100 \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs/0.txt\"\n",
        "\n",
        "\n",
        "# Borra de forma forzada los logs (No descomentar)\n",
        "#!rm -rf \"/content/drive/MyDrive/Proyecto - Compra Genética/General/small/logs\"/*"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "nm6jd5hER9wY"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "I5PYTBps7-Q_"
      },
      "source": [
        "## Validación | Consultas\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Asgurandonos de que todo este cargado"
      ],
      "metadata": {
        "id": "92XuraX0fpWf"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "7LzWdyzEcfuw"
      },
      "execution_count": 287,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "if os.getcwd() != \"/content/drive/MyDrive/Proyecto - Compra Genética\":\n",
        "    os.chdir(\"/content/drive/MyDrive/Proyecto - Compra Genética\")\n",
        "\n",
        "os.makedirs(\"Validación\", mode=0o777, exist_ok=True)\n",
        "os.chdir(\"Validación\")\n",
        "\n",
        "# Lista de nombres de archivos y variables (como strings)\n",
        "nombres = [\n",
        "    \"soft_uniform_scramble_df\",\n",
        "    \"soft_uniform_swap_df\",\n",
        "    \"soft_sub_tree_scramble_df\",\n",
        "    \"soft_sub_tree_swap_df\",\n",
        "    \"hard_uniform_scramble_df\",\n",
        "    \"hard_uniform_swap_df\",\n",
        "    \"hard_sub_tree_scramble_df\",\n",
        "    \"hard_sub_tree_swap_df\"\n",
        "]\n",
        "\n",
        "# Cargar o guardar\n",
        "for nombre in nombres:\n",
        "    archivo = nombre + \".csv\"\n",
        "    if not os.path.exists(archivo):\n",
        "        print(f\"No existe {archivo}, debes crear el DataFrame '{nombre}' antes.\")\n",
        "    else:\n",
        "        globals()[nombre] = pd.read_csv(archivo)\n"
      ],
      "metadata": {
        "id": "OvbLX1ToIvdr"
      },
      "execution_count": 288,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "X34zgKLKJvjy"
      },
      "execution_count": 288,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Métricas de Valores Continuos\n",
        "\n",
        "Sea $(O_i)$ el valor observado y $(P_i)$ el valor predicho para $i = 1, \\dots, n$.\n",
        "\n",
        "#### Error puntual\n",
        "$[ E_i = O_i - P_i ]$\n",
        "\n",
        "#### Error Absoluto\n",
        "$[ AE_i = |O_i - P_i| ]$\n",
        "\n",
        "#### Error Negativo Promedio\n",
        "Sea\n",
        "$[ I = \\{ i \\mid O_i - P_i < 0 \\} ]$\n",
        "entonces\n",
        "$[ \\text{Error Negativo Promedio} = \\frac{1}{|I|} \\sum_{i \\in I} (O_i - P_i) ]$\n",
        "\n",
        "#### Error Absoluto Promedio (MAE)\n",
        "$[ \\text{MAE} = \\frac{1}{n} \\sum_{i=1}^n |O_i - P_i| ]$\n",
        "\n",
        "#### Error Cuadrado Promedio (MSE)\n",
        "$[ \\text{MSE} = \\frac{1}{n} \\sum_{i=1}^n (O_i - P_i)^2 ]$"
      ],
      "metadata": {
        "id": "vLIBlRKFjreo"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 289,
      "metadata": {
        "id": "Hxx1UAaisKQ0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 310
        },
        "outputId": "ee302004-028c-4bd3-e275-c7c7992001cf"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                   problem_cluster  \\\n",
              "0    small-3s-4p-f1_10-q1_4-random   \n",
              "1    small-3s-4p-f1_10-q1_4-random   \n",
              "2    small-3s-4p-f1_10-q1_4-random   \n",
              "3    small-3s-4p-f1_10-q1_4-random   \n",
              "4  small-5s-10p-f0_10-q1_10-random   \n",
              "\n",
              "                                             catalog  fuel_price  \\\n",
              "0  problemset/in/small-3s-4p-f1_10-q1_4-random_ca...           1   \n",
              "1  problemset/in/small-3s-4p-f1_10-q1_4-random_ca...           1   \n",
              "2  problemset/in/small-3s-4p-f1_10-q1_4-random_ca...           6   \n",
              "3  problemset/in/small-3s-4p-f1_10-q1_4-random_ca...           6   \n",
              "4  problemset/in/small-5s-10p-f0_10-q1_10-random_...           0   \n",
              "\n",
              "                                               query  \\\n",
              "0                          ['Purificadores de aire']   \n",
              "1  ['Purificadores de aire', 'Aceite de girasol',...   \n",
              "2                          ['Purificadores de aire']   \n",
              "3  ['Purificadores de aire', 'Pasta de dientes', ...   \n",
              "4                                    ['Televisores']   \n",
              "\n",
              "                                   qbf best solution  qbf best value  \\\n",
              "0  [array(['Supermercado Nacional', 'Purificadore...         4401.99   \n",
              "1  [array(['Jumbo', 'Aceite de girasol'], dtype=o...        11270.96   \n",
              "2  [array(['Supermercado Nacional', 'Purificadore...         4501.99   \n",
              "3  [array(['Jumbo', 'Pasta de dientes'], dtype=ob...        11400.96   \n",
              "4  [array(['Super Pola', 'Televisores'], dtype=ob...          619.99   \n",
              "\n",
              "                                    ga best solution  ga best value  \\\n",
              "0  [array(['Supermercado Nacional', 'Purificadore...        4401.99   \n",
              "1  [array(['Supermercado Nacional', 'Purificadore...       11283.96   \n",
              "2  [array(['Supermercado Nacional', 'Purificadore...        4501.99   \n",
              "3  [array(['Supermercado Nacional', 'Purificadore...       11478.96   \n",
              "4  [array(['Super Pola', 'Televisores'], dtype=ob...         619.99   \n",
              "\n",
              "                                    gc best solution  gc best value  \\\n",
              "0  [array(['Supermercado Nacional', 'Purificadore...        4401.99   \n",
              "1  [array(['Jumbo', 'Aceite de girasol'], dtype=o...       11270.96   \n",
              "2  [array(['Supermercado Nacional', 'Purificadore...        4501.99   \n",
              "3  [array(['Jumbo', 'Pasta de dientes'], dtype=ob...       11400.96   \n",
              "4  [array(['Super Pola', 'Televisores'], dtype=ob...         619.99   \n",
              "\n",
              "                                    gn best solution  gn best value  \n",
              "0  [array(['Supermercado Nacional', 'Purificadore...        4401.99  \n",
              "1  [array(['Supermercado Nacional', 'Alfombras'],...       12817.96  \n",
              "2  [array(['Supermercado Nacional', 'Purificadore...        4501.99  \n",
              "3  [array(['Supermercado Nacional', 'Alfombras'],...       12917.96  \n",
              "4    [array(['Bravo', 'Televisores'], dtype=object)]        3638.99  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b58c370b-3d0d-4408-bc0c-4726718a4d6f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>problem_cluster</th>\n",
              "      <th>catalog</th>\n",
              "      <th>fuel_price</th>\n",
              "      <th>query</th>\n",
              "      <th>qbf best solution</th>\n",
              "      <th>qbf best value</th>\n",
              "      <th>ga best solution</th>\n",
              "      <th>ga best value</th>\n",
              "      <th>gc best solution</th>\n",
              "      <th>gc best value</th>\n",
              "      <th>gn best solution</th>\n",
              "      <th>gn best value</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>problemset/in/small-3s-4p-f1_10-q1_4-random_ca...</td>\n",
              "      <td>1</td>\n",
              "      <td>['Purificadores de aire']</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4401.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4401.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4401.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4401.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>problemset/in/small-3s-4p-f1_10-q1_4-random_ca...</td>\n",
              "      <td>1</td>\n",
              "      <td>['Purificadores de aire', 'Aceite de girasol',...</td>\n",
              "      <td>[array(['Jumbo', 'Aceite de girasol'], dtype=o...</td>\n",
              "      <td>11270.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>11283.96</td>\n",
              "      <td>[array(['Jumbo', 'Aceite de girasol'], dtype=o...</td>\n",
              "      <td>11270.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Alfombras'],...</td>\n",
              "      <td>12817.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>problemset/in/small-3s-4p-f1_10-q1_4-random_ca...</td>\n",
              "      <td>6</td>\n",
              "      <td>['Purificadores de aire']</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4501.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4501.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4501.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>4501.99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>problemset/in/small-3s-4p-f1_10-q1_4-random_ca...</td>\n",
              "      <td>6</td>\n",
              "      <td>['Purificadores de aire', 'Pasta de dientes', ...</td>\n",
              "      <td>[array(['Jumbo', 'Pasta de dientes'], dtype=ob...</td>\n",
              "      <td>11400.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>11478.96</td>\n",
              "      <td>[array(['Jumbo', 'Pasta de dientes'], dtype=ob...</td>\n",
              "      <td>11400.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Alfombras'],...</td>\n",
              "      <td>12917.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>small-5s-10p-f0_10-q1_10-random</td>\n",
              "      <td>problemset/in/small-5s-10p-f0_10-q1_10-random_...</td>\n",
              "      <td>0</td>\n",
              "      <td>['Televisores']</td>\n",
              "      <td>[array(['Super Pola', 'Televisores'], dtype=ob...</td>\n",
              "      <td>619.99</td>\n",
              "      <td>[array(['Super Pola', 'Televisores'], dtype=ob...</td>\n",
              "      <td>619.99</td>\n",
              "      <td>[array(['Super Pola', 'Televisores'], dtype=ob...</td>\n",
              "      <td>619.99</td>\n",
              "      <td>[array(['Bravo', 'Televisores'], dtype=object)]</td>\n",
              "      <td>3638.99</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b58c370b-3d0d-4408-bc0c-4726718a4d6f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b58c370b-3d0d-4408-bc0c-4726718a4d6f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b58c370b-3d0d-4408-bc0c-4726718a4d6f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f97cdeeb-0718-4bb3-9491-122055ec7ca1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f97cdeeb-0718-4bb3-9491-122055ec7ca1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f97cdeeb-0718-4bb3-9491-122055ec7ca1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "problem_set",
              "summary": "{\n  \"name\": \"problem_set\",\n  \"rows\": 136,\n  \"fields\": [\n    {\n      \"column\": \"problem_cluster\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"medium-30s-80p-f0_10-q1_20-random\",\n          \"small-5s-10p-f0_10-q1_10-random\",\n          \"small-5s-10p-f0_10-q1_10-parque\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"catalog\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"problemset/in/medium-30s-80p-f0_10-q1_20-random_catalog.xlsx\",\n          \"problemset/in/small-5s-10p-f0_10-q1_10-random_catalog.xlsx\",\n          \"problemset/in/small-5s-10p-f0_10-q1_10-parque_catalog.xlsx\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fuel_price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 9,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          6,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"query\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 130,\n        \"samples\": [\n          \"['Pistachos', 'Aftershave', 'Huevos', 'Agua purificada']\",\n          \"['Mermelada de fresa', 'Joyas', 'Sombra de ojos', 'Berenjenas', 'Az\\u00facar blanca', 'Helado de chocolate', 'Aretes']\",\n          \"['Reproductores de DVD', 'Suavizante de telas', 'Pulseras', 'Salsa ranchera']\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"qbf best solution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 94,\n        \"samples\": [\n          \"[array(['Bravo', 'Mermelada de fresa'], dtype=object)\\n array(['Bravo', 'Sombra de ojos'], dtype=object)\\n array(['Supermercado Nacional', 'Joyas'], dtype=object)\\n array(['Jumbo', 'Az\\u00facar blanca'], dtype=object)\\n array(['Super Pola', 'Berenjenas'], dtype=object)\\n array(['La Sirena', 'Helado de chocolate'], dtype=object)\\n array(['La Sirena', 'Aretes'], dtype=object)]\",\n          \"[array(['Super Pola', 'Consolas de videojuegos'], dtype=object)]\",\n          \"[array(['La Sirena', 'Agua purificada'], dtype=object)\\n array(['Jumbo', 'Pistachos'], dtype=object)\\n array(['Jumbo', 'Aftershave'], dtype=object)\\n array(['Jumbo', 'Huevos'], dtype=object)]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"qbf best value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5396.864163111413,\n        \"min\": 100.99,\n        \"max\": 20463.9,\n        \"num_unique_values\": 99,\n        \"samples\": [\n          5772.93,\n          958.99,\n          20463.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ga best solution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 131,\n        \"samples\": [\n          \"[array(['Jumbo', 'Pistachos'], dtype=object)\\n array(['Jumbo', 'Aftershave'], dtype=object)\\n array(['Jumbo', 'Huevos'], dtype=object)\\n array(['La Sirena', 'Agua purificada'], dtype=object)]\",\n          \"[array(['Bravo', 'Mermelada de fresa'], dtype=object)\\n array(['Supermercado Nacional', 'Joyas'], dtype=object)\\n array(['Bravo', 'Sombra de ojos'], dtype=object)\\n array(['Super Pola', 'Berenjenas'], dtype=object)\\n array(['Jumbo', 'Az\\u00facar blanca'], dtype=object)\\n array(['La Sirena', 'Helado de chocolate'], dtype=object)\\n array(['La Sirena', 'Aretes'], dtype=object)]\",\n          \"[array(['Super Pola', 'Reproductores de DVD'], dtype=object)\\n array(['Jumbo', 'Suavizante de telas'], dtype=object)\\n array(['Supermercado Nacional', 'Pulseras'], dtype=object)\\n array(['La Sirena', 'Salsa ranchera'], dtype=object)]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ga best value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5975.534295469298,\n        \"min\": 100.99,\n        \"max\": 25888.9,\n        \"num_unique_values\": 133,\n        \"samples\": [\n          11033.9,\n          3850.96,\n          1147.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gc best solution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 129,\n        \"samples\": [\n          \"[array(['Supermercado Nacional', 'Anacardos'], dtype=object)\\n array(['Jumbo', 'Sal marina'], dtype=object)\\n array(['Jumbo', 'Huevos'], dtype=object)\\n array(['Jumbo', 'Ropa de hombre'], dtype=object)\\n array(['Jumbo', 'Pan \\u00e1rabe'], dtype=object)\\n array(['La Sirena', 'Limpiador multiusos'], dtype=object)\\n array(['La Sirena', 'Agua purificada'], dtype=object)]\",\n          \"[array(['Super Pola', 'Filete de res'], dtype=object)\\n array(['Super Pola', 'Berenjenas'], dtype=object)\\n array(['Bravo', 'Sombra de ojos'], dtype=object)\\n array(['Bravo', 'Mermelada de fresa'], dtype=object)\\n array(['Bravo', 'Colonia'], dtype=object)\\n array(['Supermercado Nacional', 'Vodka'], dtype=object)\\n array(['Supermercado Nacional', 'Joyas'], dtype=object)\\n array(['Jumbo', 'Az\\u00facar blanca'], dtype=object)\\n array(['La Sirena', 'Aretes'], dtype=object)\\n array(['La Sirena', 'Helado de chocolate'], dtype=object)]\",\n          \"[array(['Super Pola', 'Suavizante de telas'], dtype=object)\\n array(['Super Pola', 'Reproductores de DVD'], dtype=object)\\n array(['Super Pola', 'Salsa ranchera'], dtype=object)\\n array(['Super Pola', 'Consolas de videojuegos'], dtype=object)\\n array(['Super Pola', 'Pulseras'], dtype=object)\\n array(['Bravo', 'Aceitunas verdes'], dtype=object)\\n array(['Bravo', 'Whisky'], dtype=object)]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gc best value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4893.424422908019,\n        \"min\": 100.99,\n        \"max\": 20658.9,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          3306.96,\n          4527.96,\n          307.99\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gn best solution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 112,\n        \"samples\": [\n          \"[array(['La Sirena', 'Aftershave'], dtype=object)]\",\n          \"[array(['Supermercado Nacional', 'Arroz integral'], dtype=object)\\n array(['Supermercado Nacional', 'Juguetes para ni\\u00f1os'], dtype=object)\\n array(['Supermercado Nacional', 'Salsa de tomate'], dtype=object)\\n array(['Bravo', 'Pimientos verdes'], dtype=object)\\n array(['La Sirena', 'Pan integral'], dtype=object)\\n array(['Jumbo', 'Desinfectante de manos'], dtype=object)\\n array(['Super Pola', 'Albahaca'], dtype=object)]\",\n          \"[array(['Bravo', 'Albahaca'], dtype=object)\\n array(['Bravo', 'Televisores'], dtype=object)\\n array(['Bravo', 'Aftershave'], dtype=object)\\n array(['Bravo', 'Refresco de cola'], dtype=object)\\n array(['Bravo', 'Esmalte de u\\u00f1as'], dtype=object)\\n array(['Bravo', 'F\\u00f3sforos'], dtype=object)\\n array(['Supermercado Nacional', 'Rizadores de pelo'], dtype=object)]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gn best value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12962.67118940195,\n        \"min\": 100.99,\n        \"max\": 55794.83999999997,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          5552.96,\n          7445.959999999999,\n          761.99\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 289
        }
      ],
      "source": [
        "problem_set.head()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "profe_ga_best_value = problem_set[\"ga best value\"]\n",
        "profe_ga_best_solution = problem_set[\"ga best solution\"]\n",
        "\n",
        "profe_qbf_best_value = problem_set[\"qbf best value\"]\n",
        "profe_qbf_best_solution = problem_set[\"qbf best solution\"]\n",
        "\n",
        "profe_gc_best_value = problem_set[\"gc best value\"]\n",
        "profe_gc_best_solution = problem_set[\"gc best solution\"]\n",
        "\n",
        "profe_gn_best_value = problem_set[\"gn best value\"]\n",
        "profe_gn_best_solution = problem_set[\"gn best solution\"]"
      ],
      "metadata": {
        "id": "zQoRg3SicZBj"
      },
      "execution_count": 290,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "## ERRORES\n",
        "E_soft_uniform_scramble = profe_ga_best_value - soft_uniform_scramble_df[\"our_ga_best_value\"]\n",
        "E_soft_uniform_swap = profe_ga_best_value - soft_uniform_swap_df[\"our_ga_best_value\"]\n",
        "E_soft_sub_tree_scramble = profe_ga_best_value - soft_sub_tree_scramble_df[\"our_ga_best_value\"]\n",
        "E_soft_sub_tree_swap = profe_ga_best_value - soft_sub_tree_swap_df[\"our_ga_best_value\"]\n",
        "E_hard_uniform_scramble = profe_ga_best_value - hard_uniform_scramble_df[\"our_ga_best_value\"]\n",
        "E_hard_uniform_swap = profe_ga_best_value - hard_uniform_swap_df[\"our_ga_best_value\"]\n",
        "E_hard_sub_tree_scramble = profe_ga_best_value - hard_sub_tree_scramble_df[\"our_ga_best_value\"]\n",
        "E_hard_sub_tree_swap = profe_ga_best_value - hard_sub_tree_swap_df['our_ga_best_value']\n",
        "\n",
        "\n",
        "### Errores Absolutos\n",
        "AE_soft_uniform_scramble = abs(E_soft_uniform_scramble)\n",
        "AE_soft_uniform_swap = abs(E_soft_uniform_swap)\n",
        "AE_soft_sub_tree_scramble = abs(E_soft_sub_tree_scramble)\n",
        "AE_soft_sub_tree_swap = abs(E_soft_sub_tree_swap)\n",
        "AE_hard_uniform_scramble = abs(E_hard_uniform_scramble)\n",
        "AE_hard_uniform_swap = abs(E_hard_uniform_swap)\n",
        "AE_hard_sub_tree_scramble = abs(E_hard_sub_tree_scramble)\n",
        "AE_hard_sub_tree_swap = abs(E_hard_sub_tree_swap)\n",
        "\n",
        "\n",
        "## Errores Negativos Promedios\n",
        "ENP_soft_uniform_scramble = E_soft_uniform_scramble[E_soft_uniform_scramble < 0].mean()\n",
        "ENP_soft_uniform_swap = E_soft_uniform_swap[E_soft_uniform_swap < 0].mean()\n",
        "ENP_soft_sub_tree_scramble = E_soft_sub_tree_scramble[E_soft_sub_tree_scramble < 0].mean()\n",
        "ENP_soft_sub_tree_swap = E_soft_sub_tree_swap[E_soft_sub_tree_swap < 0].mean()\n",
        "ENP_hard_uniform_scramble = E_hard_uniform_scramble[E_hard_uniform_scramble < 0].mean()\n",
        "ENP_hard_uniform_swap = E_hard_uniform_swap[E_hard_uniform_swap < 0].mean()\n",
        "ENP_hard_sub_tree_scramble = E_hard_sub_tree_scramble[E_hard_sub_tree_scramble < 0].mean()\n",
        "ENP_hard_sub_tree_swap = E_hard_sub_tree_swap[E_hard_sub_tree_swap < 0].mean()\n",
        "\n",
        "\n",
        "## ERRORES ABSOLUTOS PROMEDIOS\n",
        "MAE_soft_uniform_scramble = AE_soft_uniform_scramble.mean()\n",
        "MAE_soft_uniform_swap = AE_soft_uniform_swap.mean()\n",
        "MAE_soft_sub_tree_scramble = AE_soft_sub_tree_scramble.mean()\n",
        "MAE_soft_sub_tree_swap = AE_soft_sub_tree_swap.mean()\n",
        "MAE_hard_uniform_scramble = AE_hard_uniform_scramble.mean()\n",
        "MAE_hard_uniform_swap = AE_hard_uniform_swap.mean()\n",
        "MAE_hard_sub_tree_scramble = AE_hard_sub_tree_scramble.mean()\n",
        "MAE_hard_sub_tree_swap = AE_hard_sub_tree_swap.mean()\n",
        "\n",
        "\n",
        "## Errores Cuadrados Promedios\n",
        "MSE_soft_uniform_scramble = (E_soft_uniform_scramble**2).mean()\n",
        "MSE_soft_uniform_swap = (E_soft_uniform_swap**2).mean()\n",
        "MSE_soft_sub_tree_scramble = (E_soft_sub_tree_scramble**2).mean()\n",
        "MSE_soft_sub_tree_swap = (E_soft_sub_tree_swap**2).mean()\n",
        "MSE_hard_uniform_scramble = (E_hard_uniform_scramble**2).mean()\n",
        "MSE_hard_uniform_swap = (E_hard_uniform_swap**2).mean()\n",
        "MSE_hard_sub_tree_scramble = (E_hard_sub_tree_scramble**2).mean()\n",
        "MSE_hard_sub_tree_swap = (E_hard_sub_tree_swap**2).mean()"
      ],
      "metadata": {
        "id": "fV1UtMuwj_eZ"
      },
      "execution_count": 291,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Armar DataFrames\n",
        "\n",
        "# Para E\n",
        "e_df = pd.DataFrame({\n",
        "    \"soft_uniform_scramble\": E_soft_uniform_scramble,\n",
        "    \"soft_uniform_swap\":  E_soft_uniform_swap,\n",
        "    \"soft_sub_tree_scramble\": E_soft_sub_tree_scramble,\n",
        "    \"soft_sub_tree_swap\": E_soft_sub_tree_swap,\n",
        "    \"hard_uniform_scramble\": E_hard_uniform_scramble,\n",
        "    \"hard_uniform_swap\": E_hard_uniform_swap,\n",
        "    \"hard_sub_tree_scramble\": E_hard_sub_tree_scramble,\n",
        "    \"hard_sub_tree_swap\": E_hard_sub_tree_swap,\n",
        "})\n",
        "\n",
        "\n",
        "ae_df = pd.DataFrame({\n",
        "    \"soft_uniform_scramble\": AE_soft_uniform_scramble,\n",
        "    \"soft_uniform_swap\":      AE_soft_uniform_swap,\n",
        "    \"soft_sub_tree_scramble\": AE_soft_sub_tree_scramble,\n",
        "    \"soft_sub_tree_swap\":     AE_soft_sub_tree_swap,\n",
        "    \"hard_uniform_scramble\":  AE_hard_uniform_scramble,\n",
        "    \"hard_uniform_swap\":      AE_hard_uniform_swap,\n",
        "    \"hard_sub_tree_scramble\": AE_hard_sub_tree_scramble,\n",
        "    \"hard_sub_tree_swap\":     AE_hard_sub_tree_swap,\n",
        "})\n",
        "\n",
        "\n",
        "# Para ENP\n",
        "enp_df = pd.DataFrame.from_dict({\n",
        "    \"soft_uniform_scramble\": ENP_soft_uniform_scramble,\n",
        "    \"soft_uniform_swap\": ENP_soft_uniform_swap,\n",
        "    \"soft_sub_tree_scramble\": ENP_soft_sub_tree_scramble,\n",
        "    \"soft_sub_tree_swap\": ENP_soft_sub_tree_swap,\n",
        "    \"hard_uniform_scramble\": ENP_hard_uniform_scramble,\n",
        "    \"hard_uniform_swap\": ENP_hard_uniform_swap,\n",
        "    \"hard_sub_tree_scramble\": ENP_hard_sub_tree_scramble,\n",
        "    \"hard_sub_tree_swap\": ENP_hard_sub_tree_swap,\n",
        "}, orient=\"index\", columns=[\"ENP\"])\n",
        "\n",
        "# Para MAE\n",
        "mae_df = pd.DataFrame.from_dict({\n",
        "    \"soft_uniform_scramble\": MAE_soft_uniform_scramble,\n",
        "    \"soft_uniform_swap\": MAE_soft_uniform_swap,\n",
        "    \"soft_sub_tree_scramble\": MAE_soft_sub_tree_scramble,\n",
        "    \"soft_sub_tree_swap\": MAE_soft_sub_tree_swap,\n",
        "    \"hard_uniform_scramble\": MAE_hard_uniform_scramble,\n",
        "    \"hard_uniform_swap\": MAE_hard_uniform_swap,\n",
        "    \"hard_sub_tree_scramble\": MAE_hard_sub_tree_scramble,\n",
        "    \"hard_sub_tree_swap\": MAE_hard_sub_tree_swap,\n",
        "}, orient=\"index\", columns=[\"MAE\"])\n",
        "\n",
        "# Para MSE\n",
        "mse_df = pd.DataFrame.from_dict({\n",
        "    \"soft_uniform_scramble\": MSE_soft_uniform_scramble,\n",
        "    \"soft_uniform_swap\": MSE_soft_uniform_swap,\n",
        "    \"soft_sub_tree_scramble\": MSE_soft_sub_tree_scramble,\n",
        "    \"soft_sub_tree_swap\": MSE_soft_sub_tree_swap,\n",
        "    \"hard_uniform_scramble\": MSE_hard_uniform_scramble,\n",
        "    \"hard_uniform_swap\": MSE_hard_uniform_swap,\n",
        "    \"hard_sub_tree_scramble\": MSE_hard_sub_tree_scramble,\n",
        "    \"hard_sub_tree_swap\": MSE_hard_sub_tree_swap,\n",
        "}, orient=\"index\", columns=[\"MSE\"])\n",
        "\n",
        "fig, axes = plt.subplots(3, 2, figsize=(30, 22))\n",
        "\n",
        "# 1. Error puntual\n",
        "sns.boxplot(data=e_df, ax=axes[0, 0])\n",
        "axes[0, 0].set_title(\"Error Puntual\")\n",
        "axes[0, 0].tick_params(axis='x', rotation=45)\n",
        "\n",
        "# 2. Error Absoluto (corregido)\n",
        "sns.boxplot(data=ae_df, ax=axes[0, 1])\n",
        "axes[0, 1].set_title(\"Error Absoluto\")\n",
        "axes[0, 1].tick_params(axis='x', rotation=45)\n",
        "\n",
        "\n",
        "# 3. ENP\n",
        "enp_df_reset = enp_df.reset_index().rename(columns={\"index\": \"Combinación\"})\n",
        "sns.barplot(data=enp_df_reset, x=\"Combinación\", y=\"ENP\", ax=axes[1, 0], hue=\"Combinación\")\n",
        "axes[1, 0].set_title(\"Error Negativo Promedio\")\n",
        "axes[1, 0].tick_params(axis='x', rotation=45)\n",
        "\n",
        "# 4. MAE\n",
        "mae_df_reset = mae_df.reset_index().rename(columns={\"index\": \"Combinación\"})\n",
        "sns.barplot(data=mae_df_reset, x=\"Combinación\", y=\"MAE\", ax=axes[1, 1], hue=\"Combinación\")\n",
        "axes[1, 1].set_title(\"Error Absoluto Promedio (MAE)\")\n",
        "axes[1, 1].tick_params(axis='x', rotation=45)\n",
        "\n",
        "# 5. MSE\n",
        "mse_df_reset = mse_df.reset_index().rename(columns={\"index\": \"Combinación\"})\n",
        "sns.barplot(data=mse_df_reset, x=\"Combinación\", y=\"MSE\", ax=axes[2, 0], hue=\"Combinación\")\n",
        "axes[2, 0].set_title(\"Error Cuadrado Promedio (MSE)\")\n",
        "axes[2, 0].tick_params(axis='x', rotation=45)\n",
        "\n",
        "# 6. Relleno (imagen)\n",
        "img = plt.imread(\"/content/drive/MyDrive/Proyecto - Compra Genética/Validación/Genetic-Algorithm-img.jpg\")\n",
        "axes[2, 1].imshow(img)\n",
        "axes[2, 1].axis(\"off\")\n",
        "axes[2, 1].set_title(\"Relleno\")\n",
        "axes[2, 1].set_aspect('auto')\n",
        "axes[2, 1].set_title(\"Relleno\")\n",
        "\n",
        "for ax in axes.flatten():\n",
        "    ax.tick_params(axis='both', labelsize=13)\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "ljINyE1tLEOS",
        "outputId": "bebb2f3b-e486-47a1-8f71-6a13f00f682a"
      },
      "execution_count": 292,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 3000x2200 with 6 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Comparación entre los nuestros\n",
        "\n",
        "Después de comparar todas las métricas de error, queda claro que **hard_uniform_swap** es la mejor configuración para nuestro objetivo de minimizar el precio:\n",
        "\n",
        "- **ENP (≈ –3 160)**: subestima menos el precio real que cualquier otra combinación.  \n",
        "- **MAE (≈ 2 563)**: tiene la menor desviación absoluta promedio, es decir, sus predicciones están más cerca del valor real.  \n",
        "- **MSE (≈ 2.36×10^7)**: registra el menor valor, lo que indica que evita errores grandes mejor que el resto.  \n",
        "- **Boxplots de error puntual y absoluto**: muestran que su mediana está casi en cero y presenta la menor dispersión.\n",
        "\n",
        "En resumen, **hard_uniform_swap** ofrece precios bajos y consistentes, cumpliendo perfectamente con el criterio de “menos es mejor”.\n"
      ],
      "metadata": {
        "id": "rYwFdgB4TP4j"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "hard_uniform_swap_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 469
        },
        "id": "-AJUZTjsW1WL",
        "outputId": "400ec5ea-8dc9-4baf-bb80-687e02f33335"
      },
      "execution_count": 293,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                      cluster_name  fuel_price  \\\n",
              "0    small-3s-4p-f1_10-q1_4-random           1   \n",
              "1    small-3s-4p-f1_10-q1_4-random           1   \n",
              "2    small-3s-4p-f1_10-q1_4-random           6   \n",
              "3    small-3s-4p-f1_10-q1_4-random           6   \n",
              "4  small-5s-10p-f0_10-q1_10-random           0   \n",
              "\n",
              "                                               query  \\\n",
              "0                          ['Purificadores de aire']   \n",
              "1  ['Purificadores de aire', 'Aceite de girasol',...   \n",
              "2                          ['Purificadores de aire']   \n",
              "3  ['Purificadores de aire', 'Pasta de dientes', ...   \n",
              "4                                    ['Televisores']   \n",
              "\n",
              "                                 ga_cluster_solution  cluster_best_value  \\\n",
              "0  {'Supermercado Nacional': {'Alfombras': 1274.9...            11282.96   \n",
              "1  {'Supermercado Nacional': {'Alfombras': 1274.9...            11282.96   \n",
              "2  {'Supermercado Nacional': {'Purificadores de a...            11472.96   \n",
              "3  {'Jumbo': {'Pasta de dientes': 2897.99, 'Aceit...            11400.96   \n",
              "4  {'Super Pola': {'Aftershave': 1074.99, 'Esmalt...            11702.90   \n",
              "\n",
              "                                our_ga_best_solution  our_ga_best_value  \\\n",
              "0  [['Supermercado Nacional', 'Purificadores de a...            4401.99   \n",
              "1  [['Supermercado Nacional', 'Alfombras'], ['Sup...           11282.96   \n",
              "2  [['Supermercado Nacional', 'Purificadores de a...            4501.99   \n",
              "3  [['Jumbo', 'Pasta de dientes'], ['Jumbo', 'Ace...           11472.96   \n",
              "4                    [['Super Pola', 'Televisores']]             619.99   \n",
              "\n",
              "   pop_size  penalty_factor  cluster_time  memory used (mb)  iters  \\\n",
              "0        10             9.0      1.130132               0.0    100   \n",
              "1        10             9.0      1.021947               0.0    100   \n",
              "2        10             9.0      0.946139               0.0    100   \n",
              "3        10             9.0      0.912263               0.0    100   \n",
              "4        10             9.0      0.998179               0.0    100   \n",
              "\n",
              "  mutation_method  mutation_prob selection_method  selection_prob  \n",
              "0            swap            0.1             hard            0.66  \n",
              "1            swap            0.1             hard            0.66  \n",
              "2            swap            0.1             hard            0.66  \n",
              "3            swap            0.1             hard            0.66  \n",
              "4            swap            0.1             hard            0.66  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5a0e0dcb-ed56-4824-ad68-3f49180df8c5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>cluster_name</th>\n",
              "      <th>fuel_price</th>\n",
              "      <th>query</th>\n",
              "      <th>ga_cluster_solution</th>\n",
              "      <th>cluster_best_value</th>\n",
              "      <th>our_ga_best_solution</th>\n",
              "      <th>our_ga_best_value</th>\n",
              "      <th>pop_size</th>\n",
              "      <th>penalty_factor</th>\n",
              "      <th>cluster_time</th>\n",
              "      <th>memory used (mb)</th>\n",
              "      <th>iters</th>\n",
              "      <th>mutation_method</th>\n",
              "      <th>mutation_prob</th>\n",
              "      <th>selection_method</th>\n",
              "      <th>selection_prob</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>1</td>\n",
              "      <td>['Purificadores de aire']</td>\n",
              "      <td>{'Supermercado Nacional': {'Alfombras': 1274.9...</td>\n",
              "      <td>11282.96</td>\n",
              "      <td>[['Supermercado Nacional', 'Purificadores de a...</td>\n",
              "      <td>4401.99</td>\n",
              "      <td>10</td>\n",
              "      <td>9.0</td>\n",
              "      <td>1.130132</td>\n",
              "      <td>0.0</td>\n",
              "      <td>100</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.1</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>1</td>\n",
              "      <td>['Purificadores de aire', 'Aceite de girasol',...</td>\n",
              "      <td>{'Supermercado Nacional': {'Alfombras': 1274.9...</td>\n",
              "      <td>11282.96</td>\n",
              "      <td>[['Supermercado Nacional', 'Alfombras'], ['Sup...</td>\n",
              "      <td>11282.96</td>\n",
              "      <td>10</td>\n",
              "      <td>9.0</td>\n",
              "      <td>1.021947</td>\n",
              "      <td>0.0</td>\n",
              "      <td>100</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.1</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>6</td>\n",
              "      <td>['Purificadores de aire']</td>\n",
              "      <td>{'Supermercado Nacional': {'Purificadores de a...</td>\n",
              "      <td>11472.96</td>\n",
              "      <td>[['Supermercado Nacional', 'Purificadores de a...</td>\n",
              "      <td>4501.99</td>\n",
              "      <td>10</td>\n",
              "      <td>9.0</td>\n",
              "      <td>0.946139</td>\n",
              "      <td>0.0</td>\n",
              "      <td>100</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.1</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>6</td>\n",
              "      <td>['Purificadores de aire', 'Pasta de dientes', ...</td>\n",
              "      <td>{'Jumbo': {'Pasta de dientes': 2897.99, 'Aceit...</td>\n",
              "      <td>11400.96</td>\n",
              "      <td>[['Jumbo', 'Pasta de dientes'], ['Jumbo', 'Ace...</td>\n",
              "      <td>11472.96</td>\n",
              "      <td>10</td>\n",
              "      <td>9.0</td>\n",
              "      <td>0.912263</td>\n",
              "      <td>0.0</td>\n",
              "      <td>100</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.1</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>small-5s-10p-f0_10-q1_10-random</td>\n",
              "      <td>0</td>\n",
              "      <td>['Televisores']</td>\n",
              "      <td>{'Super Pola': {'Aftershave': 1074.99, 'Esmalt...</td>\n",
              "      <td>11702.90</td>\n",
              "      <td>[['Super Pola', 'Televisores']]</td>\n",
              "      <td>619.99</td>\n",
              "      <td>10</td>\n",
              "      <td>9.0</td>\n",
              "      <td>0.998179</td>\n",
              "      <td>0.0</td>\n",
              "      <td>100</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.1</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.66</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a0e0dcb-ed56-4824-ad68-3f49180df8c5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5a0e0dcb-ed56-4824-ad68-3f49180df8c5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5a0e0dcb-ed56-4824-ad68-3f49180df8c5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3f25978a-ea10-4b05-9ee6-762506dac01f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3f25978a-ea10-4b05-9ee6-762506dac01f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3f25978a-ea10-4b05-9ee6-762506dac01f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "hard_uniform_swap_df",
              "summary": "{\n  \"name\": \"hard_uniform_swap_df\",\n  \"rows\": 136,\n  \"fields\": [\n    {\n      \"column\": \"cluster_name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 10,\n        \"samples\": [\n          \"medium-30s-80p-f0_10-q1_20-random\",\n          \"small-5s-10p-f0_10-q1_10-random\",\n          \"small-5s-10p-f0_10-q1_10-parque\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"fuel_price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 0,\n        \"max\": 9,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          1,\n          6,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"query\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 130,\n        \"samples\": [\n          \"['Pistachos', 'Aftershave', 'Huevos', 'Agua purificada']\",\n          \"['Mermelada de fresa', 'Joyas', 'Sombra de ojos', 'Berenjenas', 'Az\\u00facar blanca', 'Helado de chocolate', 'Aretes']\",\n          \"['Reproductores de DVD', 'Suavizante de telas', 'Pulseras', 'Salsa ranchera']\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ga_cluster_solution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 131,\n        \"samples\": [\n          \"{'Jumbo': {'Sal marina': 199.99, 'Huevos': 199.99, 'Limpiador multiusos': 199.99, 'Ropa de hombre': 199.99, 'Aftershave': 199.99, 'Pan \\u00e1rabe': 199.99, 'Pistachos': 199.99}, 'La Sirena': {'Agua purificada': 567.99}, 'Supermercado Nacional': {'Lechuga': 2493.99}, 'Super Pola': {'Anacardos': 4020.99}}\",\n          \"{'Super Pola': {'Filete de res': 173.99, 'Berenjenas': 1370.99}, 'La Sirena': {'Aretes': 193.99, 'Helado de chocolate': 898.99, 'Joyas': 1421.99}, 'Supermercado Nacional': {'Vodka': 2052.99}, 'Bravo': {'Colonia': 917.99, 'Az\\u00facar blanca': 2709.99, 'Mermelada de fresa': 2548.99, 'Sombra de ojos': 541.99}}\",\n          \"{'Super Pola': {'Suavizante de telas': 100.99, 'Antihistam\\u00ednicos': 100.99, 'Toallas sanitarias': 100.99, 'Consolas de videojuegos': 100.99, 'Pulseras': 100.99}, 'La Sirena': {'Reproductores de DVD': 100.99, 'Pan integral': 100.99, 'Salsa ranchera': 100.99}, 'Bravo': {'Whisky': 100.99, 'Aceitunas verdes': 100.99}}\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cluster_best_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 93623.78204053361,\n        \"min\": 1009.9,\n        \"max\": 380938.9999999983,\n        \"num_unique_values\": 123,\n        \"samples\": [\n          1009.9,\n          6756.899999999999,\n          6083.899999999998\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"our_ga_best_solution\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 131,\n        \"samples\": [\n          \"[['Jumbo', 'Huevos'], ['Jumbo', 'Aftershave'], ['Jumbo', 'Pistachos'], ['La Sirena', 'Agua purificada']]\",\n          \"[['Super Pola', 'Berenjenas'], ['Jumbo', 'Az\\u00facar blanca'], ['La Sirena', 'Aretes'], ['La Sirena', 'Helado de chocolate'], ['La Sirena', 'Joyas'], ['Bravo', 'Sombra de ojos'], ['Bravo', 'Mermelada de fresa']]\",\n          \"[['Bravo', 'Pulseras'], ['Bravo', 'Reproductores de DVD'], ['Bravo', 'Suavizante de telas'], ['Super Pola', 'Salsa ranchera']]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"our_ga_best_value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7852.381635804756,\n        \"min\": 100.99,\n        \"max\": 42359.84000000001,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          4140.96,\n          5020.96,\n          373.99\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"pop_size\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 10,\n        \"max\": 80,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          10,\n          40,\n          80\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"penalty_factor\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.747633784232171,\n        \"min\": 9.0,\n        \"max\": 27.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          9.0,\n          18.0,\n          27.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cluster_time\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.39410815436933,\n        \"min\": 0.6432640552520752,\n        \"max\": 71.11510181427002,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          0.9035520553588868,\n          0.952434778213501,\n          0.9455018043518066\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"memory used (mb)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1029563572052284,\n        \"min\": 0.0,\n        \"max\": 1.03125,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.03125,\n          0.515625,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"iters\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31,\n        \"min\": 100,\n        \"max\": 200,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          100,\n          150,\n          200\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mutation_method\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"swap\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mutation_prob\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.031931298801289865,\n        \"min\": 0.1,\n        \"max\": 0.2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"selection_method\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"hard\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"selection_prob\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08900319447891177,\n        \"min\": 0.4,\n        \"max\": 0.66,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.66\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 293
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "buen_orden_columnas_def_df = [\n",
        "    \"cluster_name\",\n",
        "    \"fuel_price\",\n",
        "    \"query\",\n",
        "    \"mutation_method\",\n",
        "    \"mutation_prob\",\n",
        "    \"selection_method\",\n",
        "    \"selection_prob\",\n",
        "    \"pop_size\",\n",
        "    \"penalty_factor\",\n",
        "    \"our_ga_best_solution\",\n",
        "    \"our_ga_best_value\",\n",
        "    \"cluster_best_value\",\n",
        "    \"ga_cluster_solution\",\n",
        "    \"iters\",\n",
        "    \"cluster_time\",\n",
        "    \"memory used (mb)\"\n",
        "]"
      ],
      "metadata": {
        "id": "krv9TvkLhwC-"
      },
      "execution_count": 294,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        " hard_uniform_swap_df_ordenado = hard_uniform_swap_df[buen_orden_columnas_def_df].copy()"
      ],
      "metadata": {
        "id": "WvANf3ihihuR"
      },
      "execution_count": 295,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "hard_uniform_swap_df_ordenado['profe_ga_best_value']      = profe_ga_best_value\n",
        "hard_uniform_swap_df_ordenado['profe_ga_best_solution']   = profe_ga_best_solution\n",
        "hard_uniform_swap_df_ordenado['profe_qbf_best_value']     = profe_qbf_best_value\n",
        "hard_uniform_swap_df_ordenado['profe_qbf_best_solution']  = profe_qbf_best_solution\n",
        "hard_uniform_swap_df_ordenado['profe_gc_best_value']      = profe_gc_best_value\n",
        "hard_uniform_swap_df_ordenado['profe_gc_best_solution']   = profe_gc_best_solution\n",
        "hard_uniform_swap_df_ordenado['profe_gn_best_value']      = profe_gn_best_value\n",
        "hard_uniform_swap_df_ordenado['profe_gn_best_solution']   = profe_gn_best_solution\n",
        "\n",
        "hard_uniform_swap_df_ordenado['Error_Og_ga_Vs_our_ga']           = profe_ga_best_value - hard_uniform_swap_df_ordenado['our_ga_best_value']\n",
        "hard_uniform_swap_df_ordenado['Error_Absoluto_Og_ga_Vs_our_ga']  = abs(hard_uniform_swap_df_ordenado['Error_Og_ga_Vs_our_ga'])\n",
        "\n",
        "hard_uniform_swap_df_ordenado['Error_Og_qbf_Vs_our_ga']          = profe_qbf_best_value - hard_uniform_swap_df_ordenado['our_ga_best_value']\n",
        "hard_uniform_swap_df_ordenado['Error_Absoluto_Og_qbf_Vs_our_ga'] = abs(hard_uniform_swap_df_ordenado['Error_Og_qbf_Vs_our_ga'])\n",
        "\n",
        "hard_uniform_swap_df_ordenado['Error_Og_gc_Vs_our_ga']           = profe_gc_best_value - hard_uniform_swap_df_ordenado['our_ga_best_value']\n",
        "hard_uniform_swap_df_ordenado['Error_Absoluto_Og_gc_Vs_our_ga']  = abs(hard_uniform_swap_df_ordenado['Error_Og_gc_Vs_our_ga'])\n",
        "\n",
        "hard_uniform_swap_df_ordenado['Error_Og_gn_Vs_our_ga']           = profe_gn_best_value - hard_uniform_swap_df_ordenado['our_ga_best_value']\n",
        "hard_uniform_swap_df_ordenado['Error_Absoluto_Og_gn_Vs_our_ga']  = abs(hard_uniform_swap_df_ordenado['Error_Og_gn_Vs_our_ga'])\n"
      ],
      "metadata": {
        "id": "lbCvUPxSioSk"
      },
      "execution_count": 296,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "hard_uniform_swap_df_ordenado = hard_uniform_swap_df_ordenado[\n",
        "    [\n",
        "        'cluster_name', 'fuel_price', 'query', 'mutation_method',\n",
        "        'mutation_prob', 'selection_method', 'selection_prob', 'pop_size',\n",
        "        'penalty_factor', 'our_ga_best_solution', 'our_ga_best_value',\n",
        "        'cluster_best_value', 'ga_cluster_solution', 'iters', 'cluster_time',\n",
        "        'memory used (mb)', 'profe_ga_best_value', 'profe_ga_best_solution',\n",
        "        'profe_qbf_best_value', 'profe_qbf_best_solution',\n",
        "        'profe_gc_best_value', 'profe_gc_best_solution',\n",
        "        'profe_gn_best_value', 'profe_gn_best_solution',\n",
        "        'Error_Og_ga_Vs_our_ga', 'Error_Absoluto_Og_ga_Vs_our_ga',\n",
        "        'Error_Og_qbf_Vs_our_ga', 'Error_Absoluto_Og_qbf_Vs_our_ga',\n",
        "        'Error_Og_gc_Vs_our_ga', 'Error_Absoluto_Og_gc_Vs_our_ga',\n",
        "        'Error_Og_gn_Vs_our_ga', 'Error_Absoluto_Og_gn_Vs_our_ga'\n",
        "    ]\n",
        "]"
      ],
      "metadata": {
        "id": "E9eIULmdjGLB"
      },
      "execution_count": 297,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "hard_uniform_swap_df_ordenado"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 912
        },
        "id": "FeHHLpH1MRHz",
        "outputId": "3994b1a7-0b3a-4d86-dcb0-ae42dc7e38b3"
      },
      "execution_count": 298,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                         cluster_name  fuel_price  \\\n",
              "0       small-3s-4p-f1_10-q1_4-random           1   \n",
              "1       small-3s-4p-f1_10-q1_4-random           1   \n",
              "2       small-3s-4p-f1_10-q1_4-random           6   \n",
              "3       small-3s-4p-f1_10-q1_4-random           6   \n",
              "4     small-5s-10p-f0_10-q1_10-random           0   \n",
              "..                                ...         ...   \n",
              "131  big-100s-300p-f0_10-q1_20-random           5   \n",
              "132  big-100s-300p-f0_10-q1_20-random           9   \n",
              "133  big-100s-300p-f0_10-q1_20-random           9   \n",
              "134  big-100s-300p-f0_10-q1_20-random           9   \n",
              "135  big-100s-300p-f0_10-q1_20-random           9   \n",
              "\n",
              "                                                 query mutation_method  \\\n",
              "0                            ['Purificadores de aire']            swap   \n",
              "1    ['Purificadores de aire', 'Aceite de girasol',...            swap   \n",
              "2                            ['Purificadores de aire']            swap   \n",
              "3    ['Purificadores de aire', 'Pasta de dientes', ...            swap   \n",
              "4                                      ['Televisores']            swap   \n",
              "..                                                 ...             ...   \n",
              "131  ['Gasas', 'Alcohol', 'Té negro', 'Tijeras', 'T...            swap   \n",
              "132                           ['Detergente para ropa']            swap   \n",
              "133  ['Mermelada de durazno', 'Pañales', 'Leche ent...            swap   \n",
              "134  ['Galletas de chocolate', 'Pechugas de pollo',...            swap   \n",
              "135  ['Edredones', 'Planchas de pelo', 'Rizadores d...            swap   \n",
              "\n",
              "     mutation_prob selection_method  selection_prob  pop_size  penalty_factor  \\\n",
              "0              0.1             hard            0.66        10             9.0   \n",
              "1              0.1             hard            0.66        10             9.0   \n",
              "2              0.1             hard            0.66        10             9.0   \n",
              "3              0.1             hard            0.66        10             9.0   \n",
              "4              0.1             hard            0.66        10             9.0   \n",
              "..             ...              ...             ...       ...             ...   \n",
              "131            0.2             hard            0.40        80            27.0   \n",
              "132            0.2             hard            0.40        80            27.0   \n",
              "133            0.2             hard            0.40        80            27.0   \n",
              "134            0.2             hard            0.40        80            27.0   \n",
              "135            0.2             hard            0.40        80            27.0   \n",
              "\n",
              "                                  our_ga_best_solution  ...  \\\n",
              "0    [['Supermercado Nacional', 'Purificadores de a...  ...   \n",
              "1    [['Supermercado Nacional', 'Alfombras'], ['Sup...  ...   \n",
              "2    [['Supermercado Nacional', 'Purificadores de a...  ...   \n",
              "3    [['Jumbo', 'Pasta de dientes'], ['Jumbo', 'Ace...  ...   \n",
              "4                      [['Super Pola', 'Televisores']]  ...   \n",
              "..                                                 ...  ...   \n",
              "131  [['Supermercado El Bienvenido', 'Pimienta negr...  ...   \n",
              "132  [['Supermercado El Bienvenido', 'Detergente pa...  ...   \n",
              "133  [['Supermercado El Bienvenido', 'Filete de res...  ...   \n",
              "134  [['Supermercado Market Center', 'Coliflor'], [...  ...   \n",
              "135  [['Supermercado El Bienvenido', 'Cobijas'], ['...  ...   \n",
              "\n",
              "     profe_gn_best_value                             profe_gn_best_solution  \\\n",
              "0                4401.99  [array(['Supermercado Nacional', 'Purificadore...   \n",
              "1               12817.96  [array(['Supermercado Nacional', 'Alfombras'],...   \n",
              "2                4501.99  [array(['Supermercado Nacional', 'Purificadore...   \n",
              "3               12917.96  [array(['Supermercado Nacional', 'Alfombras'],...   \n",
              "4                3638.99    [array(['Bravo', 'Televisores'], dtype=object)]   \n",
              "..                   ...                                                ...   \n",
              "131             50339.84  [array(['Supermercado La Perla', 'Pimienta neg...   \n",
              "132               648.99  [array(['Supermercado Plaza Oriental', 'Deterg...   \n",
              "133             12257.94  [array(['Supermercado La Perla', 'Mermelada de...   \n",
              "134             24586.89  [array(['Supermercado La Perla', 'Cargadores d...   \n",
              "135             34067.84  [array(['Supermercado La Perla', 'Rizadores de...   \n",
              "\n",
              "    Error_Og_ga_Vs_our_ga  Error_Absoluto_Og_ga_Vs_our_ga  \\\n",
              "0                    0.00                            0.00   \n",
              "1                    1.00                            1.00   \n",
              "2                    0.00                            0.00   \n",
              "3                    6.00                            6.00   \n",
              "4                    0.00                            0.00   \n",
              "..                    ...                             ...   \n",
              "131             -12922.99                        12922.99   \n",
              "132              -1685.00                         1685.00   \n",
              "133              -5438.00                         5438.00   \n",
              "134             -14586.00                        14586.00   \n",
              "135             -26075.00                        26075.00   \n",
              "\n",
              "     Error_Og_qbf_Vs_our_ga  Error_Absoluto_Og_qbf_Vs_our_ga  \\\n",
              "0                       0.0                              0.0   \n",
              "1                     -12.0                             12.0   \n",
              "2                       0.0                              0.0   \n",
              "3                     -72.0                             72.0   \n",
              "4                       0.0                              0.0   \n",
              "..                      ...                              ...   \n",
              "131                     NaN                              NaN   \n",
              "132                     NaN                              NaN   \n",
              "133                     NaN                              NaN   \n",
              "134                     NaN                              NaN   \n",
              "135                     NaN                              NaN   \n",
              "\n",
              "     Error_Og_gc_Vs_our_ga Error_Absoluto_Og_gc_Vs_our_ga  \\\n",
              "0                     0.00                           0.00   \n",
              "1                   -12.00                          12.00   \n",
              "2                     0.00                           0.00   \n",
              "3                   -72.00                          72.00   \n",
              "4                     0.00                           0.00   \n",
              "..                     ...                            ...   \n",
              "131              -26331.99                       26331.99   \n",
              "132               -1685.00                        1685.00   \n",
              "133               -6513.00                        6513.00   \n",
              "134              -21741.00                       21741.00   \n",
              "135              -39534.00                       39534.00   \n",
              "\n",
              "     Error_Og_gn_Vs_our_ga Error_Absoluto_Og_gn_Vs_our_ga  \n",
              "0                     0.00                           0.00  \n",
              "1                  1535.00                        1535.00  \n",
              "2                     0.00                           0.00  \n",
              "3                  1445.00                        1445.00  \n",
              "4                  3019.00                        3019.00  \n",
              "..                     ...                            ...  \n",
              "131               21711.01                       21711.01  \n",
              "132               -1143.00                        1143.00  \n",
              "133                4744.00                        4744.00  \n",
              "134                1297.00                        1297.00  \n",
              "135               -8292.00                        8292.00  \n",
              "\n",
              "[136 rows x 32 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e2562c2d-6789-4ff5-850c-b79584101a84\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>cluster_name</th>\n",
              "      <th>fuel_price</th>\n",
              "      <th>query</th>\n",
              "      <th>mutation_method</th>\n",
              "      <th>mutation_prob</th>\n",
              "      <th>selection_method</th>\n",
              "      <th>selection_prob</th>\n",
              "      <th>pop_size</th>\n",
              "      <th>penalty_factor</th>\n",
              "      <th>our_ga_best_solution</th>\n",
              "      <th>...</th>\n",
              "      <th>profe_gn_best_value</th>\n",
              "      <th>profe_gn_best_solution</th>\n",
              "      <th>Error_Og_ga_Vs_our_ga</th>\n",
              "      <th>Error_Absoluto_Og_ga_Vs_our_ga</th>\n",
              "      <th>Error_Og_qbf_Vs_our_ga</th>\n",
              "      <th>Error_Absoluto_Og_qbf_Vs_our_ga</th>\n",
              "      <th>Error_Og_gc_Vs_our_ga</th>\n",
              "      <th>Error_Absoluto_Og_gc_Vs_our_ga</th>\n",
              "      <th>Error_Og_gn_Vs_our_ga</th>\n",
              "      <th>Error_Absoluto_Og_gn_Vs_our_ga</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>1</td>\n",
              "      <td>['Purificadores de aire']</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.1</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.66</td>\n",
              "      <td>10</td>\n",
              "      <td>9.0</td>\n",
              "      <td>[['Supermercado Nacional', 'Purificadores de a...</td>\n",
              "      <td>...</td>\n",
              "      <td>4401.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>1</td>\n",
              "      <td>['Purificadores de aire', 'Aceite de girasol',...</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.1</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.66</td>\n",
              "      <td>10</td>\n",
              "      <td>9.0</td>\n",
              "      <td>[['Supermercado Nacional', 'Alfombras'], ['Sup...</td>\n",
              "      <td>...</td>\n",
              "      <td>12817.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Alfombras'],...</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>-12.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>-12.00</td>\n",
              "      <td>12.00</td>\n",
              "      <td>1535.00</td>\n",
              "      <td>1535.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>6</td>\n",
              "      <td>['Purificadores de aire']</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.1</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.66</td>\n",
              "      <td>10</td>\n",
              "      <td>9.0</td>\n",
              "      <td>[['Supermercado Nacional', 'Purificadores de a...</td>\n",
              "      <td>...</td>\n",
              "      <td>4501.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>6</td>\n",
              "      <td>['Purificadores de aire', 'Pasta de dientes', ...</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.1</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.66</td>\n",
              "      <td>10</td>\n",
              "      <td>9.0</td>\n",
              "      <td>[['Jumbo', 'Pasta de dientes'], ['Jumbo', 'Ace...</td>\n",
              "      <td>...</td>\n",
              "      <td>12917.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Alfombras'],...</td>\n",
              "      <td>6.00</td>\n",
              "      <td>6.00</td>\n",
              "      <td>-72.0</td>\n",
              "      <td>72.0</td>\n",
              "      <td>-72.00</td>\n",
              "      <td>72.00</td>\n",
              "      <td>1445.00</td>\n",
              "      <td>1445.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>small-5s-10p-f0_10-q1_10-random</td>\n",
              "      <td>0</td>\n",
              "      <td>['Televisores']</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.1</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.66</td>\n",
              "      <td>10</td>\n",
              "      <td>9.0</td>\n",
              "      <td>[['Super Pola', 'Televisores']]</td>\n",
              "      <td>...</td>\n",
              "      <td>3638.99</td>\n",
              "      <td>[array(['Bravo', 'Televisores'], dtype=object)]</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3019.00</td>\n",
              "      <td>3019.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>big-100s-300p-f0_10-q1_20-random</td>\n",
              "      <td>5</td>\n",
              "      <td>['Gasas', 'Alcohol', 'Té negro', 'Tijeras', 'T...</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.2</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.40</td>\n",
              "      <td>80</td>\n",
              "      <td>27.0</td>\n",
              "      <td>[['Supermercado El Bienvenido', 'Pimienta negr...</td>\n",
              "      <td>...</td>\n",
              "      <td>50339.84</td>\n",
              "      <td>[array(['Supermercado La Perla', 'Pimienta neg...</td>\n",
              "      <td>-12922.99</td>\n",
              "      <td>12922.99</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-26331.99</td>\n",
              "      <td>26331.99</td>\n",
              "      <td>21711.01</td>\n",
              "      <td>21711.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>132</th>\n",
              "      <td>big-100s-300p-f0_10-q1_20-random</td>\n",
              "      <td>9</td>\n",
              "      <td>['Detergente para ropa']</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.2</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.40</td>\n",
              "      <td>80</td>\n",
              "      <td>27.0</td>\n",
              "      <td>[['Supermercado El Bienvenido', 'Detergente pa...</td>\n",
              "      <td>...</td>\n",
              "      <td>648.99</td>\n",
              "      <td>[array(['Supermercado Plaza Oriental', 'Deterg...</td>\n",
              "      <td>-1685.00</td>\n",
              "      <td>1685.00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-1685.00</td>\n",
              "      <td>1685.00</td>\n",
              "      <td>-1143.00</td>\n",
              "      <td>1143.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>big-100s-300p-f0_10-q1_20-random</td>\n",
              "      <td>9</td>\n",
              "      <td>['Mermelada de durazno', 'Pañales', 'Leche ent...</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.2</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.40</td>\n",
              "      <td>80</td>\n",
              "      <td>27.0</td>\n",
              "      <td>[['Supermercado El Bienvenido', 'Filete de res...</td>\n",
              "      <td>...</td>\n",
              "      <td>12257.94</td>\n",
              "      <td>[array(['Supermercado La Perla', 'Mermelada de...</td>\n",
              "      <td>-5438.00</td>\n",
              "      <td>5438.00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-6513.00</td>\n",
              "      <td>6513.00</td>\n",
              "      <td>4744.00</td>\n",
              "      <td>4744.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>big-100s-300p-f0_10-q1_20-random</td>\n",
              "      <td>9</td>\n",
              "      <td>['Galletas de chocolate', 'Pechugas de pollo',...</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.2</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.40</td>\n",
              "      <td>80</td>\n",
              "      <td>27.0</td>\n",
              "      <td>[['Supermercado Market Center', 'Coliflor'], [...</td>\n",
              "      <td>...</td>\n",
              "      <td>24586.89</td>\n",
              "      <td>[array(['Supermercado La Perla', 'Cargadores d...</td>\n",
              "      <td>-14586.00</td>\n",
              "      <td>14586.00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-21741.00</td>\n",
              "      <td>21741.00</td>\n",
              "      <td>1297.00</td>\n",
              "      <td>1297.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135</th>\n",
              "      <td>big-100s-300p-f0_10-q1_20-random</td>\n",
              "      <td>9</td>\n",
              "      <td>['Edredones', 'Planchas de pelo', 'Rizadores d...</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.2</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.40</td>\n",
              "      <td>80</td>\n",
              "      <td>27.0</td>\n",
              "      <td>[['Supermercado El Bienvenido', 'Cobijas'], ['...</td>\n",
              "      <td>...</td>\n",
              "      <td>34067.84</td>\n",
              "      <td>[array(['Supermercado La Perla', 'Rizadores de...</td>\n",
              "      <td>-26075.00</td>\n",
              "      <td>26075.00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-39534.00</td>\n",
              "      <td>39534.00</td>\n",
              "      <td>-8292.00</td>\n",
              "      <td>8292.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>136 rows × 32 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2562c2d-6789-4ff5-850c-b79584101a84')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e2562c2d-6789-4ff5-850c-b79584101a84 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e2562c2d-6789-4ff5-850c-b79584101a84');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e23dfd2c-3fbe-4250-b79a-feea028da12f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e23dfd2c-3fbe-4250-b79a-feea028da12f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e23dfd2c-3fbe-4250-b79a-feea028da12f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_5375abc5-073a-415f-8d4d-2394cfe0b409\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('hard_uniform_swap_df_ordenado')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_5375abc5-073a-415f-8d4d-2394cfe0b409 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('hard_uniform_swap_df_ordenado');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "hard_uniform_swap_df_ordenado"
            }
          },
          "metadata": {},
          "execution_count": 298
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "hard_uniform_swap_df_final = hard_uniform_swap_df_ordenado.copy()"
      ],
      "metadata": {
        "id": "KuWUT_CXkJvl"
      },
      "execution_count": 299,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "base_dir = \"/content/drive/MyDrive/Proyecto - Compra Genética/Validación\"\n",
        "target_dir = os.path.join(base_dir, \"Lo Mejor\")\n",
        "filename = \"hard_uniform_swap_df.csv\"\n",
        "\n",
        "if os.getcwd() != base_dir:\n",
        "    os.chdir(base_dir)\n",
        "\n",
        "os.makedirs(target_dir, exist_ok=True)\n",
        "hard_uniform_swap_df_final.to_csv(os.path.join(target_dir, filename), index=False)"
      ],
      "metadata": {
        "id": "ds6ckZ6dkOMM"
      },
      "execution_count": 300,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "hard_uniform_swap_df_final"
      ],
      "metadata": {
        "id": "eeHpohQyksAi",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 912
        },
        "outputId": "56c6e288-eeae-4772-ae80-f0efe8382442"
      },
      "execution_count": 301,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                         cluster_name  fuel_price  \\\n",
              "0       small-3s-4p-f1_10-q1_4-random           1   \n",
              "1       small-3s-4p-f1_10-q1_4-random           1   \n",
              "2       small-3s-4p-f1_10-q1_4-random           6   \n",
              "3       small-3s-4p-f1_10-q1_4-random           6   \n",
              "4     small-5s-10p-f0_10-q1_10-random           0   \n",
              "..                                ...         ...   \n",
              "131  big-100s-300p-f0_10-q1_20-random           5   \n",
              "132  big-100s-300p-f0_10-q1_20-random           9   \n",
              "133  big-100s-300p-f0_10-q1_20-random           9   \n",
              "134  big-100s-300p-f0_10-q1_20-random           9   \n",
              "135  big-100s-300p-f0_10-q1_20-random           9   \n",
              "\n",
              "                                                 query mutation_method  \\\n",
              "0                            ['Purificadores de aire']            swap   \n",
              "1    ['Purificadores de aire', 'Aceite de girasol',...            swap   \n",
              "2                            ['Purificadores de aire']            swap   \n",
              "3    ['Purificadores de aire', 'Pasta de dientes', ...            swap   \n",
              "4                                      ['Televisores']            swap   \n",
              "..                                                 ...             ...   \n",
              "131  ['Gasas', 'Alcohol', 'Té negro', 'Tijeras', 'T...            swap   \n",
              "132                           ['Detergente para ropa']            swap   \n",
              "133  ['Mermelada de durazno', 'Pañales', 'Leche ent...            swap   \n",
              "134  ['Galletas de chocolate', 'Pechugas de pollo',...            swap   \n",
              "135  ['Edredones', 'Planchas de pelo', 'Rizadores d...            swap   \n",
              "\n",
              "     mutation_prob selection_method  selection_prob  pop_size  penalty_factor  \\\n",
              "0              0.1             hard            0.66        10             9.0   \n",
              "1              0.1             hard            0.66        10             9.0   \n",
              "2              0.1             hard            0.66        10             9.0   \n",
              "3              0.1             hard            0.66        10             9.0   \n",
              "4              0.1             hard            0.66        10             9.0   \n",
              "..             ...              ...             ...       ...             ...   \n",
              "131            0.2             hard            0.40        80            27.0   \n",
              "132            0.2             hard            0.40        80            27.0   \n",
              "133            0.2             hard            0.40        80            27.0   \n",
              "134            0.2             hard            0.40        80            27.0   \n",
              "135            0.2             hard            0.40        80            27.0   \n",
              "\n",
              "                                  our_ga_best_solution  ...  \\\n",
              "0    [['Supermercado Nacional', 'Purificadores de a...  ...   \n",
              "1    [['Supermercado Nacional', 'Alfombras'], ['Sup...  ...   \n",
              "2    [['Supermercado Nacional', 'Purificadores de a...  ...   \n",
              "3    [['Jumbo', 'Pasta de dientes'], ['Jumbo', 'Ace...  ...   \n",
              "4                      [['Super Pola', 'Televisores']]  ...   \n",
              "..                                                 ...  ...   \n",
              "131  [['Supermercado El Bienvenido', 'Pimienta negr...  ...   \n",
              "132  [['Supermercado El Bienvenido', 'Detergente pa...  ...   \n",
              "133  [['Supermercado El Bienvenido', 'Filete de res...  ...   \n",
              "134  [['Supermercado Market Center', 'Coliflor'], [...  ...   \n",
              "135  [['Supermercado El Bienvenido', 'Cobijas'], ['...  ...   \n",
              "\n",
              "     profe_gn_best_value                             profe_gn_best_solution  \\\n",
              "0                4401.99  [array(['Supermercado Nacional', 'Purificadore...   \n",
              "1               12817.96  [array(['Supermercado Nacional', 'Alfombras'],...   \n",
              "2                4501.99  [array(['Supermercado Nacional', 'Purificadore...   \n",
              "3               12917.96  [array(['Supermercado Nacional', 'Alfombras'],...   \n",
              "4                3638.99    [array(['Bravo', 'Televisores'], dtype=object)]   \n",
              "..                   ...                                                ...   \n",
              "131             50339.84  [array(['Supermercado La Perla', 'Pimienta neg...   \n",
              "132               648.99  [array(['Supermercado Plaza Oriental', 'Deterg...   \n",
              "133             12257.94  [array(['Supermercado La Perla', 'Mermelada de...   \n",
              "134             24586.89  [array(['Supermercado La Perla', 'Cargadores d...   \n",
              "135             34067.84  [array(['Supermercado La Perla', 'Rizadores de...   \n",
              "\n",
              "    Error_Og_ga_Vs_our_ga  Error_Absoluto_Og_ga_Vs_our_ga  \\\n",
              "0                    0.00                            0.00   \n",
              "1                    1.00                            1.00   \n",
              "2                    0.00                            0.00   \n",
              "3                    6.00                            6.00   \n",
              "4                    0.00                            0.00   \n",
              "..                    ...                             ...   \n",
              "131             -12922.99                        12922.99   \n",
              "132              -1685.00                         1685.00   \n",
              "133              -5438.00                         5438.00   \n",
              "134             -14586.00                        14586.00   \n",
              "135             -26075.00                        26075.00   \n",
              "\n",
              "     Error_Og_qbf_Vs_our_ga  Error_Absoluto_Og_qbf_Vs_our_ga  \\\n",
              "0                       0.0                              0.0   \n",
              "1                     -12.0                             12.0   \n",
              "2                       0.0                              0.0   \n",
              "3                     -72.0                             72.0   \n",
              "4                       0.0                              0.0   \n",
              "..                      ...                              ...   \n",
              "131                     NaN                              NaN   \n",
              "132                     NaN                              NaN   \n",
              "133                     NaN                              NaN   \n",
              "134                     NaN                              NaN   \n",
              "135                     NaN                              NaN   \n",
              "\n",
              "     Error_Og_gc_Vs_our_ga Error_Absoluto_Og_gc_Vs_our_ga  \\\n",
              "0                     0.00                           0.00   \n",
              "1                   -12.00                          12.00   \n",
              "2                     0.00                           0.00   \n",
              "3                   -72.00                          72.00   \n",
              "4                     0.00                           0.00   \n",
              "..                     ...                            ...   \n",
              "131              -26331.99                       26331.99   \n",
              "132               -1685.00                        1685.00   \n",
              "133               -6513.00                        6513.00   \n",
              "134              -21741.00                       21741.00   \n",
              "135              -39534.00                       39534.00   \n",
              "\n",
              "     Error_Og_gn_Vs_our_ga Error_Absoluto_Og_gn_Vs_our_ga  \n",
              "0                     0.00                           0.00  \n",
              "1                  1535.00                        1535.00  \n",
              "2                     0.00                           0.00  \n",
              "3                  1445.00                        1445.00  \n",
              "4                  3019.00                        3019.00  \n",
              "..                     ...                            ...  \n",
              "131               21711.01                       21711.01  \n",
              "132               -1143.00                        1143.00  \n",
              "133                4744.00                        4744.00  \n",
              "134                1297.00                        1297.00  \n",
              "135               -8292.00                        8292.00  \n",
              "\n",
              "[136 rows x 32 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-066f67de-b4ef-44d0-bc7a-7e036b45021b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>cluster_name</th>\n",
              "      <th>fuel_price</th>\n",
              "      <th>query</th>\n",
              "      <th>mutation_method</th>\n",
              "      <th>mutation_prob</th>\n",
              "      <th>selection_method</th>\n",
              "      <th>selection_prob</th>\n",
              "      <th>pop_size</th>\n",
              "      <th>penalty_factor</th>\n",
              "      <th>our_ga_best_solution</th>\n",
              "      <th>...</th>\n",
              "      <th>profe_gn_best_value</th>\n",
              "      <th>profe_gn_best_solution</th>\n",
              "      <th>Error_Og_ga_Vs_our_ga</th>\n",
              "      <th>Error_Absoluto_Og_ga_Vs_our_ga</th>\n",
              "      <th>Error_Og_qbf_Vs_our_ga</th>\n",
              "      <th>Error_Absoluto_Og_qbf_Vs_our_ga</th>\n",
              "      <th>Error_Og_gc_Vs_our_ga</th>\n",
              "      <th>Error_Absoluto_Og_gc_Vs_our_ga</th>\n",
              "      <th>Error_Og_gn_Vs_our_ga</th>\n",
              "      <th>Error_Absoluto_Og_gn_Vs_our_ga</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>1</td>\n",
              "      <td>['Purificadores de aire']</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.1</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.66</td>\n",
              "      <td>10</td>\n",
              "      <td>9.0</td>\n",
              "      <td>[['Supermercado Nacional', 'Purificadores de a...</td>\n",
              "      <td>...</td>\n",
              "      <td>4401.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>1</td>\n",
              "      <td>['Purificadores de aire', 'Aceite de girasol',...</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.1</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.66</td>\n",
              "      <td>10</td>\n",
              "      <td>9.0</td>\n",
              "      <td>[['Supermercado Nacional', 'Alfombras'], ['Sup...</td>\n",
              "      <td>...</td>\n",
              "      <td>12817.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Alfombras'],...</td>\n",
              "      <td>1.00</td>\n",
              "      <td>1.00</td>\n",
              "      <td>-12.0</td>\n",
              "      <td>12.0</td>\n",
              "      <td>-12.00</td>\n",
              "      <td>12.00</td>\n",
              "      <td>1535.00</td>\n",
              "      <td>1535.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>6</td>\n",
              "      <td>['Purificadores de aire']</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.1</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.66</td>\n",
              "      <td>10</td>\n",
              "      <td>9.0</td>\n",
              "      <td>[['Supermercado Nacional', 'Purificadores de a...</td>\n",
              "      <td>...</td>\n",
              "      <td>4501.99</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Purificadore...</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>small-3s-4p-f1_10-q1_4-random</td>\n",
              "      <td>6</td>\n",
              "      <td>['Purificadores de aire', 'Pasta de dientes', ...</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.1</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.66</td>\n",
              "      <td>10</td>\n",
              "      <td>9.0</td>\n",
              "      <td>[['Jumbo', 'Pasta de dientes'], ['Jumbo', 'Ace...</td>\n",
              "      <td>...</td>\n",
              "      <td>12917.96</td>\n",
              "      <td>[array(['Supermercado Nacional', 'Alfombras'],...</td>\n",
              "      <td>6.00</td>\n",
              "      <td>6.00</td>\n",
              "      <td>-72.0</td>\n",
              "      <td>72.0</td>\n",
              "      <td>-72.00</td>\n",
              "      <td>72.00</td>\n",
              "      <td>1445.00</td>\n",
              "      <td>1445.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>small-5s-10p-f0_10-q1_10-random</td>\n",
              "      <td>0</td>\n",
              "      <td>['Televisores']</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.1</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.66</td>\n",
              "      <td>10</td>\n",
              "      <td>9.0</td>\n",
              "      <td>[['Super Pola', 'Televisores']]</td>\n",
              "      <td>...</td>\n",
              "      <td>3638.99</td>\n",
              "      <td>[array(['Bravo', 'Televisores'], dtype=object)]</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3019.00</td>\n",
              "      <td>3019.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>131</th>\n",
              "      <td>big-100s-300p-f0_10-q1_20-random</td>\n",
              "      <td>5</td>\n",
              "      <td>['Gasas', 'Alcohol', 'Té negro', 'Tijeras', 'T...</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.2</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.40</td>\n",
              "      <td>80</td>\n",
              "      <td>27.0</td>\n",
              "      <td>[['Supermercado El Bienvenido', 'Pimienta negr...</td>\n",
              "      <td>...</td>\n",
              "      <td>50339.84</td>\n",
              "      <td>[array(['Supermercado La Perla', 'Pimienta neg...</td>\n",
              "      <td>-12922.99</td>\n",
              "      <td>12922.99</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-26331.99</td>\n",
              "      <td>26331.99</td>\n",
              "      <td>21711.01</td>\n",
              "      <td>21711.01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>132</th>\n",
              "      <td>big-100s-300p-f0_10-q1_20-random</td>\n",
              "      <td>9</td>\n",
              "      <td>['Detergente para ropa']</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.2</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.40</td>\n",
              "      <td>80</td>\n",
              "      <td>27.0</td>\n",
              "      <td>[['Supermercado El Bienvenido', 'Detergente pa...</td>\n",
              "      <td>...</td>\n",
              "      <td>648.99</td>\n",
              "      <td>[array(['Supermercado Plaza Oriental', 'Deterg...</td>\n",
              "      <td>-1685.00</td>\n",
              "      <td>1685.00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-1685.00</td>\n",
              "      <td>1685.00</td>\n",
              "      <td>-1143.00</td>\n",
              "      <td>1143.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>133</th>\n",
              "      <td>big-100s-300p-f0_10-q1_20-random</td>\n",
              "      <td>9</td>\n",
              "      <td>['Mermelada de durazno', 'Pañales', 'Leche ent...</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.2</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.40</td>\n",
              "      <td>80</td>\n",
              "      <td>27.0</td>\n",
              "      <td>[['Supermercado El Bienvenido', 'Filete de res...</td>\n",
              "      <td>...</td>\n",
              "      <td>12257.94</td>\n",
              "      <td>[array(['Supermercado La Perla', 'Mermelada de...</td>\n",
              "      <td>-5438.00</td>\n",
              "      <td>5438.00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-6513.00</td>\n",
              "      <td>6513.00</td>\n",
              "      <td>4744.00</td>\n",
              "      <td>4744.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>134</th>\n",
              "      <td>big-100s-300p-f0_10-q1_20-random</td>\n",
              "      <td>9</td>\n",
              "      <td>['Galletas de chocolate', 'Pechugas de pollo',...</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.2</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.40</td>\n",
              "      <td>80</td>\n",
              "      <td>27.0</td>\n",
              "      <td>[['Supermercado Market Center', 'Coliflor'], [...</td>\n",
              "      <td>...</td>\n",
              "      <td>24586.89</td>\n",
              "      <td>[array(['Supermercado La Perla', 'Cargadores d...</td>\n",
              "      <td>-14586.00</td>\n",
              "      <td>14586.00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-21741.00</td>\n",
              "      <td>21741.00</td>\n",
              "      <td>1297.00</td>\n",
              "      <td>1297.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>135</th>\n",
              "      <td>big-100s-300p-f0_10-q1_20-random</td>\n",
              "      <td>9</td>\n",
              "      <td>['Edredones', 'Planchas de pelo', 'Rizadores d...</td>\n",
              "      <td>swap</td>\n",
              "      <td>0.2</td>\n",
              "      <td>hard</td>\n",
              "      <td>0.40</td>\n",
              "      <td>80</td>\n",
              "      <td>27.0</td>\n",
              "      <td>[['Supermercado El Bienvenido', 'Cobijas'], ['...</td>\n",
              "      <td>...</td>\n",
              "      <td>34067.84</td>\n",
              "      <td>[array(['Supermercado La Perla', 'Rizadores de...</td>\n",
              "      <td>-26075.00</td>\n",
              "      <td>26075.00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>-39534.00</td>\n",
              "      <td>39534.00</td>\n",
              "      <td>-8292.00</td>\n",
              "      <td>8292.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>136 rows × 32 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-066f67de-b4ef-44d0-bc7a-7e036b45021b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-066f67de-b4ef-44d0-bc7a-7e036b45021b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-066f67de-b4ef-44d0-bc7a-7e036b45021b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-32cb50f2-5eca-4c12-b9bb-1fd732407581\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-32cb50f2-5eca-4c12-b9bb-1fd732407581')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-32cb50f2-5eca-4c12-b9bb-1fd732407581 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_701db57b-492e-4967-8445-2aca5b645fa8\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('hard_uniform_swap_df_final')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_701db57b-492e-4967-8445-2aca5b645fa8 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('hard_uniform_swap_df_final');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "hard_uniform_swap_df_final"
            }
          },
          "metadata": {},
          "execution_count": 301
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## FIN\n",
        "\n",
        "### Contribuyentes\n",
        "\n",
        "#### Darwin Mendez:\n",
        "* GitHub:  https://github.com/Daarwinmendez\n",
        "* LinkedIn: www.linkedin.com/in/darwin-mendez-061881185\n",
        "\n",
        "#### Camily García\n",
        "* GitHub: https://github.com/CamyG18\n",
        "* LinkedIn: https://www.linkedin.com/in/camily-garcía-7b4632319/\n",
        "\n",
        "\n",
        "#### Michael García\n",
        "* GitHub: https://github.com/MichaGF0305\n",
        "* LinkedIn: https://www.linkedin.com/in/michael-david-garc%C3%ADa-feliz-37446b296/\n",
        "\n",
        "\n",
        "#### Roither Sanchez\n",
        "* GitHub: https://github.com/XTrollaX\n",
        "* LinkedIn: https://www.linkedin.com/in/roither-sànchez-sosa-b77b37244/\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "mmO_2BUPmQzJ"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "wNGLDb8mmRzR"
      },
      "execution_count": 301,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "collapsed_sections": [
        "ojjz28fjNUHT",
        "fNQT1Vk1Nk8F",
        "BamttTJmN6Er",
        "r7SE0nO1OJJ4",
        "21o6B1Qh_PGq",
        "jAI3lcPEk7yM",
        "39pUpsN5k_MI",
        "E-cQ6ODalCLJ",
        "YaY6v3T5OgN4",
        "as4hwGR6FtjL",
        "FzhwaSsHw42G",
        "_8e7Dhc2PvnT",
        "E0Rt8Yl6Pvnu",
        "hfrhNQV_QS3z",
        "WkqUvjIxQS35",
        "ZKoZGZB3QhmP",
        "R8KMlKRHQhmT",
        "-lgxyDMbQ76A",
        "_h0kGediQ76F",
        "02BwGuhyRUTT",
        "qRxbA_r9RUTY",
        "5biFy1C3RtbK",
        "2VwbPhrvR9wO",
        "QC0cwh2nR9wX"
      ],
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}